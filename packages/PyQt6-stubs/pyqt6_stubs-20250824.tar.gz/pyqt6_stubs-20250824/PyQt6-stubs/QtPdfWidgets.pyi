# The PEP 484 type hints stub file for the QtPdfWidgets module.
#
# Generated by SIP 6.12.0
#
# Copyright (c) 2025 Riverbank Computing Limited <info@riverbankcomputing.com>
#
# This file is part of PyQt6.
#
# This file may be used under the terms of the GNU General Public License
# version 3.0 as published by the Free Software Foundation and appearing in
# the file LICENSE included in the packaging of this file.  Please review the
# following information to ensure the GNU General Public License version 3.0
# requirements will be met: http://www.gnu.org/copyleft/gpl.html.
#
# If you do not wish to use this file under the terms of the GPL version 3.0
# then you may purchase a commercial license.  For more information contact
# info@riverbankcomputing.com.
#
# This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
# WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.

import collections
import collections.abc
import enum
import typing
from typing import Any

from PyQt6 import QtCore, QtGui, QtPdf, QtWidgets

# Support for QDate, QDateTime and QTime.

# Convenient type aliases.
type PYQT_SIGNAL = QtCore.pyqtSignal | QtCore.pyqtBoundSignal
type PYQT_SLOT = collections.abc.Callable[..., Any] | QtCore.pyqtBoundSignal

class QPdfPageSelector(QtWidgets.QWidget):
    def __init__(self, parent: QtWidgets.QWidget | None) -> None: ...

    currentPageLabelChanged: typing.ClassVar[QtCore.pyqtSignal]
    currentPageChanged: typing.ClassVar[QtCore.pyqtSignal]
    documentChanged: typing.ClassVar[QtCore.pyqtSignal]
    def setCurrentPage(self, index: int) -> None: ...
    def currentPageLabel(self) -> str: ...
    def currentPage(self) -> int: ...
    def document(self) -> QtPdf.QPdfDocument | None: ...
    def setDocument(self, document: QtPdf.QPdfDocument | None) -> None: ...

class QPdfView(QtWidgets.QAbstractScrollArea):
    class ZoomMode(enum.Enum):
        Custom = ...
        FitToWidth = ...
        FitInView = ...

    class PageMode(enum.Enum):
        SinglePage = ...
        MultiPage = ...

    def __init__(self, parent: QtWidgets.QWidget | None) -> None: ...
    def mouseReleaseEvent(self, event: QtGui.QMouseEvent | None) -> None: ...
    def mouseMoveEvent(self, event: QtGui.QMouseEvent | None) -> None: ...
    def mousePressEvent(self, event: QtGui.QMouseEvent | None) -> None: ...
    currentSearchResultIndexChanged: typing.ClassVar[QtCore.pyqtSignal]
    searchModelChanged: typing.ClassVar[QtCore.pyqtSignal]
    def setCurrentSearchResultIndex(self, currentResult: int) -> None: ...
    def currentSearchResultIndex(self) -> int: ...
    def setSearchModel(
        self, searchModel: QtPdf.QPdfSearchModel | None
    ) -> None: ...
    def searchModel(self) -> QtPdf.QPdfSearchModel | None: ...
    def scrollContentsBy(self, dx: int, dy: int) -> None: ...
    def resizeEvent(self, event: QtGui.QResizeEvent | None) -> None: ...
    def paintEvent(self, event: QtGui.QPaintEvent | None) -> None: ...
    documentMarginsChanged: typing.ClassVar[QtCore.pyqtSignal]
    pageSpacingChanged: typing.ClassVar[QtCore.pyqtSignal]
    zoomFactorChanged: typing.ClassVar[QtCore.pyqtSignal]
    zoomModeChanged: typing.ClassVar[QtCore.pyqtSignal]
    pageModeChanged: typing.ClassVar[QtCore.pyqtSignal]
    documentChanged: typing.ClassVar[QtCore.pyqtSignal]
    def setZoomFactor(self, factor: float) -> None: ...
    def setZoomMode(self, mode: QPdfView.ZoomMode) -> None: ...
    def setPageMode(self, mode: QPdfView.PageMode) -> None: ...
    def setDocumentMargins(self, margins: QtCore.QMargins) -> None: ...
    def documentMargins(self) -> QtCore.QMargins: ...
    def setPageSpacing(self, spacing: int) -> None: ...
    def pageSpacing(self) -> int: ...
    def zoomFactor(self) -> float: ...
    def zoomMode(self) -> QPdfView.ZoomMode: ...
    def pageMode(self) -> QPdfView.PageMode: ...
    def pageNavigator(self) -> QtPdf.QPdfPageNavigator | None: ...
    def document(self) -> QtPdf.QPdfDocument | None: ...
    def setDocument(self, document: QtPdf.QPdfDocument | None) -> None: ...
