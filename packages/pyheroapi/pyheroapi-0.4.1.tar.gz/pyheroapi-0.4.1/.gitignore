# Python-generated files
__pycache__/
*.py[oc]
build/
dist/
wheels/
*.egg-info

# Virtual environments
.venv

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Professional Testing Framework Artifacts
test_reports/
test_results/
.test_reports/
*.junit.xml
*_test_report.txt
*_test_report.html
*_test_report.json
test_output/
performance_results/
benchmark_results/
load_test_results/

# Security Testing Reports
bandit_report.json
safety_report.json
security_scan_results/
vulnerability_reports/

# Code Quality Reports
flake8_report.txt
mypy_report.txt
black_report.txt
isort_report.txt
quality_reports/

# CI/CD Artifacts
.github_actions_cache/
ci_artifacts/
build_artifacts/
deploy_artifacts/
pipeline_logs/

# Performance & Monitoring
*.prof
*.profile
memory_profiler_*.dat
performance_logs/
metrics/
monitoring/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Environment Variables & Secrets
.env.*
!.env.example
*.env
.secrets/
secrets.json
api_keys.txt
*.key
*.pem
*_credentials.json
*_secret.txt
mock_credentials.json

# Kiwoom API Specific Secrets
KIWOOM_*.txt
MOCK_KIWOOM_*.txt
kiwoom_credentials.*
mock_api_keys.*

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyPI
#  project like this, we want to avoid checking in IDE-specific files.
.idea/

# VS Code
.vscode/
*.code-workspace

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Linux
*~

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.stackdump
[Dd]esktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Package-specific
# Temporary files created during development
.temp/
temp/
tmp/
*.tmp
*.temp

# Local configuration files
.env.local
.env.development
.env.test
.env.production

# API keys and secrets (important for security)
.secrets/
secrets.json
api_keys.txt
*.key
*.pem

# Test environments and data
test_env/
test_data/
.test_cache/
mock_data/
fixtures/generated/
test_fixtures/temp/

# Build artifacts from our build script
.build/

# Database files
*.db
*.sqlite
*.sqlite3

# Log files
*.log
logs/
test_logs/
debug_logs/
application.log
error.log

# Docker
.dockerignore
docker-compose.override.yml
.docker/

# Documentation builds
site/
docs/build/
.sphinx/
