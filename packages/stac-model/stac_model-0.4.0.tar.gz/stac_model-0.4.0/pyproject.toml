[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"

[tool.pdm.build]
includes = [
    "stac_model",
]

[tool.uv]
dev-dependencies = [
    "setuptools>=78.1.1",
    "mypy>=1.10.0,<2.0.0",
    "mypy-extensions>=0.4.3,<1.2.0",
    "pre-commit<3.0.0,>=2.21.0",
    "bandit<2.0.0,>=1.7.5",
    "safety>=3.6.0,<4.0.0",
    "pystac<2.0.0,>=1.10.0",
    "pydocstyle[toml]<7.0.0,>=6.2.0",
    "pydoclint<0.6,>=0.3",
    "pytest<8.0.0,>=7.2.1",
    "pytest-cov<5.0.0,>=4.1.0",
    "pytest-mock<4.0.0,>=3.10.0",
    "pytest-timeout<3.0.0,>=2.2.0",
    "pytest-benchmark<5.0.0,>=4.0.0",
    "pytest-sugar<1.0.0,>=0.9.7",
    "pytest-click<2.0.0,>=1.1.0",
    "pytest-pikachu<2.0.0,>=1.0.0",
    "coverage<8.0.0,>=7.3.0",
    "ruff<1.0.0,>=0.2.2",
    "bump-my-version>=1.2.1",
    "types-python-dateutil>=2.9.0.20241003",
    "types-pyyaml>=6.0.12.20250516",
    "requests>=2.32.4",
    "urllib3>=2.5.0,<3.0.0",
    "httpx<1",
    "referencing>=0.36.2",
    "cffconvert",
    "coverage-conditional-plugin>=0.9.0",
]
conflicts = [
    [
        { extra = "torch" },
        { extra = "torch-cu126" },
    ],
]
prerelease = "allow"
index = [
    { name = "pytorch-cpu", url = "https://download.pytorch.org/whl/cpu", explicit = true },
    { name = "pytorch-cu126", url = "https://download.pytorch.org/whl/cu126", explicit = true },
]

[tool.uv.sources]
torch = [
    { index = "pytorch-cpu", extra = "torch" },
    { index = "pytorch-cu126", extra = "torch-cu126" },
]
torchvision = [
    { index = "pytorch-cpu", extra = "torch" },
    { index = "pytorch-cu126", extra = "torch-cu126" },
]
pytorch-triton = [
    { index = "pytorch-cu126", extra = "torch-cu126" },
]

[tool.uv.sources.torchgeo]
git = "https://github.com/microsoft/torchgeo"
rev = "95dba5c43a2828c04a6b0a316d1996c5d1c6b9c5"

[tool.uv.sources.cffconvert]
git = "https://github.com/citation-file-format/cffconvert.git"
rev = "b6045d78aac9e02b039703b030588d54d53262ac"

[tool.bumpversion]
current_version = "1.5.0"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
serialize = [
    "{major}.{minor}.{patch}",
]
search = "{current_version}"
replace = "{new_version}"
regex = false
ignore_missing_version = true
ignore_missing_files = false
tag = true
sign_tags = false
tag_name = "v{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"
allow_dirty = false
commit = true
commit_args = "--no-verify"
message = "Bump version: {current_version} → {new_version}"

[[tool.bumpversion.files]]
glob = "**/*.@(json|yml|yaml|py|md)"
glob_exclude = [
    ".git/**",
    "**/__pycache__/**",
    ".mypy_cache/**",
    ".tox/**",
    ".venv/**",
    "_build/**",
    "build/**",
    "dist/**",
    "node_modules/**",
    "htmlcov/**",
    "package-lock.json",
]
search = "https://stac-extensions.github.io/mlm/v{current_version}/schema.json"
replace = "https://stac-extensions.github.io/mlm/v{new_version}/schema.json"

[[tool.bumpversion.files]]
filename = "CHANGELOG.md"
search = "## [Unreleased](https://github.com/stac-extensions/mlm/tree/main)\n"
replace = "## [Unreleased](https://github.com/stac-extensions/mlm/tree/main)\n\n### Added\n\n- n/a\n\n### Changed\n\n- n/a\n\n### Deprecated\n\n- n/a\n\n### Removed\n\n- n/a\n\n### Fixed\n\n- n/a\n\n## [v{new_version}](https://github.com/stac-extensions/mlm/tree/v{new_version})\n"

[[tool.bumpversion.files]]
filename = "CITATION.cff"
search = "https://stac-extensions.github.io/mlm/v{current_version}/schema.json"
replace = "https://stac-extensions.github.io/mlm/v{new_version}/schema.json"

[[tool.bumpversion.files]]
filename = "package.json"
search = "\"version\": \"{current_version}\""
replace = "\"version\": \"{new_version}\""

[tool.ruff]
exclude = [
    ".git",
    "__pycache__",
    ".mypy_cache",
    ".tox",
    ".venv",
    "_build",
    "buck-out",
    "build",
    "dist",
    "env",
    "venv",
    "node_modules",
]
respect-gitignore = true
line-length = 120
show-fixes = true

[tool.ruff.lint]
select = [
    "E",
    "F",
    "UP",
    "B",
    "SIM",
    "I",
]
ignore = [
    "UP007",
    "UP015",
    "E501",
]

[tool.ruff.lint.isort]
known-local-folder = [
    "tests",
    "conftest",
]
known-first-party = [
    "stac_model",
]
known-third-party = [
    "torch",
]
extra-standard-library = [
    "typing_extensions",
]

[tool.mypy]
python_version = "3.10"
pretty = true
show_traceback = true
color_output = true
exclude = "(^\\\\.venv/|site-packages/)"
files = [
    "stac_model",
    "tests",
]
allow_redefinition = false
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
ignore_missing_imports = true
implicit_reexport = false
no_implicit_optional = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true
plugins = [
    "pydantic.mypy",
]

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[tool.pydocstyle]
convention = "google"
match_dir = "^(stac_model|tests)"
add_ignore = "D100,D101,D102,D103,D104,D105,D107,D200,D202,D204,D212,D401"

[tool.pydoclint]
style = "google"
exclude = "\\.git|\\.hg|\\.mypy_cache|\\.tox|.?v?env|__pycache__|_build|buck-out|dist|node_modules"
arg-type-hints-in-docstring = false
arg-type-hints-in-signature = true
check-return-types = false

[tool.pytest.ini_options]
norecursedirs = [
    "hooks",
    "*.egg",
    ".eggs",
    "dist",
    "build",
    "docs",
    ".tox",
    ".git",
    "__pycache__",
    "node_modules",
]
markers = [
    "slow: mark test as slow to run (more than a few minutes)",
]
doctest_optionflags = [
    "NUMBER",
    "NORMALIZE_WHITESPACE",
    "IGNORE_EXCEPTION_DETAIL",
]
timeout = 1000
addopts = [
    "-m not slow",
    "--strict-markers",
    "--tb=short",
    "--doctest-modules",
    "--doctest-continue-on-failure",
    "--pikachu",
]

[tool.coverage.run]
source = [
    "tests",
]
branch = true
plugins = [
    "coverage_conditional_plugin",
]

[tool.coverage.coverage_conditional_plugin.omit]
"not is_installed('torch')" = "stac_model/torch/*.py"

[tool.coverage.coverage_conditional_plugin.rules]
has-torch = "is_installed('torch')"

[tool.coverage.report]
exclude_also = [
    "def main",
    "if __name__ == .__main__.:",
]
fail_under = 80
show_missing = true

[tool.coverage.paths]
source = [
    "stac_model",
]

[project]
authors = [
    { name = "Ryan Avery", email = "ryan@wherobots.com" },
    { name = "Francis Charette-Migneault", email = "francis.charette-migneault@crim.ca" },
]
requires-python = "<4.0,>=3.10"
dependencies = [
    "typer<1.0.0,>=0.9.0",
    "rich>=13.7.0,<15.0.0",
    "pydantic<3.0.0,>=2.6.3",
    "pydantic-core<3,>=2",
    "pystac<2.0.0,>=1.9.0",
    "shapely<3,>=2",
    "jsonschema<5.0.0,>=4.21.1",
    "pip>=25.0.0",
]
name = "stac-model"
version = "0.4.0"
description = "A PydanticV2 validation and serialization libary for the STAC ML Model Extension"
readme = "README_STAC_MODEL.md"
keywords = [
    "STAC",
    "SpatioTemporal Asset Catalog",
    "Machine Learning Model",
    "Artificial Intelligence",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3 :: Only",
    "Framework :: Pydantic",
    "Framework :: Pydantic :: 2",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "Topic :: File Formats :: JSON :: JSON Schema",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: GIS",
    "Topic :: Scientific/Engineering :: Image Processing",
    "Topic :: Scientific/Engineering :: Image Recognition",
]

[project.license]
text = "Apache Software License 2.0"

[project.optional-dependencies]
torch = [
    "torch==2.8.0; python_version>='3.11'",
    "torchgeo; python_version>='3.11'",
    "torchvision>=0.21,<1; python_version>='3.11'",
]
torch-cu126 = [
    "pytorch-triton; python_version>='3.11'",
    "torch==2.8.0; python_version>='3.11'",
    "torchgeo; python_version>='3.11'",
    "torchvision>=0.21,<1; python_version>='3.11'",
]

[project.urls]
homepage = "https://github.com/stac-extensions/mlm/blob/main/README_STAC_MODEL.md"
repository = "https://github.com/crim-ca/mlm-extension"

[project.scripts]
stac-model = "stac_model.__main__:app"
