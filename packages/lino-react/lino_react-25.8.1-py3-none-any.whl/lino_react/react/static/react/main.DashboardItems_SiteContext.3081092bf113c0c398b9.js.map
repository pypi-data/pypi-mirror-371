{"version":3,"file":"main.DashboardItems_SiteContext.3081092bf113c0c398b9.js","mappings":"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","sources":["webpack://lino_react/./lino_react/react/components/DashboardItems.jsx"],"sourcesContent":["export const name = \"DashboardItems\";\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { RegisterImportPool, Component } from \"./Base\";\n\nlet ex; const exModulePromises = ex = {\n    lm: import(/* webpackChunkName: \"LoadingMask_DashboardItems\" */\"./LoadingMask\"),\n    prButton: import(/* webpackChunkName: \"prButton_DashboardItems\" */\"primereact/button\"),\n    queryString: import(/* webpackChunkName: \"queryString_DashboardItems\" */\"query-string\"),\n};RegisterImportPool(ex);\n\n\nclass DashboardItem extends Component {\n    static requiredModules = ['lm', 'queryString', 'prButton'];\n    static iPool = ex;\n\n    static propTypes = {\n        itemIndex: (props, ...args) => {\n            if (!props.dashboardMain) return PropTypes.number.isRequired(props, ...args);\n        },\n        dashboardMain: PropTypes.bool.isRequired,\n        APP: PropTypes.object.isRequired\n    }\n    static defaultProps = {\n        dashboardMain: false\n    }\n    async prepare() {\n        super.prepare();\n        this.ex.queryString = this.ex.queryString.default;\n    }\n    constructor(props) {\n        super(props);\n        this.state = {...this.state, data: null, mask: true, actorID: null}\n        this.reload = this.reloadData;\n    }\n\n    onReady() {\n        this.reloadData();\n    }\n\n    componentWillUnmount() {\n        delete this.props.APP.URLContext.globals.panels[this.state.actorID];\n    }\n\n    liveUpdate = (params) => this.reload();\n\n    /**\n    * @param {bool} selfInit self-initiated reload through the refresh button\n    */\n    reloadData = (selfInit) => {\n        this.setState({mask: true});\n        const query = {fmt: 'json'}, { APP } = this.props,\n            { actionHandler } = APP.URLContext;\n        actionHandler.commonParams(query);\n        const path = this.props.dashboardMain ? 'api/main_html' : `dashboard/${this.props.itemIndex}`;\n        actionHandler.silentFetch({\n            path: `${path}?${this.ex.queryString.stringify(query)}`,\n            signal: actionHandler.abortController.signal\n        }).then((data) => {\n            if (data.version_mismatch && (this.props.itemIndex === 0 || selfInit)) {\n                APP.reload();\n                return;\n            }\n            this.setState({data: data.html, mask: false, actorID: data.actorID});\n        })\n    }\n\n    render() {\n        if (!this.state.ready) return null;\n        const {data} = this.state;\n        if (!this.props.APP.URLContext.filled(data)) return null;\n        return <this.ex.lm.LoadingMask mask={this.state.mask}>\n            {!this.props.dashboardMain && <this.ex.prButton.Button\n                icon=\"pi pi-refresh\" style={{float: 'right'}}\n                onClick={(e) => {\n                    this.reloadData(true);\n                }}/>}\n            <div dangerouslySetInnerHTML={{__html: data}}/>\n        </this.ex.lm.LoadingMask>\n    }\n}\n\n\nexport class DashboardItems extends Component {\n    static propTypes = {\n        APP: PropTypes.object.isRequired\n    };\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...this.state,\n            items: Array((props.APP.state.user_settings.dashboard_items || 0) + 1)\n        };\n        this.reloadData = this.reload;\n    }\n\n    reload() {\n        this.props.APP.URLContext.actionHandler.clearRequestPool();\n        this.state.items.forEach((item, i) => {\n            item.reload()\n        });\n    }\n\n    render() {\n        if (!this.state.ready) return null;\n        return <div>\n            {[...this.state.items.keys()].map(i =>\n                <DashboardItem\n                    dashboardMain={i === 0} itemIndex={i - 1} APP={this.props.APP}\n                    key={i} ref={ref => this.state.items[i] = ref}/>\n            )}\n        </div>\n    }\n}\n"],"names":["name","ex","lm","prButton","queryString","RegisterImportPool","DashboardItem","Component","prepare","super","this","default","constructor","props","_initialiseProps","call","state","data","mask","actorID","reload","reloadData","onReady","componentWillUnmount","APP","URLContext","globals","panels","render","ready","filled","_jsxs","LoadingMask","children","dashboardMain","_jsx","Button","icon","style","float","onClick","e","dangerouslySetInnerHTML","__html","requiredModules","iPool","propTypes","itemIndex","args","PropTypes","isRequired","defaultProps","liveUpdate","params","selfInit","setState","query","fmt","actionHandler","commonParams","path","silentFetch","stringify","signal","abortController","then","version_mismatch","html","DashboardItems","items","Array","user_settings","dashboard_items","clearRequestPool","forEach","item","i","keys","map","ref"],"sourceRoot":""}