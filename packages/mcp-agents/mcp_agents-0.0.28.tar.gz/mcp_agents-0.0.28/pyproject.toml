[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mcp-agents"
version = "0.0.28"
description = "A Python SDK for MCP tool integration with LLM providers"
readme = "README.md"
license = {text = "Proprietary"}
authors = [
    {name = "Observee", email = "contact@observee.ai"}
]
maintainers = [
    {name = "Observee", email = "contact@observee.ai"}
]
keywords = ["mcp", "agent", "llm", "anthropic", "openai", "gemini", "tools"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: Other/Proprietary License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.10"
dependencies = [
    "fastmcp",
    "python-dotenv",
    "anthropic",
    "google-genai",
    "openai",
    "rich",
    "bm25s",
    "langchain",
    "langchain-core",
    "langchain-openai",
    "langchain-anthropic",
    "langchain-google-genai",
    "jsonschema-pydantic",
    "groq",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-asyncio>=0.18.0",
    "black>=22.0",
    "flake8>=4.0",
    "mypy>=0.910",
    "build",
    "twine",
]
embedding = [
    "fastembed>=0.1.0",
    "sentence-transformers",
]
cloud = [
    "pinecone-client>=2.0.0",
    "pinecone",
]

[project.urls]
Homepage = "https://github.com/observee-ai/mcp-agent-system"
Documentation = "https://docs.observee.ai/mcp-agent-system"
Repository = "https://github.com/observee-ai/mcp-agent-system.git"
"Bug Reports" = "https://github.com/observee-ai/mcp-agent-system/issues"

[tool.setuptools.packages.find]
include = ["observee_agents*"]

[tool.setuptools.package-data]
observee_agents = ["*.md"]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = [
    "tests",
]
asyncio_mode = "auto"

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true 