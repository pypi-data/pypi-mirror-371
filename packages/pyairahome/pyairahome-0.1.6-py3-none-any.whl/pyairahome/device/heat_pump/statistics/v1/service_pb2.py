# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: device/heat_pump/statistics/v1/service.proto
# Protobuf Python Version: 6.31.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    31,
    1,
    '',
    'device/heat_pump/statistics/v1/service.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2
from .....util.v1 import local_date_time_pb2 as util_dot_v1_dot_local__date__time__pb2
from .....util.v1 import money_pb2 as util_dot_v1_dot_money__pb2
from .....util.v1 import year_month_pb2 as util_dot_v1_dot_year__month__pb2
from .....util.v2 import uuid_pb2 as util_dot_v2_dot_uuid__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n,device/heat_pump/statistics/v1/service.proto\x12\x1e\x64\x65vice.heat_pump.statistics.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1dutil/v1/local_date_time.proto\x1a\x13util/v1/money.proto\x1a\x18util/v1/year_month.proto\x1a\x12util/v2/uuid.proto\"\xa3\x02\n\rGetCopRequest\x12#\n\x0cheat_pump_id\x18\x01 \x01(\x0b\x32\r.util.v2.Uuid\x12+\n\nstart_date\x18\x05 \x01(\x0b\x32\x12.util.v1.YearMonthH\x00\x88\x01\x01\x12\x33\n\x12\x65nd_date_exclusive\x18\x06 \x01(\x0b\x32\x12.util.v1.YearMonthH\x01\x88\x01\x01\x12\x43\n\x0bgranularity\x18\x04 \x01(\x0e\x32..device.heat_pump.statistics.v1.CopGranularityB\r\n\x0b_start_dateB\x15\n\x13_end_date_exclusiveJ\x04\x08\x02\x10\x03J\x04\x08\x03\x10\x04R\nstart_timeR\x08\x65nd_time\"K\n\x0eGetCopResponse\x12\x39\n\x07\x65ntries\x18\x01 \x03(\x0b\x32(.device.heat_pump.statistics.v1.CopEntry\"\xfc\x01\n\x08\x43opEntry\x12&\n\nstart_date\x18\x04 \x01(\x0b\x32\x12.util.v1.YearMonth\x12#\n\x16room_heating_cop_value\x18\x02 \x01(\x01H\x00\x88\x01\x01\x12\x1a\n\rdhw_cop_value\x18\x03 \x01(\x01H\x01\x88\x01\x01\x12(\n\x1b\x61verage_outdoor_temperature\x18\x05 \x01(\x01H\x02\x88\x01\x01\x42\x19\n\x17_room_heating_cop_valueB\x10\n\x0e_dhw_cop_valueB\x1e\n\x1c_average_outdoor_temperatureJ\x04\x08\x01\x10\x02R\nstart_time\"\x96\x01\n\x11GetSavingsRequest\x12#\n\x0cheat_pump_id\x18\x01 \x01(\x0b\x32\r.util.v2.Uuid\x12.\n\nstart_time\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12,\n\x08\x65nd_time\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\"\x86\x01\n\x12GetSavingsResponse\x12\x14\n\x0c\x63ost_savings\x18\x01 \x01(\x02\x12\x15\n\rcurrency_code\x18\x02 \x01(\t\x12\x16\n\x0e\x63o2_savings_kg\x18\x03 \x01(\x02\x12\x1d\n\x15number_of_data_points\x18\x04 \x01(\x05\x12\x0c\n\x04show\x18\x05 \x01(\x08\"\xa5\x02\n\x1aGetHeatPumpInsightsRequest\x12#\n\x0cheat_pump_id\x18\x01 \x01(\x0b\x32\r.util.v2.Uuid\x12/\n\nstart_time\x18\x03 \x01(\x0b\x32\x16.util.v1.LocalDateTimeH\x00\x88\x01\x01\x12\x37\n\x12\x65nd_time_exclusive\x18\x05 \x01(\x0b\x32\x16.util.v1.LocalDateTimeH\x01\x88\x01\x01\x12@\n\x0bgranularity\x18\x04 \x01(\x0e\x32+.device.heat_pump.statistics.v1.GranularityB\r\n\x0b_start_timeB\x15\n\x13_end_time_exclusiveJ\x04\x08\x02\x10\x03R\ntime_range\"|\n\x1bGetHeatPumpInsightsResponse\x12>\n\x08insights\x18\x01 \x03(\x0b\x32,.device.heat_pump.statistics.v1.InsightEntryJ\x04\x08\x02\x10\x03R\x17\x65\x61rliest_available_time\"\xae\x04\n\x0cInsightEntry\x12*\n\nstart_time\x18\x03 \x01(\x0b\x32\x16.util.v1.LocalDateTime\x12\"\n\x15\x65nergy_consumption_wh\x18\x04 \x01(\rH\x00\x88\x01\x01\x12\x1e\n\x11\x64\x65livered_heat_wh\x18\x06 \x01(\x01H\x01\x88\x01\x01\x12Z\n\x1d\x65nergy_consumption_wh_problem\x18\x08 \x01(\x0e\x32..device.heat_pump.statistics.v1.InsightProblemH\x02\x88\x01\x01\x12V\n\x19\x64\x65livered_heat_wh_problem\x18\t \x01(\x0e\x32..device.heat_pump.statistics.v1.InsightProblemH\x03\x88\x01\x01\x12\x31\n%is_energy_consumption_wh_interpolated\x18\x05 \x01(\x08\x42\x02\x18\x01\x42\x18\n\x16_energy_consumption_whB\x14\n\x12_delivered_heat_whB \n\x1e_energy_consumption_wh_problemB\x1c\n\x1a_delivered_heat_wh_problemJ\x04\x08\x01\x10\x02J\x04\x08\x02\x10\x03J\x04\x08\x07\x10\x08R\x16\x65nergy_consumption_kwhR!is_interpolated_delivered_heat_whR\ntime_range\"D\n\x1dGetOptimisationSavingsRequest\x12#\n\x0chousehold_id\x18\x01 \x01(\x0b\x32\r.util.v2.Uuid\"\xc7\x01\n\x1eGetOptimisationSavingsResponse\x12\\\n\x1arolling_month_optimisation\x18\x01 \x01(\x0b\x32\x38.device.heat_pump.statistics.v1.RollingMonthOptimisation\x12G\n\x0fmonthly_savings\x18\x02 \x03(\x0b\x32..device.heat_pump.statistics.v1.MonthlySavings\"\xb9\x01\n\x18RollingMonthOptimisation\x12#\n\x0cheat_pump_id\x18\x01 \x01(\x0b\x32\r.util.v2.Uuid\x12\'\n\x1aweather_optimisation_hours\x18\x02 \x01(\rH\x00\x88\x01\x01\x12$\n\x07savings\x18\x03 \x01(\x0b\x32\x0e.util.v1.MoneyH\x01\x88\x01\x01\x42\x1d\n\x1b_weather_optimisation_hoursB\n\n\x08_savings\"y\n\x0eMonthlySavings\x12#\n\x0cheat_pump_id\x18\x01 \x01(\x0b\x32\r.util.v2.Uuid\x12!\n\x05month\x18\x02 \x01(\x0b\x32\x12.util.v1.YearMonth\x12\x1f\n\x07savings\x18\x03 \x01(\x0b\x32\x0e.util.v1.Money*N\n\x0e\x43opGranularity\x12\x1f\n\x1b\x43OP_GRANULARITY_UNSPECIFIED\x10\x00\x12\x1b\n\x17\x43OP_GRANULARITY_MONTHLY\x10\x01*r\n\x0bGranularity\x12\x1b\n\x17GRANULARITY_UNSPECIFIED\x10\x00\x12\x16\n\x12GRANULARITY_HOURLY\x10\x01\x12\x15\n\x11GRANULARITY_DAILY\x10\x02\x12\x17\n\x13GRANULARITY_MONTHLY\x10\x03*\xe2\x01\n\x0eInsightProblem\x12\x1f\n\x1bINSIGHT_PROBLEM_UNSPECIFIED\x10\x00\x12\x1d\n\x19INSIGHT_PROBLEM_TOO_EARLY\x10\x01\x12\x1b\n\x17INSIGHT_PROBLEM_OFFLINE\x10\x02\x12\x1a\n\x16INSIGHT_PROBLEM_SENSOR\x10\x03\x12+\n\'INSIGHT_PROBLEM_OFFLINE_TINY_DIFFERENCE\x10\x04\x12*\n&INSIGHT_PROBLEM_SENSOR_TINY_DIFFERENCE\x10\x05\x32\xa4\x04\n\x19HeatPumpStatisticsService\x12g\n\x06GetCop\x12-.device.heat_pump.statistics.v1.GetCopRequest\x1a..device.heat_pump.statistics.v1.GetCopResponse\x12s\n\nGetSavings\x12\x31.device.heat_pump.statistics.v1.GetSavingsRequest\x1a\x32.device.heat_pump.statistics.v1.GetSavingsResponse\x12\x8e\x01\n\x13GetHeatPumpInsights\x12:.device.heat_pump.statistics.v1.GetHeatPumpInsightsRequest\x1a;.device.heat_pump.statistics.v1.GetHeatPumpInsightsResponse\x12\x97\x01\n\x16GetOptimisationSavings\x12=.device.heat_pump.statistics.v1.GetOptimisationSavingsRequest\x1a>.device.heat_pump.statistics.v1.GetOptimisationSavingsResponseB\xd7\x01\n0com.aira.contract.device.heat_pump.statistics.v1B\x0cServiceProtoP\x01\xa2\x02\x03\x44HS\xaa\x02\x1d\x44\x65vice.HeatPump.Statistics.V1\xca\x02\x1d\x44\x65vice\\HeatPump\\Statistics\\V1\xe2\x02)Device\\HeatPump\\Statistics\\V1\\GPBMetadata\xea\x02 Device::HeatPump::Statistics::V1b\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'device.heat_pump.statistics.v1.service_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n0com.aira.contract.device.heat_pump.statistics.v1B\014ServiceProtoP\001\242\002\003DHS\252\002\035Device.HeatPump.Statistics.V1\312\002\035Device\\HeatPump\\Statistics\\V1\342\002)Device\\HeatPump\\Statistics\\V1\\GPBMetadata\352\002 Device::HeatPump::Statistics::V1'
  _globals['_INSIGHTENTRY'].fields_by_name['is_energy_consumption_wh_interpolated']._loaded_options = None
  _globals['_INSIGHTENTRY'].fields_by_name['is_energy_consumption_wh_interpolated']._serialized_options = b'\030\001'
  _globals['_COPGRANULARITY']._serialized_start=2693
  _globals['_COPGRANULARITY']._serialized_end=2771
  _globals['_GRANULARITY']._serialized_start=2773
  _globals['_GRANULARITY']._serialized_end=2887
  _globals['_INSIGHTPROBLEM']._serialized_start=2890
  _globals['_INSIGHTPROBLEM']._serialized_end=3116
  _globals['_GETCOPREQUEST']._serialized_start=212
  _globals['_GETCOPREQUEST']._serialized_end=503
  _globals['_GETCOPRESPONSE']._serialized_start=505
  _globals['_GETCOPRESPONSE']._serialized_end=580
  _globals['_COPENTRY']._serialized_start=583
  _globals['_COPENTRY']._serialized_end=835
  _globals['_GETSAVINGSREQUEST']._serialized_start=838
  _globals['_GETSAVINGSREQUEST']._serialized_end=988
  _globals['_GETSAVINGSRESPONSE']._serialized_start=991
  _globals['_GETSAVINGSRESPONSE']._serialized_end=1125
  _globals['_GETHEATPUMPINSIGHTSREQUEST']._serialized_start=1128
  _globals['_GETHEATPUMPINSIGHTSREQUEST']._serialized_end=1421
  _globals['_GETHEATPUMPINSIGHTSRESPONSE']._serialized_start=1423
  _globals['_GETHEATPUMPINSIGHTSRESPONSE']._serialized_end=1547
  _globals['_INSIGHTENTRY']._serialized_start=1550
  _globals['_INSIGHTENTRY']._serialized_end=2108
  _globals['_GETOPTIMISATIONSAVINGSREQUEST']._serialized_start=2110
  _globals['_GETOPTIMISATIONSAVINGSREQUEST']._serialized_end=2178
  _globals['_GETOPTIMISATIONSAVINGSRESPONSE']._serialized_start=2181
  _globals['_GETOPTIMISATIONSAVINGSRESPONSE']._serialized_end=2380
  _globals['_ROLLINGMONTHOPTIMISATION']._serialized_start=2383
  _globals['_ROLLINGMONTHOPTIMISATION']._serialized_end=2568
  _globals['_MONTHLYSAVINGS']._serialized_start=2570
  _globals['_MONTHLYSAVINGS']._serialized_end=2691
  _globals['_HEATPUMPSTATISTICSSERVICE']._serialized_start=3119
  _globals['_HEATPUMPSTATISTICSSERVICE']._serialized_end=3667
# @@protoc_insertion_point(module_scope)