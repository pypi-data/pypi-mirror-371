_target_: tensorial.ReaxModule

jit: True

optimizer:
  _partial_: True
  _target_: optax.adam
  learning_rate: 0.001
#
#scheduler:
#  _target_: optax.schedules.cosine_decay_schedule
#  init_value: 0.1
#  decay_steps: 100

loss_fn:
  _target_: e3response.losses.response_loss
  energy: false
  forces: false
  dielectric_tensor: true
  born_charges: true
  raman_tensors: true


model:
  _target_: tensorial.nn.Sequential
  layers:
    - _target_: tensorial.gcnn.atomic.SpeciesTransform
      atomic_numbers: ${from_data.atomic_numbers}

    - _target_: tensorial.gcnn.NodewiseEmbedding
      attrs:
        species:
          _target_: tensorial.tensors.OneHot
          num_classes: ${from_data.n_elements}
        globals.external_electric_field:
          _target_: tensorial.tensors.SphericalHarmonic
          irreps: 0e + 1o
          normalise: True

    - _target_: tensorial.gcnn.EdgeVectors

    - _target_: tensorial.gcnn.EdgewiseEncoding
      attrs:
        edge_vectors:
          _target_: tensorial.tensors.SphericalHarmonic
          irreps: 0e + 1o
          normalise: True

    - _target_: tensorial.gcnn.RadialBasisEdgeEncoding
      r_max: ${r_max}

    - _target_: tensorial.gcnn.NodewiseLinear
      field: attributes
      irreps_out: 16x0o + 16x0e + 16x1o + 16x1e

    - _target_: tensorial.gcnn.NequipLayer
      irreps_out: 16x0o + 16x0e + 16x1o + 16x1e
      avg_num_neighbours: ${from_data.avg_num_neighbours}

    - _target_: tensorial.gcnn.NequipLayer
      irreps_out: 16x0o + 16x0e + 16x1o + 16x1e
      avg_num_neighbours: ${from_data.avg_num_neighbours}

    - _target_: tensorial.gcnn.NequipLayer
      irreps_out: 16x0o + 16x0e + 16x1o + 16x1e
      avg_num_neighbours: ${from_data.avg_num_neighbours}

    # Keep only scalars and reduce the number passing this point
    - _target_: tensorial.gcnn.NodewiseLinear
      irreps_out: 4x0e + 4x0o + 4x1e + 4x1o + 4x2e + 4x2o + 2x3o + 2x3e

    - _target_: tensorial.gcnn.NodewiseLinear
      irreps_out: 1x0e
      out_field: predicted_energy # Per-atom energy

    # Final total energy
    - _target_: tensorial.gcnn.NodewiseReduce
      field: predicted_energy
      out_field: predicted_energy  # Global energy

    # Polarization
    #    - _target_: e3response.electric.Polarization
    #      _partial_: True
    #
    # Dielectric tensor
    - _target_: e3response.electric.DielectricTensor
      _partial_: True

    #    # Born effective charges
    - _target_: e3response.electric.BornCharges
      _partial_: True

    #    # Raman tensors
    - _target_: e3response.electric.RamanTensors
      _partial_: True
