[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "terminal-toolkit-mcp"
version = "0.1.1"
description = "CAMEL Terminal Toolkit as a standalone MCP server"
authors = [
    {name = "CAMEL-AI.org", email = "noreply@camel-ai.org"}
]
license = "Apache-2.0"
readme = "README.md"
requires-python = ">=3.10"
keywords = ["mcp", "terminal", "shell", "camel", "ai", "toolkit", "server"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Shells",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "mcp>=1.0.0",
    "pydantic>=2.0.0",
    "typing-extensions>=4.0.0",
    "camel-ai>=0.2.74",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "build>=1.0.0",
    "twine>=5.0.0",
]

[project.scripts]
terminal-toolkit-mcp = "camel_terminal_toolkit.server:main"

[project.urls]
Homepage = "https://github.com/camel-ai/terminal-toolkit-mcp"
Repository = "https://github.com/camel-ai/terminal-toolkit-mcp"
Documentation = "https://docs.camel-ai.org"
"Bug Tracker" = "https://github.com/camel-ai/terminal-toolkit-mcp/issues"

[tool.setuptools.packages.find]
where = ["src"]
include = ["camel_terminal_toolkit*"]

[tool.setuptools.package-dir]
"" = "src"

[tool.ruff]
target-version = "py310"
line-length = 79
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.black]
target-version = ['py310']
line-length = 79

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]