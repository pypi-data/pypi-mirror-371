# SPDX-License-Identifier: MIT

[build-system]
requires = ["setuptools>=78.1.1", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ids-iforest"
version = "0.1.0"
description = "Network intrusion detection system based on Isolation Forest and PyShark"
readme = "README.md"
license = "MIT"
license-files = ["LICENSE"]
requires-python = ">=3.10"
keywords = ["ids", "machine learning", "isolation forest", "network", "security"]
authors = [{ name = "Rachid Bellaali", email = "bellaalirachid@gmail.com" }]
classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Security",
  "Topic :: System :: Networking",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research"
]
dependencies = [
  "pyshark>=0.6,<0.7",        # Live capture & PCAP via tshark
  "scikit-learn>=1.5,<1.8",   # IsolationForest, StandardScaler (Py 3.11 compatible)
  "pandas>=1.5,<3.0",         # CSV I/O & DataFrame ops
  "numpy",                    # Compatible with scikit-learn
  "pyyaml>=6.0",              # Load config/config.yml
  "colorama>=0.4",            # Colored logging (gracefully degrades if absent)
  "joblib>=1.3",              # Model/scaler persistence
  "Flask>=2.3"                # Optional web UI (server.py)
]

[project.urls]
"Homepage" = "https://gitlab.com/rachiid007/network_traffic_analysis"
"Documentation" = "https://gitlab.com/rachiid007/network_traffic_analysis/-/blob/main/README.md"

[project.scripts]
ids-iforest-train   = "ids_iforest.train:main"
ids-iforest-detect  = "ids_iforest.detect:main"
ids-iforest-capture = "ids_iforest.capture:main"
ids-iforest-pcap2csv= "ids_iforest.pcap2flows:main"
ids-iforest-generate= "ids_iforest.scripts.generate_datasets:main"

[tool.setuptools]
[tool.setuptools.packages.find]
include = ["ids_iforest*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "--verbose --cov=ids_iforest --cov-report=xml --cov-report=term"

[project.optional-dependencies]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-xdist>=3.3.0",  # For parallel test execution
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-xdist>=3.3.0",  # For parallel test execution
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "build>=1.0.0",
    "twine>=4.0.0",
]
