[build-system]
requires = ["setuptools>=64", "setuptools-scm>=8.3.1"]
build-backend = "setuptools.build_meta"

[project]
name = "haidra_core"
description = "Core abstractions for the haidra-org ecosystem."
authors = [
    {name = "tazlin", email = "tazlin.on.github@gmail.com"},
]
readme = "README.md"
requires-python = ">=3.10"
license = {file = "LICENSE"}
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
    "License :: OSI Approved :: GNU Affero General Public License v3",
    "Development Status :: 4 - Beta",
]
dynamic=["version"]
dependencies = [
    "pydantic>=2.11.7",
    "pydantic-settings>=2.10.1",
]

[tool.setuptools_scm]
write_to = "src/haidra_core/_version.py"

[dependency-groups]
dev = [
    "black>=25.1.0",
    "build>=1.3.0",
    "mypy>=1.17.1",
    "pre-commit>=4.2.0",
    "pytest>=8.4.1",
    "ruff>=0.12.8",
    "tach>=0.29.0",
]

[tool.ruff]
line-length = 119
exclude = ["codegen", ".venv*"]

[tool.ruff.lint]
select = [
  "A",
  "I",
  "E",
  "W",
  "F",
  "UP",
  "YTT",
  "B",
  "C4",
  "PIE",
  "RET",
  "SIM",
  "COM",
  "D",
  "D417", # Missing argument descriptions in the docstring
  "ANN",
  "RUF",
  "ASYNC",
  ]
ignore = [
  "COM812", # When using `ruff format`, this is redundant
  "D105", # Missing docstring in magic method
  "D100", # Missing docstring in public module
  # Ignore D rules for non-google docstring standard
  "D203", # 1 blank line required before class docstring
  "D204",  # 1 blank line required after class docstring
  "D213",  # Multi-line docstring summary should start at the second line
  "D215", # Section underline is over-indented
  "D400", # First line should end with a period
  "D404", # First word of the docstring should not be This
  "D406", # Section name should end with a newline
  "D407", # Missing dashed underline after section
  "D408", # Section underline should be in the line following the section's name
  "D409", # Section underline should match the length of its name
  "D413",] # Missing blank line after last section

[tool.black]
line-length = 119
include = '\.pyi?$'
exclude = '''
/(
 \.git
 | \.hg
 | \.mypy_cache
 | \.ruff_cache
 | \.tox
 | \.venv.*
 | _build
 | buck-out
 | build
 | codegen
 | dist
)/
'''

[tool.mypy]
plugins = [
  "pydantic.mypy"
]
strict = true
disallow_untyped_defs = true
warn_unused_configs = true
exclude = [
  '^codegen',
  '\.git',
  '\.hg',
  '\.mypy_cache',
  '\.ruff_cache',
  '\.tox',
  '\.venv',
  '\.venv.*',
  '_build',
  'buck-out',
  'build',
  'codegen',
  'dist',
  'docs',
]
