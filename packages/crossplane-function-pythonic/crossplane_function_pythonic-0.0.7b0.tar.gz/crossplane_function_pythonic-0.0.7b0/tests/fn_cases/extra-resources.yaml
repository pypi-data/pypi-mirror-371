request:
  observed:
    composite:
      resource:
        spec:
          environment: dev
  extra_resources:
    bucket:
      items:
      - resource:
          apiVersion: s3.aws.upbound.io/v1beta1
          kind: Bucket
          metadata:
            labels:
              testing.upbound.io/example-name: bucket-notification
            name: my-awesome-dev-bucket
          spec:
            forProvider:
              region: us-west-1
          status:
            atProvider:
              id: random-bucket-id
  input:
    composite: |
      class Composite(BaseComposite):
        def compose(self):
          buckets = self.requireds.bucket('s3.aws.upbound.io/v1beta1', 'Bucket', name=f"my-awesome-{self.spec.environment}-bucket")
          for ix, bucket in enumerate(buckets):
            r = self.resources[f"bucket-configmap-{ix}"]('kubernetes.crossplane.io/v1alpha1', 'Object')
            r.spec.providerConfigRef.name = 'kubernetes'
            manifest = r.spec.forProvider.manifest
            manifest.apiVersion = 'v1'
            manifest.kind = 'ConfigMap'
            manifest.metadata.namespace = 'examples'
            manifest.metadata.name = f"{bucket.metadata.name}-bucket"
            manifest.data.bucket = bucket.status.atProvider.id
          self.status.dummy = 'cool-status'

response:
  context:
    _requireds:
      bucket:
        apiVersion: s3.aws.upbound.io/v1beta1
        kind: Bucket
        matchName: my-awesome-dev-bucket
  requirements:
    extra_resources:
      bucket:
        api_version: s3.aws.upbound.io/v1beta1
        kind: Bucket
        match_name: my-awesome-dev-bucket
  desired:
    composite:
      resource:
        status:
          dummy: cool-status
    resources:
      bucket-configmap-0:
        resource:
          apiVersion: kubernetes.crossplane.io/v1alpha1
          kind: Object
          spec:
            providerConfigRef:
              name: kubernetes
            forProvider:
              manifest:
                apiVersion: v1
                kind: ConfigMap
                metadata:
                  namespace: examples
                  name: my-awesome-dev-bucket-bucket
                data:
                  bucket: random-bucket-id
  conditions: null
