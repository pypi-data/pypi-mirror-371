---
apiVersion: observability.fortra.com/v1alpha1
kind: XEFC
metadata:
  name: backlog-metric-s999k
status:
  conditions:
  - lastTransitionTime: "2024-01-01T00:00:00Z"
    message: 'Unready resources: dashboard, folder, and rule_group'
    reason: Creating
    status: "False"
    type: Ready
  - lastTransitionTime: "2024-01-01T00:00:00Z"
    message: All resources are resolved
    reason: AllResolved
    status: "True"
    type: NoUnknowns
---
apiVersion: oss.grafana.crossplane.io/v1alpha1
kind: Dashboard
metadata:
  annotations:
    crossplane.io/composition-resource-name: dashboard
  generateName: backlog-metric-s999k-
  labels:
    cluster: rfixe-test
    crossplane.io/claim-name: backlog-metric
    crossplane.io/claim-namespace: monitoring
    crossplane.io/composite: backlog-metric-s999k
  name: backlog-metric
  ownerReferences:
  - apiVersion: observability.fortra.com/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: XEFC
    name: backlog-metric-s999k
    uid: ""
spec:
  forProvider:
    configJson: |
      {
        "annotations": {
          "list": [
            {
              "builtIn": 1,
              "datasource": {
                "type": "grafana",
                "uid": "-- Grafana --"
              },
              "enable": true,
              "hide": true,
              "iconColor": "rgba(0, 211, 255, 1)",
              "name": "Annotations & Alerts",
              "type": "dashboard"
            }
          ]
        },
        "description": "EFC Rest Check metrics",
        "editable": true,
        "fiscalYearStartMonth": 0,
        "graphTooltip": 2,
        "id": 163,
        "links": [],
        "panels": [
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${promdata}"
            },
            "description": "% of used space from Opensearch data nodes",
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "thresholds"
                },
                "mappings": [],
                "max": 100,
                "min": 0,
                "thresholds": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "green",
                      "value": 0
                    },
                    {
                      "color": "light-orange",
                      "value": 80
                    },
                    {
                      "color": "semi-dark-red",
                      "value": 90
                    }
                  ]
                },
                "unit": "percent"
              },
              "overrides": []
            },
            "gridPos": {
              "h": 9,
              "w": 6,
              "x": 0,
              "y": 0
            },
            "id": 6,
            "options": {
              "minVizHeight": 75,
              "minVizWidth": 75,
              "orientation": "auto",
              "reduceOptions": {
                "calcs": [],
                "fields": "",
                "values": false
              },
              "showThresholdLabels": false,
              "showThresholdMarkers": true,
              "sizing": "auto"
            },
            "pluginVersion": "12.2.0-16677249643",
            "targets": [
              {
                "datasource": {
                  "type": "prometheus",
                  "uid": "${DS_PROMETHEUS}"
                },
                "editorMode": "code",
                "expr": "sum(kubelet_volume_stats_used_bytes{cluster=\"efc-prod\", namespace=\"opensearch\", persistentvolumeclaim=~\"data-opensearch-nodes.*\"}) by (pods) / \nsum(kubelet_volume_stats_capacity_bytes{namespace=\"opensearch\", persistentvolumeclaim=~\"data-opensearch-nodes.*\"}) by (pods) * 100",
                "instant": false,
                "legendFormat": "__auto",
                "range": true,
                "refId": "A"
              }
            ],
            "title": "Storage Usage",
            "type": "gauge"
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "${promdata}"
            },
            "description": "Storage Capacity from Opensearch data nodes pvc.",
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "continuous-GrYlRd"
                },
                "decimals": 2,
                "fieldMinMax": false,
                "mappings": [],
                "thresholds": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "green",
                      "value": 0
                    }
                  ]
                },
                "unit": "TB"
              },
              "overrides": []
            },
            "gridPos": {
              "h": 9,
              "w": 6,
              "x": 6,
              "y": 0
            },
            "id": 7,
            "options": {
              "displayMode": "lcd",
              "legend": {
                "calcs": [],
                "displayMode": "list",
                "placement": "bottom",
                "showLegend": false
              },
              "maxVizHeight": 300,
              "minVizHeight": 16,
              "minVizWidth": 0,
              "namePlacement": "auto",
              "orientation": "auto",
              "reduceOptions": {
                "calcs": [],
                "fields": "",
                "values": false
              },
              "showUnfilled": true,
              "sizing": "manual",
              "text": {
                "titleSize": 76,
                "valueSize": 50
              },
              "valueMode": "color"
            },
            "pluginVersion": "12.2.0-16677249643",
            "targets": [
              {
                "datasource": {
                  "type": "prometheus",
                  "uid": "${DS_PROMETHEUS}"
                },
                "editorMode": "code",
                "expr": "sum(kubelet_volume_stats_capacity_bytes{cluster=\"efc-prod\", namespace=\"opensearch\", persistentvolumeclaim=~\"data-opensearch-nodes.*\"}) by (pods) / (1000^4)",
                "instant": false,
                "legendFormat": "__auto",
                "range": true,
                "refId": "A"
              }
            ],
            "title": "Storage Capacity",
            "type": "bargauge"
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${influxdata}"
            },
            "description": "Total of backlogged Integration events captured every 5 minutes.",
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "palette-classic"
                },
                "custom": {
                  "axisBorderShow": false,
                  "axisCenteredZero": false,
                  "axisColorMode": "text",
                  "axisLabel": "",
                  "axisPlacement": "auto",
                  "barAlignment": 0,
                  "barWidthFactor": 0.6,
                  "drawStyle": "line",
                  "fillOpacity": 12,
                  "gradientMode": "opacity",
                  "hideFrom": {
                    "legend": false,
                    "tooltip": false,
                    "viz": false
                  },
                  "insertNulls": false,
                  "lineInterpolation": "linear",
                  "lineStyle": {
                    "fill": "solid"
                  },
                  "lineWidth": 1,
                  "pointSize": 5,
                  "scaleDistribution": {
                    "type": "linear"
                  },
                  "showPoints": "auto",
                  "spanNulls": false,
                  "stacking": {
                    "group": "A",
                    "mode": "none"
                  },
                  "thresholdsStyle": {
                    "mode": "dashed"
                  }
                },
                "mappings": [],
                "thresholds": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "green",
                      "value": 0
                    },
                    {
                      "color": "red",
                      "value": 500000
                    }
                  ]
                }
              },
              "overrides": []
            },
            "gridPos": {
              "h": 9,
              "w": 12,
              "x": 12,
              "y": 0
            },
            "id": 3,
            "options": {
              "legend": {
                "calcs": [],
                "displayMode": "list",
                "placement": "bottom",
                "showLegend": true
              },
              "tooltip": {
                "hideZeros": false,
                "mode": "single",
                "sort": "none"
              }
            },
            "pluginVersion": "12.2.0-16677249643",
            "targets": [
              {
                "datasource": {
                  "type": "influxdb",
                  "uid": "${DS_INFLUXDB-METRIC-EFC}"
                },
                "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"stream\")\n  |> filter(fn: (r) => r[\"_field\"] == \"integrationevents\")\n  |> aggregateWindow(every: 5m, fn: sum, createEmpty: false)\n  |> yield(name: \"sum\")",
                "refId": "A"
              }
            ],
            "title": "Integrations",
            "type": "timeseries"
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${influxdata}"
            },
            "description": "Total of backlogged Enrichments captured every 5 minutes.",
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "palette-classic"
                },
                "custom": {
                  "axisBorderShow": false,
                  "axisCenteredZero": false,
                  "axisColorMode": "text",
                  "axisLabel": "",
                  "axisPlacement": "auto",
                  "barAlignment": 0,
                  "barWidthFactor": 0.6,
                  "drawStyle": "line",
                  "fillOpacity": 17,
                  "gradientMode": "none",
                  "hideFrom": {
                    "legend": false,
                    "tooltip": false,
                    "viz": false
                  },
                  "insertNulls": false,
                  "lineInterpolation": "linear",
                  "lineWidth": 1,
                  "pointSize": 5,
                  "scaleDistribution": {
                    "type": "linear"
                  },
                  "showPoints": "auto",
                  "spanNulls": false,
                  "stacking": {
                    "group": "A",
                    "mode": "none"
                  },
                  "thresholdsStyle": {
                    "mode": "dashed"
                  }
                },
                "mappings": [],
                "min": 0,
                "thresholds": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "green",
                      "value": 0
                    },
                    {
                      "color": "red",
                      "value": 50000
                    }
                  ]
                },
                "unit": "short"
              },
              "overrides": []
            },
            "gridPos": {
              "h": 9,
              "w": 12,
              "x": 0,
              "y": 9
            },
            "id": 1,
            "options": {
              "legend": {
                "calcs": [],
                "displayMode": "list",
                "placement": "bottom",
                "showLegend": true
              },
              "tooltip": {
                "hideZeros": false,
                "mode": "single",
                "sort": "none"
              }
            },
            "pluginVersion": "12.2.0-16677249643",
            "targets": [
              {
                "datasource": {
                  "type": "influxdb",
                  "uid": "${DS_INFLUXDB-METRIC-EFC}"
                },
                "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"stream\")\n  |> filter(fn: (r) => r[\"_field\"] == \"enrichmentevents\")\n  |> aggregateWindow(every: 5m, fn: sum, createEmpty: false)\n  |> yield(name: \"sum\")",
                "refId": "A"
              }
            ],
            "title": "Enrichments",
            "type": "timeseries"
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${influxdata}"
            },
            "description": "Total of backlogged Bulk events captured every 5 minutes.",
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "palette-classic"
                },
                "custom": {
                  "axisBorderShow": false,
                  "axisCenteredZero": false,
                  "axisColorMode": "text",
                  "axisLabel": "",
                  "axisPlacement": "auto",
                  "barAlignment": 0,
                  "barWidthFactor": 0.6,
                  "drawStyle": "line",
                  "fillOpacity": 0,
                  "gradientMode": "none",
                  "hideFrom": {
                    "legend": false,
                    "tooltip": false,
                    "viz": false
                  },
                  "insertNulls": false,
                  "lineInterpolation": "linear",
                  "lineWidth": 1,
                  "pointSize": 5,
                  "scaleDistribution": {
                    "type": "linear"
                  },
                  "showPoints": "auto",
                  "spanNulls": false,
                  "stacking": {
                    "group": "A",
                    "mode": "none"
                  },
                  "thresholdsStyle": {
                    "mode": "off"
                  }
                },
                "mappings": [],
                "thresholds": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "green",
                      "value": 0
                    },
                    {
                      "color": "red",
                      "value": 50000
                    }
                  ]
                },
                "unit": "short"
              },
              "overrides": []
            },
            "gridPos": {
              "h": 9,
              "w": 12,
              "x": 12,
              "y": 9
            },
            "id": 2,
            "options": {
              "legend": {
                "calcs": [],
                "displayMode": "list",
                "placement": "bottom",
                "showLegend": true
              },
              "tooltip": {
                "hideZeros": false,
                "mode": "single",
                "sort": "none"
              }
            },
            "pluginVersion": "12.2.0-16677249643",
            "targets": [
              {
                "datasource": {
                  "type": "influxdb",
                  "uid": "${DS_INFLUXDB-METRIC-EFC}"
                },
                "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"stream\")\n  |> filter(fn: (r) => r[\"_field\"] == \"bulkevents\")\n  |> aggregateWindow(every: 5m, fn: sum, createEmpty: false)\n  |> yield(name: \"sum\")",
                "refId": "A"
              }
            ],
            "title": "OpenSearch",
            "type": "timeseries"
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${influxdata}"
            },
            "description": "Total of backlogged Rules captured every 5 minutes.",
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "palette-classic"
                },
                "custom": {
                  "axisBorderShow": false,
                  "axisCenteredZero": false,
                  "axisColorMode": "text",
                  "axisLabel": "",
                  "axisPlacement": "auto",
                  "barAlignment": 0,
                  "barWidthFactor": 0.6,
                  "drawStyle": "line",
                  "fillOpacity": 17,
                  "gradientMode": "opacity",
                  "hideFrom": {
                    "legend": false,
                    "tooltip": false,
                    "viz": false
                  },
                  "insertNulls": false,
                  "lineInterpolation": "linear",
                  "lineWidth": 1,
                  "pointSize": 5,
                  "scaleDistribution": {
                    "type": "linear"
                  },
                  "showPoints": "auto",
                  "spanNulls": false,
                  "stacking": {
                    "group": "A",
                    "mode": "none"
                  },
                  "thresholdsStyle": {
                    "mode": "dashed"
                  }
                },
                "mappings": [],
                "min": 0,
                "thresholds": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "green",
                      "value": 0
                    },
                    {
                      "color": "red",
                      "value": 50000
                    }
                  ]
                },
                "unit": "short"
              },
              "overrides": []
            },
            "gridPos": {
              "h": 9,
              "w": 12,
              "x": 12,
              "y": 18
            },
            "id": 5,
            "options": {
              "legend": {
                "calcs": [],
                "displayMode": "list",
                "placement": "bottom",
                "showLegend": true
              },
              "tooltip": {
                "hideZeros": false,
                "mode": "single",
                "sort": "none"
              }
            },
            "pluginVersion": "12.2.0-16677249643",
            "targets": [
              {
                "datasource": {
                  "type": "influxdb",
                  "uid": "${DS_INFLUXDB-METRIC-EFC}"
                },
                "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"stream\")\n  |> filter(fn: (r) => r[\"_field\"] == \"ruleevents\")\n  |> aggregateWindow(every: 5m, fn: sum, createEmpty: false)\n  |> yield(name: \"sum\")",
                "refId": "A"
              }
            ],
            "title": "Rules",
            "type": "timeseries"
          }
        ],
        "preload": false,
        "refresh": "",
        "schemaVersion": 41,
        "tags": [],
        "templating": {
          "list": [
            {
              "current": {
                "text": "fortra-efc",
                "value": "fortra-efc"
              },
              "datasource": {
                "type": "influxdb",
                "uid": "${influxdata}"
              },
              "definition": "buckets()",
              "description": "InfluxDB bucket to select.",
              "hide": 2,
              "includeAll": false,
              "label": "bucket",
              "name": "bucket",
              "options": [],
              "query": {
                "query": "buckets()"
              },
              "refresh": 1,
              "regex": "/fortra-efc/",
              "type": "query"
            },
            {
              "current": {
                "text": "influxdb-efc-dev-metric",
                "value": "ceusvfs2fcv7kf"
              },
              "description": "InfluxDB datasource",
              "hide": 2,
              "includeAll": false,
              "label": "influxdata",
              "name": "influxdata",
              "options": [],
              "query": "influxdb",
              "refresh": 1,
              "regex": "/.*efc*/",
              "type": "datasource"
            },
            {
              "current": {
                "text": "grafanacloud-fortradev-prom",
                "value": "grafanacloud-prom"
              },
              "description": "Datasource for Prometheus",
              "hide": 2,
              "includeAll": false,
              "label": "promdata",
              "name": "promdata",
              "options": [],
              "query": "prometheus",
              "refresh": 1,
              "regex": "/.*fortra*/",
              "type": "datasource"
            }
          ]
        },
        "time": {
          "from": "now-3h",
          "to": "now"
        },
        "timepicker": {},
        "timezone": "browser",
        "title": "EFC",
        "uid": "rogzdf2",
        "version": 1
      }
    folder: feuxdxg0q6yv4f
  providerConfigRef:
    name: influxdb-efc-dev-metric
---
apiVersion: oss.grafana.crossplane.io/v1alpha1
kind: Folder
metadata:
  annotations:
    crossplane.io/composition-resource-name: folder
  generateName: backlog-metric-s999k-
  labels:
    cluster: rfixe-test
    crossplane.io/claim-name: backlog-metric
    crossplane.io/claim-namespace: monitoring
    crossplane.io/composite: backlog-metric-s999k
  ownerReferences:
  - apiVersion: observability.fortra.com/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: XEFC
    name: backlog-metric-s999k
    uid: ""
spec:
  forProvider:
    title: EFC
  providerConfigRef:
    name: influxdb-efc-dev-metric
---
apiVersion: alerting.grafana.crossplane.io/v1alpha1
kind: RuleGroup
metadata:
  annotations:
    crossplane.io/composition-resource-name: rule_group
  generateName: backlog-metric-s999k-
  labels:
    cluster: rfixe-test
    crossplane.io/claim-name: backlog-metric
    crossplane.io/claim-namespace: monitoring
    crossplane.io/composite: backlog-metric-s999k
  name: backlog-metric
  ownerReferences:
  - apiVersion: observability.fortra.com/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: XEFC
    name: backlog-metric-s999k
    uid: ""
spec:
  forProvider:
    folderSelector:
      matchLabels:
        cluster: rfixe-test
    intervalSeconds: 300
    rule:
    - annotations:
        __dashboardUid__: ec19dcc4-17d1-4837-9a1c-8a31b7ef96e0
        __panelId__: "3"
        description: IntegrationEvents backlog which determines the health of the
          processing pipeline
        runbook_url: https://helpsystems.atlassian.net/wiki/spaces/FP/pages/185696827/Event+Fusion+Center+EFC
        summary: IntegrationEvents backlog above 500000 events
      condition: B
      data:
      - datasourceUid: ceusvfs2fcv7kf
        model: |-
          {
            "interval": "",
            "intervalFactor": 2,
            "query": "from(bucket: \"fortra-efc\") |> range(start: -5m) |> filter(fn: (r) => r[\"_measurement\"] == \"stream\") |> filter(fn: (r) => r[\"_field\"] == \"integrationevents\") |> aggregateWindow(every: 5m, fn: sum, createEmpty: false) |> last()",
            "refId": "A",
            "resultFormat": "time_series"
          }
        queryType: ""
        refId: A
        relativeTimeRange:
        - from: 600
          to: 0
      - datasourceUid: "-100"
        model: |-
          {
            "conditions": [
              {
                "evaluator": {
                  "params": [
                    500000
                  ],
                  "type": "gt"
                },
                "operator": {
                  "type": "and"
                },
                "query": {
                  "params": [
                    "A"
                  ]
                },
                "reducer": {
                  "type": "last"
                },
                "type": "query"
              }
            ],
            "datasource": {
              "type": "__expr__",
              "uid": "-100"
            },
            "hide": false,
            "intervalMs": 1000,
            "maxDataPoints": 43200,
            "refId": "B",
            "type": "classic_conditions"
          }
        queryType: ""
        refId: B
        relativeTimeRange:
        - from: 0
          to: 0
      execErrState: Alerting
      for: 2m
      isPaused: true
      labels:
        fta_application: eks-resources
        fta_environment: Dev
        pagerduty: efc-low
        product: event-fusion-center
      name: IntegrationEvents
      noDataState: NoData
      notificationSettings:
      - contactPoint: efc-low
    - annotations:
        __dashboardUid__: ec19dcc4-17d1-4837-9a1c-8a31b7ef96e0
        __panelId__: "3"
        description: RulesEvents backlog which determines the health of the processing
          pipeline
        runbook_url: https://helpsystems.atlassian.net/wiki/spaces/FP/pages/185696827/Event+Fusion+Center+EFC
        summary: RulesEvents backlog above 1000000 events
      condition: B
      data:
      - datasourceUid: ceusvfs2fcv7kf
        model: |-
          {
            "interval": "",
            "intervalFactor": 2,
            "query": "from(bucket: \"fortra-efc\") |> range(start: -5m) |> filter(fn: (r) => r[\"_measurement\"] == \"stream\") |> filter(fn: (r) => r[\"_field\"] == \"rulesevents\") |> aggregateWindow(every: 5m, fn: sum, createEmpty: false) |> last()",
            "refId": "A",
            "resultFormat": "time_series"
          }
        queryType: ""
        refId: A
        relativeTimeRange:
        - from: 600
          to: 0
      - datasourceUid: "-100"
        model: |-
          {
            "conditions": [
              {
                "evaluator": {
                  "params": [
                    1000000
                  ],
                  "type": "gt"
                },
                "operator": {
                  "type": "and"
                },
                "query": {
                  "params": [
                    "A"
                  ]
                },
                "reducer": {
                  "type": "last"
                },
                "type": "query"
              }
            ],
            "datasource": {
              "type": "__expr__",
              "uid": "-100"
            },
            "hide": false,
            "intervalMs": 1000,
            "maxDataPoints": 43200,
            "refId": "B",
            "type": "classic_conditions"
          }
        queryType: ""
        refId: B
        relativeTimeRange:
        - from: 0
          to: 0
      execErrState: Alerting
      for: 2m
      isPaused: true
      labels:
        fta_application: eks-resources
        fta_environment: Dev
        pagerduty: efc-medium
        product: event-fusion-center
      name: RulesEvents
      noDataState: NoData
      notificationSettings:
      - contactPoint: efc-medium
    - annotations:
        __dashboardUid__: ec19dcc4-17d1-4837-9a1c-8a31b7ef96e0
        __panelId__: "3"
        description: EnrichmentEvents backlog which determines the health of the processing
          pipeline
        runbook_url: https://helpsystems.atlassian.net/wiki/spaces/FP/pages/185696827/Event+Fusion+Center+EFC
        summary: EnrichmentEvents backlog above 1500000 events
      condition: B
      data:
      - datasourceUid: ceusvfs2fcv7kf
        model: |-
          {
            "interval": "",
            "intervalFactor": 2,
            "query": "from(bucket: \"fortra-efc\") |> range(start: -5m) |> filter(fn: (r) => r[\"_measurement\"] == \"stream\") |> filter(fn: (r) => r[\"_field\"] == \"enrichmentevents\") |> aggregateWindow(every: 5m, fn: sum, createEmpty: false) |> last()",
            "refId": "A",
            "resultFormat": "time_series"
          }
        queryType: ""
        refId: A
        relativeTimeRange:
        - from: 600
          to: 0
      - datasourceUid: "-100"
        model: |-
          {
            "conditions": [
              {
                "evaluator": {
                  "params": [
                    1500000
                  ],
                  "type": "gt"
                },
                "operator": {
                  "type": "and"
                },
                "query": {
                  "params": [
                    "A"
                  ]
                },
                "reducer": {
                  "type": "last"
                },
                "type": "query"
              }
            ],
            "datasource": {
              "type": "__expr__",
              "uid": "-100"
            },
            "hide": false,
            "intervalMs": 1000,
            "maxDataPoints": 43200,
            "refId": "B",
            "type": "classic_conditions"
          }
        queryType: ""
        refId: B
        relativeTimeRange:
        - from: 0
          to: 0
      execErrState: Alerting
      for: 2m
      isPaused: true
      labels:
        fta_application: eks-resources
        fta_environment: Dev
        pagerduty: efc-high
        product: event-fusion-center
      name: EnrichmentEvents
      noDataState: NoData
      notificationSettings:
      - contactPoint: efc-high
    - annotations:
        __dashboardUid__: ec19dcc4-17d1-4837-9a1c-8a31b7ef96e0
        __panelId__: "3"
        description: BulkEvents backlog which determines the health of the processing
          pipeline
        runbook_url: https://helpsystems.atlassian.net/wiki/spaces/FP/pages/185696827/Event+Fusion+Center+EFC
        summary: BulkEvents backlog above 2000000 events
      condition: B
      data:
      - datasourceUid: ceusvfs2fcv7kf
        model: |-
          {
            "interval": "",
            "intervalFactor": 2,
            "query": "from(bucket: \"fortra-efc\") |> range(start: -5m) |> filter(fn: (r) => r[\"_measurement\"] == \"stream\") |> filter(fn: (r) => r[\"_field\"] == \"bulkevents\") |> aggregateWindow(every: 5m, fn: sum, createEmpty: false) |> last()",
            "refId": "A",
            "resultFormat": "time_series"
          }
        queryType: ""
        refId: A
        relativeTimeRange:
        - from: 600
          to: 0
      - datasourceUid: "-100"
        model: |-
          {
            "conditions": [
              {
                "evaluator": {
                  "params": [
                    2000000
                  ],
                  "type": "gt"
                },
                "operator": {
                  "type": "and"
                },
                "query": {
                  "params": [
                    "A"
                  ]
                },
                "reducer": {
                  "type": "last"
                },
                "type": "query"
              }
            ],
            "datasource": {
              "type": "__expr__",
              "uid": "-100"
            },
            "hide": false,
            "intervalMs": 1000,
            "maxDataPoints": 43200,
            "refId": "B",
            "type": "classic_conditions"
          }
        queryType: ""
        refId: B
        relativeTimeRange:
        - from: 0
          to: 0
      execErrState: Alerting
      for: 2m
      isPaused: true
      labels:
        fta_application: eks-resources
        fta_environment: Dev
        pagerduty: efc-critical
        product: event-fusion-center
      name: BulkEvents
      noDataState: NoData
      notificationSettings:
      - contactPoint: efc-critical
  providerConfigRef:
    name: influxdb-efc-dev-metric
