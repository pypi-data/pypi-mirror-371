Metadata-Version: 2.4
Name: qpdk
Version: 0.0.2
Summary: Quantum-RF generic PDK
Keywords: python
Author-email: gdsfactory <contact@gdsfactory.com>
Requires-Python: >=3.11,<3.14
Description-Content-Type: text/markdown
Classifier: Programming Language :: Python :: 3.12
Classifier: Operating System :: OS Independent
License-File: LICENSE
Requires-Dist: gdsfactory~=9.12.2
Requires-Dist: doroutes>=0.2.0
Requires-Dist: pre-commit ; extra == "dev"
Requires-Dist: jsondiff ; extra == "dev"
Requires-Dist: pytest ; extra == "dev"
Requires-Dist: pytest-cov ; extra == "dev"
Requires-Dist: pytest_regressions ; extra == "dev"
Requires-Dist: pytest-github-actions-annotate-failures ; extra == "dev"
Requires-Dist: jupytext ; extra == "docs"
Requires-Dist: matplotlib ; extra == "docs"
Requires-Dist: jupyter-book==1.0.4 ; extra == "docs"
Provides-Extra: dev
Provides-Extra: docs

# Sample Generic Quantum RF PDK 0.0.2

Based on a combination of the most popular Open source Quantum PDK packages

- **Qiskit Metal** keeps a layer stack as a dataframe/CSV (per-chip rows) with columns like `chip_name`, `layer`, `datatype`, `material`, `thickness`, `z_coord`, and `fill`. The `LayerStackHandler` enforces uniqueness of layer numbers across chips and is used by the renderers (HFSS/Gmsh).

- **KQCircuits** (KLayout-based) ships a default layer config (`default_layers`) plus an optional KLayout layer-props file (`.lyp`) and supports multi-face/multi-mask export. There’s also a utility to sync and display props from `default_layers`.

- **DeviceLayout.jl** (AWS CQC) targets GDS (for fabrication) and 3D models/meshes (for EM simulation, e.g., Palace). Teams version their “PDKs” as Julia packages/registries; a 17-qubit reference design and transmon/resonator examples are published.

## Installation

We recommend `uv`

```bash
# On macOS and Linux.
curl -LsSf https://astral.sh/uv/install.sh | sh
```

```bash
# On Windows.
powershell -ExecutionPolicy ByPass -c "irm https://astral.sh/uv/install.ps1 | iex"
```

### Installation for users

Use python 3.11, 3.12 or 3.13. We recommend [VSCode](https://code.visualstudio.com/) as an IDE.

```
uv pip install qpdk --upgrade
```

Then you need to restart Klayout to make sure the new technology installed appears.

### Installation for contributors


Then you can install with:

```bash
git clone https://github.com/gdsfactory/qpdk.git
cd qpdk
uv venv --python 3.12
uv sync --extra docs --extra dev
```

## Documentation

- [gdsfactory docs](https://gdsfactory.github.io/gdsfactory/)

