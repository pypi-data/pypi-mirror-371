[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "vllm-cli"
version = "0.2.5rc1"
authors = [
    { name="Zexi Chen", email="zzxxi.chen@gmail.com" },
]
description = "A CLI tool to conveniently serve LLMs with vLLM"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
classifiers = [
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: POSIX :: Linux",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: System :: Distributed Computing",
    "Topic :: Utilities",
]
dependencies = [
    "rich>=13.0",
    "inquirer>=3.0",
    "psutil>=5.9",
    "pydantic>=2.0",
    "pyyaml>=6.0",
    "hf-model-tool>=0.2.5",
    "requests>=2.28.0",
    "fastapi>=0.100.0",
    "uvicorn>=0.23.0",
    "httpx>=0.24.0",
]

[project.optional-dependencies]
vllm = [
    "vllm>=0.10.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-asyncio>=0.21.0",
    "requests>=2.28.0",
    "httpx>=0.24.0",
    "fastapi>=0.100.0",
    "uvicorn>=0.23.0",
]
dev = [
    "pytest>=7.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]

[project.scripts]
vllm-cli = "vllm_cli.__main__:main"

[project.urls]
"Homepage" = "https://github.com/Chen-zexi/vllm-cli"
"Bug Tracker" = "https://github.com/Chen-zexi/vllm-cli/issues"

[tool.setuptools]
package-dir = {"" = "src"}
packages.find = {where = ["src"]}

[tool.setuptools.package-data]
vllm_cli = ["schemas/*.json"]

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--tb=short",
    "--strict-markers",
]
markers = [
    "asyncio: mark test as needing asyncio",
]
filterwarnings = [
    # Ignore deprecation warnings from external dependencies
    "ignore:websockets.legacy is deprecated:DeprecationWarning",
    "ignore:websockets.server.WebSocketServerProtocol is deprecated:DeprecationWarning",
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
