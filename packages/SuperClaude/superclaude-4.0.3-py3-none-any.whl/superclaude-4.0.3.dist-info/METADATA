Metadata-Version: 2.4
Name: SuperClaude
Version: 4.0.3
Summary: SuperClaude Framework Management Hub - AI-enhanced development framework for Claude Code
Author-email: NomenAK <anton.knoery@gmail.com>, Mithun Gowda B <mithungowda.b7411@gmail.com>
License-Expression: MIT
Project-URL: Homepage, https://github.com/SuperClaude-Org/SuperClaude_Framework
Project-URL: GitHub, https://github.com/SuperClaude-Org/SuperClaude_Framework
Project-URL: Bug Tracker, https://github.com/SuperClaude-Org/SuperClaude_Framework/issues
Project-URL: Mithun Gowda B, https://github.com/mithun50
Project-URL: NomenAK, https://github.com/NomenAK
Keywords: claude,ai,automation,framework,mcp,agents,development,code-generation,assistant
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Software Development :: Code Generators
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: Environment :: Console
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: setuptools>=45.0.0
Requires-Dist: importlib-metadata>=1.0.0; python_version < "3.8"
Provides-Extra: dev
Requires-Dist: pytest>=6.0; extra == "dev"
Requires-Dist: pytest-cov>=2.0; extra == "dev"
Requires-Dist: black>=22.0; extra == "dev"
Requires-Dist: flake8>=4.0; extra == "dev"
Requires-Dist: mypy>=0.900; extra == "dev"
Provides-Extra: test
Requires-Dist: pytest>=6.0; extra == "test"
Requires-Dist: pytest-cov>=2.0; extra == "test"
Dynamic: license-file

# SuperClaude v4.0.3 üöÄ
[![Website Preview](https://img.shields.io/badge/Visit-Website-blue?logo=google-chrome)](https://superclaude-org.github.io/SuperClaude_Website/)
[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)
[![PyPI version](https://img.shields.io/pypi/v/SuperClaude.svg)](https://pypi.org/project/SuperClaude/)
[![npm version](https://img.shields.io/npm/v/@superclaude-org/superclaude.svg)](https://www.npmjs.com/package/@superclaude-org/superclaude)
[![Version](https://img.shields.io/badge/version-4.0.3-blue.svg)](https://github.com/SuperClaude-Org/SuperClaude_Framework)
[![GitHub issues](https://img.shields.io/github/issues/SuperClaude-Org/SuperClaude_Framework)](https://github.com/SuperClaude-Org/SuperClaude_Framework/issues)
[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](https://github.com/SuperClaude-Org/SuperClaude_Framework/blob/master/CONTRIBUTING.md)
[![Contributors](https://img.shields.io/github/contributors/SuperClaude-Org/SuperClaude_Framework)](https://github.com/SuperClaude-Org/SuperClaude_Framework/graphs/contributors)
[![Website](https://img.shields.io/website?url=https://superclaude-org.github.io/SuperClaude_Website/)](https://superclaude-org.github.io/SuperClaude_Website/)

SuperClaude is a meta-programming configuration framework that transforms Claude Code into a structured development platform through behavioral instruction injection and component orchestration. It enhances Claude Code with 21 slash commands, 14 specialized agents, 6 behavioral modes, and 6 MCP server integrations for systematic workflow automation.

## Quick Start

```bash
# Via Python (recommended)
pip install SuperClaude && SuperClaude install

# Via NPM (cross-platform)
npm install -g @superclaude-org/superclaude && superclaude install
```

## Support the Project üíñ

Hey, let's be real - maintaining SuperClaude takes time and resources. The Claude Max subscription alone runs $100/month for testing, and that's before counting the hours spent on documentation, bug fixes, and feature development.

If you're finding value in SuperClaude for your daily work, consider supporting the project. Even a few dollars helps cover the basics and keeps development active.

[![Ko-fi](https://img.shields.io/badge/Ko--fi-Support%20Me-ff5e5b?style=for-the-badge&logo=ko-fi)](https://ko-fi.com/superclaude)
[![Patreon](https://img.shields.io/badge/Patreon-Become%20a%20Patron-f96854?style=for-the-badge&logo=patreon)](https://patreon.com/superclaude)
[![GitHub Sponsors](https://img.shields.io/badge/GitHub-Sponsor-30363D?style=for-the-badge&logo=github-sponsors)](https://github.com/sponsors/SuperClaude-Org)

**What your support covers:**
- Claude Max subscription for testing and validation ($100/month)
- Development time for new features and bug fixes
- Documentation and example creation
- Community support and issue responses
- MCP server integration testing
- Infrastructure and hosting costs

No pressure though - the framework stays open source regardless. Just knowing people use and appreciate it is motivating. If you can't support financially, contributing code, documentation, or just spreading the word helps too. 

Every contributor matters, whether through code, feedback, or support. Thanks for being part of this community! üôè

## What's New in V4

Version 4 brings significant improvements based on community feedback and real-world usage patterns.

### ü§ñ Smarter Agent System
We've expanded to 14 specialized agents that actually know their domains. The security engineer catches real vulnerabilities, the frontend architect understands modern UI patterns, and they coordinate automatically based on what you're working on. No more generic advice - you get domain expertise when you need it.

### üìù Namespace That Makes Sense
All commands now use `/sc:` prefix to avoid stepping on your custom commands. Simple change, but it matters when you're managing multiple command sets. The 21 commands cover the full development lifecycle from brainstorming to deployment.

### üîß MCP Servers That Actually Help
Six integrated MCP servers provide real capabilities:
- **Context7** for up-to-date documentation
- **Sequential** for complex analysis and problem-solving
- **Magic** for UI component generation
- **Playwright** for browser testing
- **Morphllm** for bulk code transformations
- **Serena** for session persistence

These aren't just wrappers; they're properly integrated tools that work together.

### üéØ Behavioral Modes for Different Contexts
Five modes adjust Claude's approach based on what you're doing. Brainstorming mode asks the right questions, orchestration mode coordinates tools efficiently, token-efficiency mode reduces context usage by 30-50%. It adapts to your workflow, not the other way around.

### ‚ö° Smaller Framework, Bigger Projects
We've cut the framework's footprint significantly. Less framework overhead at Claude Code startup means more context available for your actual work. The entire V4 framework uses fewer tokens to load, leaving you with more room for your codebase, longer conversations, and complex operations. It's simple math - smaller framework = larger available context for what matters.

## Documentation

### Getting Started
- [Quick Start Guide](Docs/Getting-Started/quick-start.md)
- [Installation Guide](Docs/Getting-Started/installation.md)

### User Guides
- [Commands Reference](Docs/User-Guide/commands.md)
- [Agents Guide](Docs/User-Guide/agents.md)
- [Behavioral Modes](Docs/User-Guide/modes.md)
- [Flags Guide](Docs/User-Guide/flags.md)
- [MCP Servers](Docs/User-Guide/mcp-servers.md)
- [Session Management](Docs/User-Guide/session-management.md)

### Developer Resources
- [Technical Architecture](Docs/Developer-Guide/technical-architecture.md)
- [Contributing Code](Docs/Developer-Guide/contributing-code.md)
- [Testing & Debugging](Docs/Developer-Guide/testing-debugging.md)

### Reference
- [Quick Start Practices](Docs/Reference/quick-start-practices.md)
- [Examples Cookbook](Docs/Reference/examples-cookbook.md)
- [Troubleshooting](Docs/Reference/troubleshooting.md)

## Contributing

**Current Priorities:**
- üìù Documentation improvements and examples
- üîß MCP server integrations and configurations
- üéØ Command workflow examples and patterns
- üß™ Testing and validation procedures
- üåê Translation and internationalization

See [CONTRIBUTING.md](CONTRIBUTING.md) for detailed contribution guidelines.

## License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

**Contributors:** [View all contributors](https://github.com/SuperClaude-Org/SuperClaude_Framework/graphs/contributors)

## Star History

<a href="https://www.star-history.com/#SuperClaude-Org/SuperClaude_Framework&Date">
 <picture>
   <source media="(prefers-color-scheme: dark)" srcset="https://api.star-history.com/svg?repos=SuperClaude-Org/SuperClaude_Framework&type=Date&theme=dark" />
   <source media="(prefers-color-scheme: light)" srcset="https://api.star-history.com/svg?repos=SuperClaude-Org/SuperClaude_Framework&type=Date" />
   <img alt="Star History Chart" src="https://api.star-history.com/svg?repos=SuperClaude-Org/SuperClaude_Framework&type=Date" />
 </picture>
</a>
---
