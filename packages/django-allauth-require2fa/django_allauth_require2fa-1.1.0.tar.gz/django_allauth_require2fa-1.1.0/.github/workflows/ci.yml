name: CI

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

# Cancel in-progress runs for same branch/PR
concurrency:
  group: ci-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

env:
  PYTHONUNBUFFERED: "1"
  FORCE_COLOR: "1"

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: uv sync --dev

      - name: Lint with Ruff
        uses: astral-sh/ruff-action@v3
        with:
          args: "check --output-format=github"

  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: uv sync --dev

      - name: Check formatting with Ruff
        uses: astral-sh/ruff-action@v3
        with:
          args: "format --check --diff"

  security:
    name: Security
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: uv sync --dev

      - name: Run security checks with Bandit
        run: uv run --extra dev bandit -r require2fa/ --exclude require2fa/tests/ --format json --output bandit-results.json || true

      - name: Upload Bandit results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: bandit-results
          path: bandit-results.json

  type-check:
    name: Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: uv sync --dev

      - name: Run MyPy type checking
        run: uv run --extra dev mypy require2fa/

  test:
    name: Test Python ${{ matrix.python-version }} / Django ${{ matrix.django-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12", "3.13"]
        django-version: ["4.2", "5.0", "5.1"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          uv sync --dev
          uv pip install "Django~=${{ matrix.django-version }}.0"

      - name: Run Django tests
        run: uv run python -m django test require2fa.tests --settings=require2fa.tests.settings --verbosity=2

  # Quality gate job that depends on all other jobs
  quality-gate:
    name: Quality Gate
    runs-on: ubuntu-latest
    needs: [lint, format, security, type-check, test]
    if: always()
    steps:
      - name: Check all jobs status
        run: |
          if [[ "${{ needs.lint.result }}" != "success" ]]; then
            echo "❌ Lint job failed"
            exit 1
          fi
          if [[ "${{ needs.format.result }}" != "success" ]]; then
            echo "❌ Format job failed"
            exit 1
          fi
          if [[ "${{ needs.security.result }}" != "success" ]]; then
            echo "❌ Security job failed"
            exit 1
          fi
          if [[ "${{ needs.type-check.result }}" != "success" ]]; then
            echo "❌ Type check job failed"
            exit 1
          fi
          if [[ "${{ needs.test.result }}" != "success" ]]; then
            echo "❌ Test job failed"
            exit 1
          fi
          echo "✅ All quality checks passed!"