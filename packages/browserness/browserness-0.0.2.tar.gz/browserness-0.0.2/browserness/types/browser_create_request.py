# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class BrowserCreateRequest(UniversalBaseModel):
    """
    Request to create a browser (simple API).
    """

    proxy_server: typing.Optional[str] = pydantic.Field(default=None)
    """
    Optional proxy server
    """

    headless: typing.Optional[bool] = pydantic.Field(default=None)
    """
    Whether to run browser in headless mode
    """

    region: typing.Optional[str] = pydantic.Field(default=None)
    """
    Preferred region for the browser
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
