[tool.poetry]
name = "{{ project_name }}"
version = "0.1.0"
description = "{{ project_name | title }} MCP Service built with Genesis MCP Core"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = ">=3.12,<3.13"
genesis-mcp-core = {path = "../genesis-mcp-core", develop = true}
python-dotenv = "^1.0.0"
fastmcp = "^2.9.2"
pydantic = "^2.0.0"
pydantic-settings = "^2.2.1"
uvicorn = "^0.24.0"
httpx = "^0.28.0"
structlog = "^23.0.0"
fastapi = "^0.100.0"
aiohttp = "^3.9.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.0"
pytest-asyncio = "^0.24.0"
black = "^24.10.0"
isort = "^5.13.0"
ruff = "^0.1.0"
mypy = "^1.11.0"

[tool.poetry.scripts]
{{ project_name_normalized }}-mcp = "{{ project_name_normalized }}.server:main"
start-server = "{{ project_name_normalized }}.server:main"

# UV-compatible project configuration
[project]
name = "{{ project_name }}"
version = "0.1.0"
description = "{{ project_name | title }} MCP Service built with Genesis MCP Core"
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
readme = "README.md"
requires-python = ">=3.12,<3.13"
dependencies = [
    "genesis-mcp-core",
    "python-dotenv>=1.0.0",
    "fastmcp>=2.9.2",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.2.1",
    "uvicorn>=0.24.0",
    "httpx>=0.28.0",
    "structlog>=23.0.0",
    "fastapi>=0.100.0",
    "aiohttp>=3.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.0",
    "pytest-asyncio>=0.24.0",
    "black>=24.10.0",
    "isort>=5.13.0",
    "ruff>=0.1.0",
    "mypy>=1.11.0",
]

[project.scripts]
{{ project_name_normalized }}-mcp = "{{ project_name_normalized }}.server:main"
start-server = "{{ project_name_normalized }}.server:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py312']

[tool.isort]
profile = "black"

[tool.ruff]
target-version = "py312"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
    "--color=yes",
]

[dependency-groups]
dev = [
    "pytest>=8.3.0",
    "pytest-asyncio>=0.24.0",
    "black>=24.10.0",
    "isort>=5.13.0",
    "ruff>=0.1.0",
    "mypy>=1.11.0",
]
