# Default values for {{ SERVICE_NAME }}.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2

image:
  repository: "{% raw %}{{ .Values.global.image.repository }}{% endraw %}"
  name: {{ SERVICE_NAME }}
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: "{{ SERVICE_NAME }}"

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "genesis-platform-sa"
  enabled: true

podAnnotations:
  reloader.stakater.com/auto: "true"
podLabels: {}
extraLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8002

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    memory: 1024Mi
  requests:
    cpu: 200m
    memory: 512Mi

livenessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 5
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 6
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

# Environment variables for the MCP service
env:
  SERVER__HOST: "0.0.0.0"
  SERVER__PORT: "8002"
  SERVER__DEBUG: "false"
  
  # Connector enable flags
  ENABLE_AZURE_OPENAI: "true"
  ENABLE_MOLINA_ENCODER: "true"
  ENABLE_MOLINA_PA: "true"
  ENABLE_QNXT: "true"
  ENABLE_JIVA_CONTACT: "false"
  ENABLE_JIVA_DOCUMENT: "false"

# Secret environment variables (stored in Kubernetes secrets)
envSecrets:
  # Azure OpenAI
  - name: AZURE_OPENAI_API_KEY
    secretName: {{ SERVICE_NAME }}-secrets
    secretKey: azure-openai-api-key
  - name: AZURE_OPENAI_API_BASE
    secretName: {{ SERVICE_NAME }}-secrets
    secretKey: azure-openai-api-base
  - name: AZURE_OPENAI_CHATGPT_DEPLOYMENT
    secretName: {{ SERVICE_NAME }}-secrets
    secretKey: azure-openai-chatgpt-deployment
  - name: AZURE_OPENAI_API_VERSION
    secretName: {{ SERVICE_NAME }}-secrets
    secretKey: azure-openai-api-version
  
  # Molina Encoder
  - name: MOLINA_ENCODER_SERVICE_URL
    secretName: {{ SERVICE_NAME }}-secrets
    secretKey: molina-encoder-service-url
  - name: MOLINA_ENCODER_TOKEN
    secretName: {{ SERVICE_NAME }}-secrets
    secretKey: molina-encoder-token
  
  # Molina PA
  - name: MOLINA_PA_SERVICE_URL
    secretName: {{ SERVICE_NAME }}-secrets
    secretKey: molina-pa-service-url
  - name: MOLINA_PA_USERNAME
    secretName: {{ SERVICE_NAME }}-secrets
    secretKey: molina-pa-username
  - name: MOLINA_PA_PASSWORD
    secretName: {{ SERVICE_NAME }}-secrets
    secretKey: molina-pa-password
  
  # QNXT
  - name: QXI_BASE_URL
    secretName: {{ SERVICE_NAME }}-secrets
    secretKey: qxi-base-url
  - name: QXI_API_KEY
    secretName: {{ SERVICE_NAME }}-secrets
    secretKey: qxi-api-key
  - name: QXI_CLIENT_ID
    secretName: {{ SERVICE_NAME }}-secrets
    secretKey: qxi-client-id
  - name: QXI_CLIENT_SECRET
    secretName: {{ SERVICE_NAME }}-secrets
    secretKey: qxi-client-secret
  - name: QXI_ENV_ID
    secretName: {{ SERVICE_NAME }}-secrets
    secretKey: qxi-env-id

# Network policies
networkPolicy:
  enabled: false
  policyTypes:
    - Ingress
    - Egress

# Pod disruption budget
podDisruptionBudget:
  enabled: true
  minAvailable: 1

# Monitoring
monitoring:
  enabled: false
  serviceMonitor:
    enabled: false
    interval: 30s
    path: /metrics
    port: http 