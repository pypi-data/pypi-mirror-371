name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v0.1.0)'
        required: true
        type: string

permissions:
  contents: write
  id-token: write

jobs:
  build:
    name: Build distribution
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v5
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"
    
    - name: Install dependencies
      run: uv sync --all-groups --frozen
    
    - name: Run tests
      run: uv run pytest tests/ -v --cov=src --cov-report=xml --cov-report=term
      env:
        # Mock environment variables for testing
        LIGHTCAST_CLIENT_ID: "test_client_id"
        LIGHTCAST_CLIENT_SECRET: "test_client_secret"
    
    - name: Run linting
      run: |
        uv run ruff check src/ tests/
        uv run ruff format --check src/ tests/
    
    - name: Run type checking
      run: uv run mypy src/
    
    - name: Build package
      run: uv build
    
    - name: Check distribution
      run: |
        uv run twine check dist/*
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/

  publish-pypi:
    name: Publish to PyPI
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    environment:
      name: pypi
      url: https://pypi.org/p/mcp-lightcast
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/
    
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        attestations: true

  publish-testpypi:
    name: Publish to TestPyPI
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    environment:
      name: testpypi
      url: https://test.pypi.org/p/mcp-lightcast
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/
    
    - name: Publish to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        attestations: true

  github-release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/
    
    - name: Extract version from tag
      id: version
      run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
    
    - name: Generate release notes
      id: release_notes
      run: |
        cat > release_notes.md << 'EOF'
        ## MCP Lightcast v${{ steps.version.outputs.version }}
        
        ### 🚀 Features
        - Complete Skills API integration with 6/10 endpoints working
        - Complete Titles API integration with 5/8 endpoints working  
        - Skills extraction from text with high accuracy
        - Bulk operations for efficient data retrieval
        - Modern OAuth2 authentication with Lightcast APIs
        - FastMCP-based server with streamable-HTTP transport
        - uv package management with lock files
        - Docker deployment support
        - Comprehensive CLI interface
        
        ### 📊 API Coverage
        - **Skills API**: search, individual retrieval, bulk operations, text extraction, metadata
        - **Titles API**: search, individual retrieval, bulk operations, metadata
        - **Version Support**: Uses "latest" keyword with backward compatibility
        - **Authentication**: OAuth2 with emsi_open scope
        
        ### 🛠️ Installation
        ```bash
        # Using uv (recommended)
        uvx --from mcp-lightcast mcp-lightcast
        
        # Using pip
        pip install mcp-lightcast
        
        # Using Docker
        docker run -e LIGHTCAST_CLIENT_ID=your_id -e LIGHTCAST_CLIENT_SECRET=your_secret ghcr.io/your-username/mcp-lightcast
        ```
        
        ### 📚 Documentation
        See the [README](https://github.com/${{ github.repository }}/blob/main/README.md) for complete setup and usage instructions.
        
        ### 🔗 Links
        - [PyPI Package](https://pypi.org/project/mcp-lightcast/)
        - [Docker Image](https://github.com/${{ github.repository }}/pkgs/container/mcp-lightcast)
        - [Testing Summary](https://github.com/${{ github.repository }}/blob/main/TESTING_SUMMARY.md)
        EOF
    
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        name: "MCP Lightcast v${{ steps.version.outputs.version }}"
        body_path: release_notes.md
        files: |
          dist/*.tar.gz
          dist/*.whl
        draft: false
        prerelease: false
        generate_release_notes: true