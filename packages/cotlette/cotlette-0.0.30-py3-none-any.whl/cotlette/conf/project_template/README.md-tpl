# {{ project_name }}

Проект на базе фреймворка Cotlette.

## Описание

Этот проект создан с использованием фреймворка Cotlette и включает в себя:

- **Приложение home** - главная страница и базовые страницы
- **Админ-панель** - управление контентом
- **Система аутентификации** - регистрация, вход, управление пользователями
- **API endpoints** - REST API для взаимодействия с данными
- **Современный UI** - красивый интерфейс на базе Soft UI Dashboard

## Установка и запуск

### 1. Создание виртуального окружения

```bash
python -m venv venv
source venv/bin/activate  # Linux/Mac
# или
venv\Scripts\activate  # Windows
```

### 2. Установка зависимостей

```bash
pip install -r requirements.txt
```

### 3. Настройка базы данных

Отредактируйте `config/settings.py` и укажите параметры подключения к базе данных.

#### SQLite (по умолчанию)
```python
'URL': 'sqlite:///' + str(BASE_DIR / 'db.sqlite3')
```

#### PostgreSQL (асинхронно)
```python
'URL': 'postgresql+asyncpg://user:pass@localhost/dbname'
```

#### MySQL (асинхронно)
```python
'URL': 'mysql+aiomysql://user:pass@localhost/dbname'
```

### 4. Применение миграций

```bash
alembic upgrade head
```

### 5. Создание суперпользователя

```bash
python manage.py createsuperuser
```

### 6. Запуск сервера

```bash
uvicorn core:app --reload
```

## Структура проекта

```
{{ project_name }}/
├── apps/                    # Приложения
│   ├── home/               # Главное приложение
│   │   ├── models.py       # Модели данных
│   │   ├── views.py        # Представления
│   │   ├── urls.py         # URL маршруты
│   │   ├── admin.py        # Админка
│   │   └── api.py          # API endpoints
│   └── ...
├── config/                  # Конфигурация
│   ├── settings.py         # Настройки
│   └── urls.py             # Главные URL
├── core/                    # Основные компоненты
│   └── __init__.py         # Инициализация приложения
├── templates/               # Шаблоны
│   ├── base.html           # Базовый шаблон
│   └── home/               # Шаблоны приложения home
├── static/                  # Статические файлы
├── migrations/              # Миграции базы данных
├── requirements.txt         # Зависимости
└── alembic.ini             # Конфигурация Alembic
```

## Основные функции

### Главная страница
- Отображение контента из базы данных
- Адаптивный дизайн
- Интеграция с админ-панелью

### Админ-панель
- Управление контентом главной страницы
- Управление пользователями и группами
- Настройка прав доступа

### API
- REST API для получения данных
- Аутентификация через JWT токены
- Документация Swagger/OpenAPI

### Аутентификация
- Регистрация и вход пользователей
- Управление сессиями
- Защищенные страницы

## Разработка

### Добавление нового приложения

```bash
python manage.py startapp myapp
```

### Создание миграций

```bash
alembic revision --autogenerate -m "Описание изменений"
alembic upgrade head
```

### Запуск тестов

```bash
python manage.py test
```

## Лицензия

Этот проект использует лицензию MIT.

## Поддержка

Для получения поддержки обратитесь к документации Cotlette или создайте issue в репозитории.

