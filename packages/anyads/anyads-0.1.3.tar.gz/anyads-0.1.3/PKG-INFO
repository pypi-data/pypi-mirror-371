Metadata-Version: 2.4
Name: anyads
Version: 0.1.3
Summary: Official SDK for the AnyAds advertising platform for Telegram bots.
Project-URL: Homepage, https://anyads.online
Project-URL: Documentation, https://docs.anyads.online
Author: MaoMedia AnyAds
Classifier: Framework :: AsyncIO
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.8
Requires-Dist: getmac>=0.9.0
Requires-Dist: httpx[http2]>=0.25.0
Provides-Extra: aiogram
Requires-Dist: aiogram>=3.0.0; extra == 'aiogram'
Description-Content-Type: text/markdown

–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π Python SDK –¥–ª—è –ª–µ–≥–∫–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤–∞—à–µ–≥–æ Telegram-–±–æ—Ç–∞ —Å —Ä–µ–∫–ª–∞–º–Ω–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ–π **AnyAds.online**. –ù–∞—á–Ω–∏—Ç–µ –º–æ–Ω–µ—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤–∞—à—É –∞—É–¥–∏—Ç–æ—Ä–∏—é —É–∂–µ —Å–µ–≥–æ–¥–Ω—è!

## üöÄ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç

–≠—Ç–æ—Ç –≥–∞–π–¥ –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å SDK –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –≤–∞—à–µ–≥–æ –±–æ—Ç–∞ –∫ –∑–∞—Ä–∞–±–æ—Ç–∫—É –º–µ–Ω–µ–µ —á–µ–º –∑–∞ 5 –º–∏–Ω—É—Ç.

### –®–∞–≥ 1: –£—Å—Ç–∞–Ω–æ–≤–∫–∞

–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–∞–∫–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É—è `pip`. –ï—Å–ª–∏ –≤—ã —Ä–∞–±–æ—Ç–∞–µ—Ç–µ —Å —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–æ–º **Aiogram**, –º—ã –Ω–∞—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å SDK —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏ –¥–ª—è —É–ø—Ä–æ—â–µ–Ω–Ω–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏.

```bash
# –î–ª—è Aiogram
pip install "anyads[aiogram]"

# –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ (–¥–ª—è –¥—Ä—É–≥–∏—Ö —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–æ–≤)
pip install anyads
```

### –®–∞–≥ 2: –ü–æ–ª—É—á–µ–Ω–∏–µ API Key

1.  –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ [**anyads.online**](https://anyads.online).
2.  –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª "–ü–ª–æ—â–∞–¥–∫–∏" –∏ –¥–æ–±–∞–≤—å—Ç–µ –≤–∞—à–µ–≥–æ –±–æ—Ç–∞, —É–∫–∞–∑–∞–≤ –µ–≥–æ `@username`.
3.  –î–ª—è –≤–∞—à–µ–π –Ω–æ–≤–æ–π –ø–ª–æ—â–∞–¥–∫–∏ –±—É–¥–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω —É–Ω–∏–∫–∞–ª—å–Ω—ã–π **`API_KEY`**, –Ω–∞—á–∏–Ω–∞—é—â–∏–π—Å—è —Å `anyads_...`. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –µ–≥–æ. –û–Ω –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–º —à–∞–≥–µ.

### –®–∞–≥ 3: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≤ –∫–æ–¥ (–ü—Ä–∏–º–µ—Ä –¥–ª—è Aiogram 3.x)

–í –≥–ª–∞–≤–Ω–æ–º —Ñ–∞–π–ª–µ –≤–∞—à–µ–≥–æ –±–æ—Ç–∞, –≥–¥–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –µ–≥–æ –∑–∞–ø—É—Å–∫, –¥–æ–±–∞–≤—å—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π –∫–æ–¥:

```python
import asyncio
import os
import logging
from aiogram import Bot, Dispatcher, types

# 1. –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º AnyAds –∏ –æ—Ç–¥–µ–ª—å–Ω–æ - —Ö–µ–ª–ø–µ—Ä—ã –¥–ª—è aiogram
import anyads
from anyads.integrations import aiogram_handlers

# --- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ---
# –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Ö—Ä–∞–Ω–∏—Ç—å –∫–ª—é—á–∏ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è, –∞ –Ω–µ –≤ –∫–æ–¥–µ
ANYADS_API_KEY = os.getenv("ANYADS_API_KEY")
TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –±–∞–∑–æ–≤–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
logging.basicConfig(level=logging.INFO)

# --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Aiogram ---
dp = Dispatcher()
bot = Bot(TELEGRAM_BOT_TOKEN)

# 2. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º SDK AnyAds
# SDK –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—Å—Ç–∏—Ç —Ñ–æ–Ω–æ–≤—ã–π –æ–ø—Ä–æ—Å —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –∑–∞–¥–∞—á
sdk = anyads.init(api_key=ANYADS_API_KEY)

# 3. –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ AnyAds, –∏—Å–ø–æ–ª—å–∑—É—è –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–æ–¥—É–ª—å
aiogram_handlers.register(dp)


# 4. –°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–Ω–æ–π —Ä–µ–∫–ª–∞–º—ã
@sdk.on_broadcast_received
async def handle_ad_task(task_data: dict):
    """
    –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω–∞ SDK –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏ –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É.
    """
    logging.info(f"–ü–æ–ª—É—á–µ–Ω–∞ –Ω–æ–≤–∞—è –∑–∞–¥–∞—á–∞: {task_data.get('task_id')}")

    try:
        creative = task_data.get("creative", {})
        content = creative.get("content", {})

        text = content.get("text")
        files = content.get("files", [])
        buttons_data = content.get("buttons", [])
        image_url = files[0] if files else None

        if not text and not image_url:
            logging.error("–ö—Ä–µ–∞—Ç–∏–≤ –ø—É—Å—Ç. –ó–∞–¥–∞—á–∞ –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∞.")
            return

        # –°–æ–±–∏—Ä–∞–µ–º –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        keyboard_builder = InlineKeyboardBuilder()
        if buttons_data:
            for row in buttons_data:
                buttons = [types.InlineKeyboardButton(text=btn['text'], url=btn['url']) for btn in row]
                if buttons:
                    keyboard_builder.row(*buttons)

        reply_markup = keyboard_builder.as_markup() if buttons_data else None

        # !!! –í–ê–ñ–ù–û: –ó–¥–µ—Å—å –≤–∞—à–∞ –ª–æ–≥–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        user_ids = [] # –ó–∞–≥–ª—É—à–∫–∞, –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –∫–æ–¥

        for user_id in user_ids:
            try:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ. –õ–æ–≥–∏–∫–∞ –ø—Ä–æ—Å—Ç–∞—è, —Ç.–∫. Ad Engine
                # –ø—Ä–∏—Å—ã–ª–∞–µ—Ç —É–∂–µ –≤–∞–ª–∏–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.
                if image_url:
                    await bot.send_photo(
                        user_id,
                        photo=image_url,
                        caption=(text or ''),
                        reply_markup=reply_markup
                    )
                elif text:
                    await bot.send_message(
                        user_id,
                        text=text,
                        reply_markup=reply_markup,
                        disable_web_page_preview=True
                    )

                await asyncio.sleep(0.05) # –ü–∞—É–∑–∞ –¥–ª—è –æ–±—Ö–æ–¥–∞ –ª–∏–º–∏—Ç–æ–≤ –Ω–∞ —Å–∫–æ—Ä–æ—Å—Ç—å –æ—Ç–ø—Ä–∞–≤–∫–∏
            except Exception as e:
                logging.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")

    except Exception as e:
        logging.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ handle_ad_task: {e}", exc_info=True)


# --- –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ ---
async def main():
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–æ–Ω–æ–≤—ã–π –æ–ø—Ä–æ—Å AnyAds
    await sdk.start()

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    try:
        await dp.start_polling(bot)
    finally:
        # –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º SDK –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞
        await sdk.stop()
        logging.info("–ë–æ—Ç –∏ AnyAds SDK –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.")

if __name__ == "__main__":
    if not ANYADS_API_KEY or not TELEGRAM_BOT_TOKEN:
        raise RuntimeError("–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è ANYADS_API_KEY –∏ TELEGRAM_BOT_TOKEN")

    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤—Ä—É—á–Ω—É—é.")

```

### 4. –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è

–ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –≤—ã –∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ —Å –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º SDK, –µ–≥–æ —Å—Ç–∞—Ç—É—Å –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ [**AnyAds.online**](https://anyads.online) –±—É–¥–µ—Ç "–û–∂–∏–¥–∞–µ—Ç –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏". –ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤ –ø—Ä–æ–≤–µ—Ä–∏—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é –∏ –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –≤–∞—à—É –ø–ª–æ—â–∞–¥–∫—É. –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –≤–∞—à –±–æ—Ç –Ω–∞—á–Ω–µ—Ç –ø–æ–ª—É—á–∞—Ç—å —Ä–µ–∫–ª–∞–º–Ω—ã–µ –∑–∞–¥–∞—á–∏.

## ‚öôÔ∏è –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è (–¥–ª—è –¥—Ä—É–≥–∏—Ö —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–æ–≤)

–ï—Å–ª–∏ –≤—ã –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ `aiogram`, –≤—ã –º–æ–∂–µ—Ç–µ –ª–µ–≥–∫–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å SDK –≤—Ä—É—á–Ω—É—é.

1.  **–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —è–¥—Ä–æ SDK:** `pip install anyads`
2.  **–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ SDK**, –∫–∞–∫ –≤ –ø—Ä–∏–º–µ—Ä–µ –≤—ã—à–µ (`anyads.init(...)`, `await sdk.start()`).
3.  **–û–±—Ä–∞–±–æ—Ç–∞–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏:** –í–∞–º –Ω—É–∂–Ω–æ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ –ø–æ–π–º–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–∞—á–∏–Ω–∞—é—â–µ–µ—Å—è —Å `/verify_anyads_`, –∏ –ø–µ—Ä–µ–¥–∞—Ç—å –µ–≥–æ –≤ SDK.

```python
# –ü—Ä–∏–º–µ—Ä –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
async def handle_messages(message):
    if message.text and message.text.startswith('/verify_anyads_'):
        sdk = anyads.get_sdk_instance()
        success = await sdk.process_verification_code(message.text)
        if success:
            # –û—Ç–≤–µ—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ–± —É—Å–ø–µ—Ö–µ
            pass
```

## ‚ùì –ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å?

–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –Ω–∞—à—É –ø–æ–¥–¥–µ—Ä–∂–∫—É –∏–ª–∏ –∏–∑—É—á–∏—Ç–µ –ø–æ–ª–Ω—É—é –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –Ω–∞ [**docs.anyads.online**](https://docs.anyads.online).
