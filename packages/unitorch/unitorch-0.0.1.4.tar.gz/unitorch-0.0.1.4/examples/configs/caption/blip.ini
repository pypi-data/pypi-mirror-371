[core/cli]
task_name = core/task/supervised
from_ckpt_dir = ./cache
cache_dir = ./cache
train_file = ./train.tsv
dev_file = ./dev.tsv
test_file = ./test.tsv

# model
[core/model/caption/blip]
pretrained_name = blip-image-captioning-base
no_repeat_ngram_size = 3
max_gen_seq_length = 15

# dataset
[core/dataset/ast]
names = ['caption', 'image']

[core/dataset/ast/train]
data_files = ${core/cli:train_file}
preprocess_functions = [
    'core/process/blip/generation(caption, core/process/image/read(image))',
  ]

[core/dataset/ast/dev]
data_files = ${core/cli:dev_file}
preprocess_functions = [
    'core/process/blip/image_classification(core/process/image/read(image))',
    'core/process/blip/generation/labels(caption)',
  ]

[core/dataset/ast/test]
names = ['image']
data_files = ${core/cli:test_file}
preprocess_functions = [
    'core/process/blip/image_classification(core/process/image/read(image))'
  ]

# process
[core/process/blip]
pretrained_name = blip-image-captioning-base
max_gen_seq_length = 15

[core/process/image]
http_url = http://0.0.0.0:11230/?file={0}

# optim
[core/optim/adamw]
learning_rate = 0.0001

# scheduler
[core/scheduler/linear_warmup]
num_warmup_rate = 0.001

# task
[core/task/supervised]
model = core/model/caption/blip
optim = core/optim/adamw
scheduler = core/scheduler/linear_warmup
dataset = core/dataset/ast
loss_fn = core/loss/lm
score_fn = core/score/bleu
monitor_fns = ['core/score/bleu', 'core/score/rouge1', 'core/score/rouge2', 'core/score/rougel']
output_header = ['image']
postprocess_fn = core/postprocess/blip/detokenize
writer = core/writer/csv

from_ckpt_dir = ${core/cli:from_ckpt_dir}
to_ckpt_dir = ${core/cli:cache_dir}
output_path = ${core/cli:cache_dir}/output.txt
train_batch_size = 4
dev_batch_size = 8
test_batch_size = 8
