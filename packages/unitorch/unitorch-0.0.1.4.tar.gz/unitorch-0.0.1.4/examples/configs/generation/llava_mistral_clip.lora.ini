[core/cli]
task_name = core/task/supervised
from_ckpt_dir = ./cache
cache_dir = ./cache
train_file = ./train.tsv
dev_file = ./dev.tsv
test_file = ./test.tsv

# model
[core/model/generation/peft/lora/llava/mistral_clip]
pretrained_name = llava-v1.6-mistral-7b-hf
quant_config_path = https://raw.githubusercontent.com/fuliucansheng/unitorch/master/examples/configs/quantization/4bit.json

# dataset
[core/dataset/ast]
names = ['encode', 'image', 'decode']

[core/dataset/ast/train]
data_files = ${core/cli:train_file}
preprocess_functions = ['core/process/llava/mistral_clip/generation(encode, core/process/image/read(image), decode)']

[core/dataset/ast/dev]
data_files = ${core/cli:dev_file}
preprocess_functions = ['core/process/llava/mistral_clip/generation/inputs(encode, core/process/image/read(image))', 'core/process/llava/mistral_clip/generation/labels(decode)']

[core/dataset/ast/test]
data_files = ${core/cli:test_file}
preprocess_functions = ['core/process/llava/mistral_clip/generation/inputs(encode, core/process/image/read(image))']

# process
[core/process/llava/mistral_clip]
pretrained_name = llava-v1.6-mistral-7b-hf
max_seq_length = 36

[core/process/image]
http_url = http://0.0.0.0:11230/?file={0}

# optim
[core/optim/adamw]
learning_rate = 0.00001

# scheduler
[core/scheduler/linear_warmup]
num_warmup_rate = 0.001

[core/writer/csv]
escapechar = \

# task
[core/task/supervised]
model = core/model/generation/peft/lora/llava/mistral_clip
optim = core/optim/adamw
scheduler = core/scheduler/linear_warmup
dataset = core/dataset/ast
loss_fn = core/loss/lm
score_fn = core/score/bleu
monitor_fns = ['core/score/bleu']
ckpt_freq = 2000

output_header = ['encode', 'image', 'decode']
postprocess_fn = core/postprocess/llava/mistral_clip/detokenize
writer = core/writer/csv

from_ckpt_dir = ${core/cli:from_ckpt_dir}
to_ckpt_dir = ${core/cli:cache_dir}
output_path = ${core/cli:cache_dir}/output.txt
train_batch_size = 1
dev_batch_size = 1
test_batch_size = 1