[core/cli]
task_name = core/task/supervised
from_ckpt_dir = ./cache
cache_dir = ./cache
train_file = ./train.tsv
dev_file = ./dev.tsv
test_file = ./test.tsv

# model
[core/model/detection/detr]
pretrained_name = detr-resnet-50
num_classes = 80

# dataset
[core/dataset/ast]
names = ['image', 'height', 'width', 'classes', 'bboxes']

[core/dataset/ast/train]
data_files = ${core/cli:train_file}
preprocess_functions = ['core/process/detr/detection(core/process/image/read(image), eval(bboxes), eval(classes))']

[core/dataset/ast/dev]
data_files = ${core/cli:dev_file}
preprocess_functions = ['core/process/detr/detection(core/process/image/read(image), eval(bboxes), eval(classes), do_eval=True)']

[core/dataset/ast/test]
names = ['image']
data_files = ${core/cli:test_file}
preprocess_functions = ['core/process/detr/image(core/process/image/read(image))']

# process
[core/process/detr]
pretrained_name = detr-resnet-50

[core/process/image]
http_url = http://0.0.0.0:11230/?file={0}

[core/optim/adam]
learning_rate = 0.00001

# task
[core/task/supervised]
model = core/model/detection/detr
optim = core/optim/adam
dataset = core/dataset/ast
score_fn = core/score/mAP
monitor_fns = ['core/score/mAP', 'core/score/mAP50']
output_header = ['image']
postprocess_fn = core/postprocess/detr/detection
writer = core/writer/csv

from_ckpt_dir = ${core/cli:from_ckpt_dir}
to_ckpt_dir = ${core/cli:cache_dir}
output_path = ${core/cli:cache_dir}/output.txt

epochs = 5000

train_batch_size = 4
dev_batch_size = 4
test_batch_size = 4
