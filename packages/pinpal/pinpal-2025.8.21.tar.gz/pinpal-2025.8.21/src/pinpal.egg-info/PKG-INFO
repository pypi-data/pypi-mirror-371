Metadata-Version: 2.4
Name: pinpal
Version: 2025.8.21
Author-email: Glyph <glyph@glyph.im>
License: The MIT License (MIT)
        
        Copyright (c) 2022 Glyph
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in
        all copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
        THE SOFTWARE.
        
Project-URL: Home, https://github.com/glyph/pinpal/
Classifier: License :: OSI Approved :: MIT License
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: keyring
Requires-Dist: horsephrase
Requires-Dist: fritter
Requires-Dist: twisted
Provides-Extra: gui
Requires-Dist: py2app; sys_platform == "darwin" and extra == "gui"
Requires-Dist: pyobjc-core; sys_platform == "darwin" and extra == "gui"
Requires-Dist: pyobjc-framework-Cocoa; sys_platform == "darwin" and extra == "gui"
Requires-Dist: pyobjc-framework-ExceptionHandling; sys_platform == "darwin" and extra == "gui"
Requires-Dist: pyobjc-framework-UserNotifications; sys_platform == "darwin" and extra == "gui"
Requires-Dist: pyobjc-framework-CFNetwork; sys_platform == "darwin" and extra == "gui"
Requires-Dist: pyobjc-framework-ServiceManagement; sys_platform == "darwin" and extra == "gui"
Requires-Dist: quickmacapp>=2025.1.21; sys_platform == "darwin" and extra == "gui"
Requires-Dist: quickmachotkey; sys_platform == "darwin" and extra == "gui"
Requires-Dist: ewmh; sys_platform == "linux" and extra == "gui"
Requires-Dist: pycairo; sys_platform == "linux" and extra == "gui"
Requires-Dist: PyGObject; sys_platform == "linux" and extra == "gui"
Requires-Dist: python-xlib; sys_platform == "linux" and extra == "gui"
Requires-Dist: pydbus; sys_platform == "linux" and extra == "gui"
Provides-Extra: dev
Requires-Dist: pip-tools; extra == "dev"
Requires-Dist: mypy; extra == "dev"
Requires-Dist: mypy-zope; extra == "dev"
Requires-Dist: types-python-dateutil; extra == "dev"
Requires-Dist: pygobject-stubs; extra == "dev"
Requires-Dist: types-python-xlib; extra == "dev"
Requires-Dist: encrust; sys_platform == "darwin" and extra == "dev"
Dynamic: license-file

# PINPal

A tool for helping you memorize random passwords.

## The Problem

Most of the time, we should store our passwords in password managers and not memorize them.

But there are a small number of passwords that you really need to have committed to memory:

- first and foremost, of course, the master password for your password manager
- the PIN code for your bank
- the unlock code for your mobile devices
- the password to the email account where the unlock codes

All of these codes should be rotated at least *somewhat* regularly, but doing
the work of re-memorizing these is super annoying and often we just don't
bother.

## The Solution

Rather than write down a password and rely on the process of needing to
actually unlock your devices, PINPal provides a spaced-repetition prompt to try
to help you remember them as you're working on a computer.

### Security

Since PINPal's job is to help you manage your most sensitive secrets, it
behooves it to treat its data very carefully.

Currently PINPal stores all secrets using the [Python `keyring`
module](https://keyring.readthedocs.io/en/latest/), and gradually forgets the
password as you make progress in memorizing it.

### Usage

To start memorizing a new secret,

```console
$ pinpal new
```

and you'll be prompted to label the new secret.

To check up on your secrets and get prompted to recite them, simply run

```console
$ pinpal
```

You will want to add

```sh
pinpal check
```

to something that is run frequently. I have it in my shell prompt.  This will
tell you when you need to run `pinpal`.
