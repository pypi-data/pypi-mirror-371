.TH "palmmeteo.plugins.Plugin" 3 "Fri Aug 22 2025" "PALM-meteo" \" -*- nroff -*-
.ad l
.nh
.SH NAME
palmmeteo.plugins.Plugin
.SH SYNOPSIS
.br
.PP
.PP
Inherits metaclass, and \fBpalmmeteo\&.plugins\&.PluginMeta\fP\&.
.PP
Inherited by \fBpalmmeteo\&.plugins\&.HInterpPluginMixin\fP, \fBpalmmeteo\&.plugins\&.ImportPluginMixin\fP, \fBpalmmeteo\&.plugins\&.SetupPluginMixin\fP, \fBpalmmeteo\&.plugins\&.VInterpPluginMixin\fP, \fBpalmmeteo\&.plugins\&.WritePluginMixin\fP, and \fBpalmmeteo_stdplugins\&.meteo\&.RequiresMeteoPluginMixin\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "def \fBcheck_config\fP (self, *args, **kwargs)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.PP
.nf
Base class for plugins

The objects are not persistent across multiple runs, so their members (if
any) should be created by the constructor and any stage should not expect
members to be created by the preceding stages\&. Use rt to store persistent
data\&.

.fi
.PP
 
.SH "Member Function Documentation"
.PP 
.SS "def palmmeteo\&.plugins\&.Plugin\&.check_config ( self, * args, ** kwargs)"

.PP
.nf
(Load and) validate plugin-related configuration\&.

Any plugin can optinally implement the check_config method for
validating configuration\&. It is not required, so the method is not
abstract\&.

.fi
.PP
 
.PP
Reimplemented in \fBpalmmeteo_stdplugins\&.aladin\&.AladinPlugin\fP, \fBpalmmeteo_stdplugins\&.icon\&.IconPlugin\fP, \fBpalmmeteo_stdplugins\&.synthetic\&.SyntheticPlugin\fP, \fBpalmmeteo_stdplugins\&.winddamp\&.WindDampPlugin\fP, \fBpalmmeteo_stdplugins\&.wrf\&.WRFPlugin\fP, and \fBpalmmeteo_stdplugins\&.wrf\&.WRFRadPlugin\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for PALM-meteo from the source code\&.
