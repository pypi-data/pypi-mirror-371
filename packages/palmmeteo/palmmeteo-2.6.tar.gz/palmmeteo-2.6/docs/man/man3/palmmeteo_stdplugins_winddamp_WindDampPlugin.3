.TH "palmmeteo_stdplugins.winddamp.WindDampPlugin" 3 "Fri Aug 22 2025" "PALM-meteo" \" -*- nroff -*-
.ad l
.nh
.SH NAME
palmmeteo_stdplugins.winddamp.WindDampPlugin
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBpalmmeteo\&.plugins\&.WritePluginMixin\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "def \fB__init__\fP (self)"
.br
.ti -1c
.RI "def \fBcheck_config\fP (self, *args, **kwargs)"
.br
.ti -1c
.RI "def \fBwrite_data\fP (self, fout, *args, **kwargs)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBstagger\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.PP
.nf
A plugin which provides damping of wind near vertical walls in the initial
conditions\&. This helps to avoid instabilities in the pressure solver in the
first timestep\&.

.fi
.PP
 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "def palmmeteo_stdplugins\&.winddamp\&.WindDampPlugin\&.__init__ ( self)"

.SH "Member Function Documentation"
.PP 
.SS "def palmmeteo_stdplugins\&.winddamp\&.WindDampPlugin\&.check_config ( self, * args, ** kwargs)"

.PP
.nf
(Load and) validate plugin-related configuration\&.

Any plugin can optinally implement the check_config method for
validating configuration\&. It is not required, so the method is not
abstract\&.

.fi
.PP
 
.PP
Reimplemented from \fBpalmmeteo\&.plugins\&.Plugin\fP\&.
.SS "def palmmeteo_stdplugins\&.winddamp\&.WindDampPlugin\&.write_data ( self,  fout, * args, ** kwargs)"

.PP
.nf
Decrease the written initial condition wind using a calculated factor\&.
Exactly num_zeroed cells outside the wall will have a factor of 0, then
linearly inceasing and all cells beyond damping_dist will have a factor
of 1\&.

.fi
.PP
 
.PP
Reimplemented from \fBpalmmeteo\&.plugins\&.WritePluginMixin\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "palmmeteo_stdplugins\&.winddamp\&.WindDampPlugin\&.stagger"


.SH "Author"
.PP 
Generated automatically by Doxygen for PALM-meteo from the source code\&.
