import{_ as y,O as T,p as q,g as m,P as G,b as K,L as O,m as b,o as v,a as n,w as i,f as _,F as w,G as j,c as $,l as k,t as A,h as M,e as I}from"./index-I1VDlN4g.js";import{d as E}from"./domains-Bgn4ixHL.js";import{V as F,a as Y}from"./VTextField-BdyvgvkG.js";import{V as z}from"./VAutocomplete-C4IpXyl8.js";import{V as C,r as S}from"./VForm-DAkW4nfy.js";import{V as N,d as x}from"./VAvatar-Lpb-Dion.js";import{V as H}from"./VSpacer-C7xukQmu.js";import{V as J}from"./VChip-B4iSpj8_.js";import{V as Q}from"./VSwitch-Cs1NQrmk.js";const g="email-providers",h={getProviders(a){return y.get(`/${g}/`,{params:a})},getProvider(a){return y.get(`/${g}/${a}/`)},createProvider(a){return y.post(`/${g}/`,a)},updateProvider(a,l){return y.put(`/${g}/${a}/`,l)},patchProvider(a,l){return y.patch(`/${g}/${a}/`,l)},deleteProvider(a){return y.delete(`/${g}/${a}/`)},checkProvider(a){return y.post(`/${g}/check_connection/`,a)},checkAssociatedDomain(a){return y.post(`/${g}/check_associated_domain/`,a)}},de=T("providers",()=>{const a=q(),l=m(!1),d=m({}),{$gettext:o}=G;async function p(){l.value=!1,d.value={}}async function f(){return d.value={},l.value=!1,h.getProviders().then(t=>{for(const e of t.data)d.value[e.id]=e;return t}).finally(()=>l.value=!0)}async function r(t){return l.value=!1,h.createProvider(t).then(e=>(d.value[e.data.id]=e.data,e)).finally(()=>l.value=!0)}async function P(t){return l.value=!1,h.deleteProvider({id:t}).then(e=>(delete d.value[t],a.displayNotification({msg:o("Provider deleted")}),e)).finally(()=>l.value=!0)}return{providersLoaded:l,providers:d,getProviders:f,createProvider:r,deleteProvider:P,$reset:p}}),ie={__name:"ProviderAssociatedForm",props:{modelValue:{type:Array,default:null}},emits:["update:modelValue"],setup(a,{expose:l,emit:d}){const{$gettext:o}=K(),p=a,f=d,r=m([]),P=m(),t=m(),e=m({name:"",new_domain:""}),u=m([]);O(()=>p.modelValue,s=>{s&&(r.value=[...s])},{immediate:!0});async function D(){await P.value.validate()&&h.checkAssociatedDomain(e.value).then(c=>{c.status===200&&(r.value.push({name:e.value.name,new_domain:e.value.new_domain}),f("update:modelValue",r.value),e.value={name:"",new_domain:""})})}function R(s){r.value.splice(s,1),f("update:modelValue",r.value)}function L(s){const c=s.keyCode;(c===13||c===9)&&(D(),s.preventDefault())}E.getDomains().then(s=>{u.value=s.data});function U(){return r.value.length===0?o("You need to bind at least one domain to the provider."):!0}return l({vFormRef:t}),(s,c)=>(v(),b(w,null,[n(C,{ref_key:"formRef",ref:P},{default:i(()=>[n(F,{ref:"initialdomainField",modelValue:e.value.name,"onUpdate:modelValue":c[0]||(c[0]=V=>e.value.name=V),placeholder:_(o)("Name of the domain to migrate"),variant:"outlined",density:"compact",onKeydown:L},null,8,["modelValue","placeholder"]),n(z,{modelValue:e.value.new_domain,"onUpdate:modelValue":c[1]||(c[1]=V=>e.value.new_domain=V),label:_(o)("Local domain (optional)"),items:u.value,"item-title":"name","return-object":"",variant:"outlined",density:"compact",clearable:"",onKeydown:L},null,8,["modelValue","label","items"])]),_:1},512),n(N,{icon:"mdi-plus",color:"primary",onClick:D}),n(H),(v(!0),b(w,null,j(r.value,(V,B)=>(v(),$(J,{key:B,class:"mr-2 mt-2",closable:"","onClick:close":Z=>R(B)},{default:i(()=>[V.new_domain?(v(),b(w,{key:0},[k(A(V.name)+" --> "+A(V.new_domain.name),1)],64)):(v(),b(w,{key:1},[k(A(V.name),1)],64))]),_:2},1032,["onClick:close"]))),128)),n(C,{ref_key:"vFormRef",ref:t},{default:i(()=>[n(Y,{rules:[U]},null,8,["rules"])]),_:1},512)],64))}},W={class:"my-7"},X={class:"custom-loader"},me={__name:"ProviderGeneralForm",props:{modelValue:{type:Object,default:null}},setup(a,{expose:l}){const d=a,o=M(()=>d.modelValue),p=m(0),f=m(!1),r=m();async function P(){if(!await r.value.validate())return;f.value=!0;const e={address:o.value.address,port:o.value.port,secured:o.value.secured};h.checkProvider(e).then(()=>{p.value=1}).catch(u=>{console.log(u),p.value=2}).finally(()=>f.value=!1)}return l({vFormRef:r}),(t,e)=>(v(),$(C,{ref_key:"vFormRef",ref:r},{default:i(()=>[n(F,{modelValue:o.value.name,"onUpdate:modelValue":e[0]||(e[0]=u=>o.value.name=u),label:t.$gettext("Provider name"),variant:"outlined",rules:[_(S).required]},null,8,["modelValue","label","rules"]),n(F,{modelValue:o.value.address,"onUpdate:modelValue":e[1]||(e[1]=u=>o.value.address=u),label:t.$gettext("Address (hostname or IP)"),rules:[_(S).required],variant:"outlined"},null,8,["modelValue","label","rules"]),n(F,{modelValue:o.value.port,"onUpdate:modelValue":e[2]||(e[2]=u=>o.value.port=u),label:t.$gettext("IMAP Port"),type:"number",variant:"outlined",rules:[_(S).required,_(S).portNumber]},null,8,["modelValue","label","rules"]),n(Q,{modelValue:o.value.secured,"onUpdate:modelValue":e[3]||(e[3]=u=>o.value.secured=u),label:t.$gettext("Secured"),color:"primary",hint:t.$gettext("Is the IMAP connection secured using SSL/TLS or StartTLS"),"persistent-hint":""},null,8,["modelValue","label","hint"]),I("div",W,[n(N,{loading:f.value,color:"primary",onClick:P},{loader:i(()=>[I("span",X,[n(x,{light:""},{default:i(()=>e[7]||(e[7]=[k("mdi-cached")])),_:1,__:[7]})])]),default:i(()=>[k(A(t.$gettext("Check connection:"))+" ",1),p.value===0?(v(),$(x,{key:0,color:"blue-grey-darken-2"},{default:i(()=>e[4]||(e[4]=[k(" mdi-help-circle-outline ")])),_:1,__:[4]})):p.value===1?(v(),$(x,{key:1,color:"success"},{default:i(()=>e[5]||(e[5]=[k(" mdi-check-all ")])),_:1,__:[5]})):(v(),$(x,{key:2,color:"warning"},{default:i(()=>e[6]||(e[6]=[k(" mdi-alert-circle-outline ")])),_:1,__:[6]}))]),_:1},8,["loading"])])]),_:1},512))}};export{ie as _,me as a,h as p,de as u};
