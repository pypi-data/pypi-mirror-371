Metadata-Version: 2.4
Name: anansi-compute
Version: 0.1.0
Summary: Secure multi-cloud compute orchestration with TEE and GPU CC support
Author-email: Rewsr <hello@rewsr.com>
License: MIT
Project-URL: Homepage, https://rewsr.com
Project-URL: Documentation, https://docs.rewsr.com
Project-URL: Repository, https://github.com/rewsr/anansi-compute
Project-URL: Issues, https://github.com/rewsr/anansi-compute/issues
Keywords: confidential-computing,tee,gpu,multi-cloud,secure-compute
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Topic :: Security :: Cryptography
Classifier: Topic :: System :: Distributed Computing
Requires-Python: >=3.7
Description-Content-Type: text/markdown
Requires-Dist: requests>=2.25.0
Requires-Dist: typing-extensions>=3.7.4
Provides-Extra: dev
Requires-Dist: pytest>=6.0; extra == "dev"
Requires-Dist: black; extra == "dev"
Requires-Dist: flake8; extra == "dev"

# Anansi Compute

Secure multi-cloud compute orchestration with CPU TEE and GPU Confidential Computing support.

## Quick Start (30 seconds)

```python
# 1) Install
%pip install anansi-compute==0.1.0

# 2) Configure
import anansi
anansi.configure(
    endpoint="https://api.rewsr.com",
    api_key="your_api_key_here"
)

# 3) Run secure computation
result = anansi.compute(
    fn="vec_add",
    args=([1, 2, 3], [10, 20, 30]),
    policy={"min_trust": "GPU_CC", "allowed_clouds": ["azure", "gcp"]}
)
print(result["result"])  # [11, 22, 33]
```

## Features

- **CPU TEE Support**: AMD SEV-SNP, Intel TDX protection
- **GPU Confidential Computing**: NVIDIA H100 with attestation
- **Multi-cloud**: Auto-route across AWS, Azure, GCP based on policy
- **Cost Control**: Built-in budget limits and optimization
- **Verifiable**: Cryptographic attestation and audit trails

## Supported Platforms

- **Databricks**: Drop-in replacement for compute workloads
- **Snowflake**: External functions for SQL integration
- **Jupyter/Python**: Direct API access
- **REST**: Universal HTTP interface

## Documentation

- [Getting Started Guide](https://docs.rewsr.com/getting-started)
- [API Reference](https://docs.rewsr.com/api)
- [Examples](https://github.com/rewsr/anansi-compute/tree/main/examples)

## License

MIT License - see [LICENSE](LICENSE) file.
