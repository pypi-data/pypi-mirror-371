# coding: utf-8

"""
CxO Bot Automation API

 CxO Bot Automation API manages the CxO automation platform.  ## Workflows  A CxO Workflow defines the overall flow of AI automated tasks.  Conceptually, a Workflow is a sequence of steps. Those steps are defined by advanced AI units, known as Agents, and are carried out by performing detailed actions, resulting in a execution run.  ## Schedules  CxO Schedules are features allowing you to execute specific CxO Workflows at specified times or intervals.

The version of the OpenAPI document: 0.1.0
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501


import unittest

from adomo.models.workflow_input import WorkflowInput


class TestWorkflowInput(unittest.TestCase):
    """WorkflowInput unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WorkflowInput:
        """Test WorkflowInput
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `WorkflowInput`
        """
        model = WorkflowInput()
        if include_optional:
            return WorkflowInput(
                id = '',
                name = '',
                state = 'created',
                version = 56,
                description = '',
                dsl = adomo.models.dsl.Dsl(
                    root = null, 
                    schemata = adomo.models.schema.Schema(
                        fields = {
                            'key' : adomo.models.field.Field(
                                description = '', 
                                type = 'TEXT', 
                                required = True, 
                                nullable = True, 
                                default = null, )
                            }, ), 
                    result = null, 
                    signals = {
                        'key' : adomo.models.signal.Signal(
                            fn = '', 
                            description = '', 
                            arguments = [
                                ''
                                ], 
                            result = null, )
                        }, 
                    updates = {
                        'key' : adomo.models.update.Update(
                            description = '', 
                            root = null, )
                        }, )
            )
        else:
            return WorkflowInput(
                name = '',
        )
        """

    def testWorkflowInput(self):
        """Test WorkflowInput"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
