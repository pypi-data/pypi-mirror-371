{
  "permissions": {
    "allow": [
      "Bash(grep:*)",
      "Bash(python test:*)",
      "Bash(python3:*)",
      "Bash(mv:*)",
      "Bash(source:*)",
      "Bash(pip install:*)",
      "Bash(tunacode:*)",
      "Bash(make lint)",
      "Bash(flake8)",
      "Bash(flake8:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(cat:*)",
      "Bash(gh label create:*)",
      "Bash(find:*)",
      "Bash(rg:*)",
      "Bash(gh issue create:*)",
      "Bash(python -m pytest tests/test_escape_mechanism.py -v)",
      "Bash(python -m pytest tests/test_escape_mechanism.py::test_state_manager_has_interrupt_flag -v)",
      "Bash(true)",
      "Bash(ls:*)",
      "Bash(python:*)",
      "Bash(gh api:*)",
      "Bash(bash:*)",
      "Bash(git reset:*)",
      "Bash(./scripts/publish_to_pip.sh:*)",
      "Bash(gh pr view:*)",
      "Bash(gh pr checkout:*)",
      "Bash(pytest:*)",
      "Bash(rm:*)",
      "Bash(make test:*)",
      "Bash(mkdir:*)",
      "Bash(./.test_venv/bin/pip install:*)",
      "Bash(time:*)",
      "Bash(git checkout:*)",
      "Bash(git for-each-ref:*)",
      "Bash(git pull:*)",
      "Bash(git rebase:*)",
      "Bash(venv/bin/pytest tests/test_agent_initialization.py -v)",
      "Bash(venv/bin/pip install -e \".[dev]\")",
      "Bash(venv/bin/flake8:*)",
      "Bash(sed:*)",
      "Bash(git tag:*)",
      "Bash(git push:*)",
      "Bash(venv/bin/python:*)",
      "Bash(git fetch:*)",
      "Bash(git stash:*)",
      "WebFetch(domain:github.com)",
      "Bash(gh issue view:*)",
      "Bash(PYTHONPATH=/home/tuna/tunacode/src python3 test_request_analyzer.py)",
      "Bash(chmod:*)",
      "Bash(./test_architect_simple.sh:*)",
      "Bash(kill:*)",
      "Bash(awk:*)",
      "Bash(./agent-tools/wakeup.sh:*)",
      "Bash(./agent-tools/scratchpad.sh:*)",
      "Bash(./agent-tools/check_workflow.sh:*)",
      "Bash(black:*)",
      "Bash(isort:*)",
      "WebFetch(domain:api.pepy.tech)",
      "WebFetch(domain:pypi.org)",
      "Bash(./llm-tooling/wakeup.sh:*)",
      "Bash(tree:*)",
      "Bash(./context.sh)",
      "Bash(./context.sh:*)",
      "Bash(./scratchpad-multi.sh:*)",
      "Bash(gh issue comment:*)",
      "Bash(gh pr list:*)",
      "Bash(gh auth:*)",
      "Bash(pre-commit:*)",
      "Bash(ruff format:*)",
      "Bash(ruff check:*)",
      "mcp__task-master__get_task",
      "Bash(./scratchpad.sh:*)",
      "mcp__task-master__get_tasks",
      "mcp__task-master__set_task_status",
      "mcp__task-master__update_task",
      "Bash(git remote set-url:*)",
      "mcp__task-master__next_task",
      "Bash(gh issue list:*)",
      "Bash(gh issue close:*)",
      "mcp__task-master__add_task",
      "mcp__task-master__expand_task",
      "mcp__task-master__update_subtask",
      "Bash(./llm-agent-tools/scratchpad-multi.sh:*)",
      "Bash(test:*)",
      "Bash(gh pr create:*)",
      "Bash(gh pr merge:*)",
      "WebFetch(domain:docs.anthropic.com)",
      "Bash(gh:*)",
      "Bash(radon cc:*)",
      "Bash(pip uninstall:*)",
      "Bash(git log:*)",
      "Bash(venv/bin/pytest -q tests/characterization tests/test_security.py tests/test_agent_output_formatting.py tests/test_prompt_changes_validation.py)",
      "Bash(hatch run test:*)",
      "Bash(git merge:*)",
      "Bash(git branch:*)",
      "Bash(hatch run lint:*)",
      "Bash(venv/bin/ruff check:*)",
      "Bash(git worktree:*)",
      "Bash(hatch env:*)",
      "Bash(venv/bin/hatch run test)",
      "Bash(uv sync:*)",
      "Bash(uv tool install:*)",
      "Bash(uv tool:*)",
      "Bash(command -v:*)",
      "Bash(/dev/null)",
      "Bash(shellcheck:*)",
      "Bash(hatch run python:*)",
      "Bash(hatch run tunacode:*)",
      "Read(//home/tuna/.claude/**)",
      "Read(//home/tuna/.claude/**)",
      "Read(//home/tuna/.config/**)"
    ],
    "deny": [],
    "defaultMode": "acceptEdits"
  },
  "enableAllProjectMcpServers": false
}