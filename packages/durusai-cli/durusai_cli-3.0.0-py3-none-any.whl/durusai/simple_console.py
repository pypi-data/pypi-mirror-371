"""
–ü—Ä–æ—Å—Ç–∞—è –∑–∞–º–µ–Ω–∞ Rich Console –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ —Ç–µ—Ä–º–∏–Ω–∞–ª—å–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞
"""

class Colors:
    """ANSI —Ü–≤–µ—Ç–æ–≤—ã–µ –∫–æ–¥—ã –¥–ª—è —Ç–µ—Ä–º–∏–Ω–∞–ª–∞"""
    RESET = '\033[0m'
    BOLD = '\033[1m'
    DIM = '\033[2m'
    
    # –¶–≤–µ—Ç–∞ —Ç–µ–∫—Å—Ç–∞
    RED = '\033[31m'
    GREEN = '\033[32m'
    YELLOW = '\033[33m'
    BLUE = '\033[34m'
    MAGENTA = '\033[35m'
    CYAN = '\033[36m'
    WHITE = '\033[37m'
    
    # –¶–≤–µ—Ç–∞ —Ñ–æ–Ω–∞
    BG_RED = '\033[41m'
    BG_GREEN = '\033[42m'
    BG_YELLOW = '\033[43m'
    BG_BLUE = '\033[44m'


def colored_print(text: str, color: str = "", style: str = ""):
    """–ü—Ä–æ—Å—Ç–æ–π —Ü–≤–µ—Ç–Ω–æ–π –≤—ã–≤–æ–¥"""
    ansi_color = ""
    
    if color == "red":
        ansi_color = Colors.RED
    elif color == "green":
        ansi_color = Colors.GREEN
    elif color == "yellow":
        ansi_color = Colors.YELLOW
    elif color == "blue":
        ansi_color = Colors.BLUE
    elif color == "cyan":
        ansi_color = Colors.CYAN
    
    if style == "bold":
        ansi_color += Colors.BOLD
    elif style == "dim":
        ansi_color += Colors.DIM
    
    if ansi_color:
        print(f"{ansi_color}{text}{Colors.RESET}")
    else:
        print(text)


def show_welcome():
    """–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
    print("üöÄ –ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞...")
    print("üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏ –∏–ª–∏ /quit –¥–ª—è –≤—ã—Ö–æ–¥–∞")
    print()
    print("ü§ñ DurusAI")
    print("–ú–æ–¥–µ–ª—å: durusai | –ö–æ–º–∞–Ω–¥—ã: /help, /model, /quit")
    print()


def show_help():
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É"""
    print("\nüìö –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:")
    print()
    
    commands = [
        ("/help", "–ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"),
        ("/quit, /exit", "–í—ã–π—Ç–∏ –∏–∑ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞"),
        ("/clear", "–û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é —Ä–∞–∑–≥–æ–≤–æ—Ä–∞"),
        ("/history", "–ü–æ–∫–∞–∑–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é —Ä–∞–∑–≥–æ–≤–æ—Ä–∞"),
        ("/stats", "–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å–µ—Å—Å–∏–∏"),
        ("/copy", "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –æ—Ç–≤–µ—Ç –≤ —Ñ–∞–π–ª"),
        ("ls", "–ü–æ–∫–∞–∑–∞—Ç—å —Ñ–∞–π–ª—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏"),
        ("cd path", "–ü–µ—Ä–µ–π—Ç–∏ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é"),
        ("pwd", "–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é"),
        ("rm file", "–£–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª"),
        ("mkdir dir", "–°–æ–∑–¥–∞—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é"),
        ("tree", "–ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ä–µ–≤–æ —Ñ–∞–π–ª–æ–≤"),
    ]
    
    for cmd, desc in commands:
        print(f"   {Colors.CYAN}{cmd:<15}{Colors.RESET} {desc}")
    print()


def show_session_stats(queries: int, tokens: int):
    """–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ—Å—Å–∏–∏"""
    print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ—Å—Å–∏–∏:")
    print(f"   –ó–∞–ø—Ä–æ—Å–æ–≤: {Colors.CYAN}{queries}{Colors.RESET}")
    print(f"   –¢–æ–∫–µ–Ω–æ–≤: {Colors.CYAN}{tokens:,}{Colors.RESET}")


def show_exit_stats(queries: int, tokens: int):
    """–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ"""
    border = "‚îÄ" * 30
    print(f"\n‚ï≠‚îÄ üéØ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å–µ—Å—Å–∏–∏ {border[25:]}‚ïÆ")
    print(f"‚îÇ üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ—Å—Å–∏–∏:        ‚îÇ")
    print(f"‚îÇ    –ó–∞–ø—Ä–æ—Å–æ–≤: {queries:<15} ‚îÇ")
    print(f"‚îÇ    –¢–æ–∫–µ–Ω–æ–≤: {tokens:<16,} ‚îÇ")
    print(f"‚îÇ                              ‚îÇ")
    print(f"‚îÇ üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!              ‚îÇ")
    print(f"‚ï∞{'‚îÄ' * 32}‚ïØ")


def simple_input(prompt: str = "durusai> ") -> str:
    """–ü—Ä–æ—Å—Ç–æ–π –≤–≤–æ–¥ —Å readline –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π"""
    try:
        import readline  # –î–ª—è –∏—Å—Ç–æ—Ä–∏–∏ –∫–æ–º–∞–Ω–¥
    except ImportError:
        pass
    
    try:
        return input(prompt)
    except (EOFError, KeyboardInterrupt):
        return "/quit"