# coding: utf-8

"""
    BriefcaseBrain API

    Official API for BriefcaseBrain Legal AI Platform

    The version of the OpenAPI document: 1.0.0
    Contact: support@briefcasebrain.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from briefcasebrain_sdk.models.api_queries_get200_response import ApiQueriesGet200Response

class TestApiQueriesGet200Response(unittest.TestCase):
    """ApiQueriesGet200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiQueriesGet200Response:
        """Test ApiQueriesGet200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiQueriesGet200Response`
        """
        model = ApiQueriesGet200Response()
        if include_optional:
            return ApiQueriesGet200Response(
                success = True,
                queries = [
                    briefcasebrain_sdk.models._api_queries_get_200_response_queries_inner._api_queries_get_200_response_queries_inner(
                        id = '', 
                        title = '', 
                        description = '', 
                        original_query = '', 
                        enhanced_query = '', 
                        practice_area = '', 
                        tags = [
                            ''
                            ], 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                pagination = briefcasebrain_sdk.models._api_queries_get_200_response_pagination._api_queries_get_200_response_pagination(
                    total = 56, 
                    limit = 56, 
                    offset = 56, 
                    has_more = True, )
            )
        else:
            return ApiQueriesGet200Response(
        )
        """

    def testApiQueriesGet200Response(self):
        """Test ApiQueriesGet200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
