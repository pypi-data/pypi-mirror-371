[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "lightcurves"
dynamic = ["version"]
description = "A package to analyze any kind of light curve/time series, e.g. with Bayesian Blocks, flare fitting (HOP), and a stochastic processe"
readme = "README.md"
authors = [
  { name = "Sarah Wagner", email = "sarahwagner1602@gmail.com" },
]
maintainers = [
  { name = "Sarah Wagner", email = "sarahwagner1602@gmail.com" },
]
license = { text = "MIT" }
classifiers = [
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Topic :: Scientific/Engineering :: Astronomy",
  "Topic :: Scientific/Engineering :: Physics",
  "Development Status :: 4 - Beta",
]

requires-python = ">=3.10"

#list of dependencies.
#do not list imports from standard library like logging or pickle
dependencies = [
  "astropy",
  "numpy",
  "pandas",
  "scipy",
  "tqdm",
  "matplotlib",
  "lmfit"
]

[project.optional-dependencies]
test = [
  "pytest"]

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "src/lightcurves/_version.py"

[tool.hatch.build.targets.wheel]
includes = ["src/lightcurves"]

[tool.ruff.lint]
extend-select = [
  "ARG",      # flake8-unused-arguments
  "B",        # flake8-bugbear
  "C4",       # flake8-comprehensions
  "EM",       # flake8-errmsg
  "EXE",      # flake8-executable
  "FURB",     # refurb
  "G",        # flake8-logging-format
  "I",        # isort
  "ICN",      # flake8-import-conventions
  "NPY",      # NumPy specific rules
  "PD",       # pandas-vet
  "PGH",      # pygrep-hooks
  "PIE",      # flake8-pie
  "PL",       # pylint
  "PT",       # flake8-pytest-style
  "PTH",      # flake8-use-pathlib
  "PYI",      # flake8-pyi
  "RET",      # flake8-return
  "RUF",      # Ruff-specific
  "SIM",      # flake8-simplify
  "T20",      # flake8-print
  "UP",       # pyupgrade
  "YTT",      # flake8-2020
]
extend-ignore = ["T201"]  #make ruff ignore that there are print statements (bc notebooks use them)
ignore = [
  "PLR09",    # Too many <...>
  "PLR2004",  # Magic value used in comparison
]
typing-modules = ["mypackage._compat.typing"]
isort.required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["T20"]
