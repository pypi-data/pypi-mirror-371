name: Tests

on:
  push:
    branches: [ "main" ]
    paths-ignore:
    - "docs/"
    - "mkdocs.yml"
    - "README.md"
    - "LICENSE"
  pull_request:
    branches: [ "main" ]
    paths-ignore:
    - "docs/"
    - "mkdocs.yml"
    - "README.md"
    - "LICENSE"

jobs:
  test:
    name: "Test & Coverage"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.13"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      id: setup-python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: "pip"
    # Set up caching of hatch's virtual environment
    - name: Set up hatch environment cache
      if: runner.os == 'Linux'
      uses: "actions/cache@v4"
      with:
        path: .venv/
        key: "hatch-env-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('pyproject.toml') }}"
        restore-keys: "hatch-env-${{ steps.setup-python.outputs.python-version }}-"
    # Install hatch and set the venv-location
    - name: Install hatch
      run: pipx install hatch; hatch config set dirs.env.virtual ".venv"
    - name: Lint
      run: hatch run lint:all
    - name: Tests
      run: hatch run +py=${{ matrix.python-version }} all:test
