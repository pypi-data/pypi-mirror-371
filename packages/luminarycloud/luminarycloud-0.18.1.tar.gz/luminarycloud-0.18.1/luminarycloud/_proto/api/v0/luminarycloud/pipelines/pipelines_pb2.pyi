"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _PipelineJobStatus:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _PipelineJobStatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_PipelineJobStatus.ValueType], builtins.type):  # noqa: F821
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    PIPELINE_JOB_STATUS_UNSPECIFIED: _PipelineJobStatus.ValueType  # 0
    PIPELINE_JOB_STATUS_PENDING: _PipelineJobStatus.ValueType  # 1
    PIPELINE_JOB_STATUS_RUNNING: _PipelineJobStatus.ValueType  # 2
    PIPELINE_JOB_STATUS_COMPLETED: _PipelineJobStatus.ValueType  # 3
    PIPELINE_JOB_STATUS_FAILED: _PipelineJobStatus.ValueType  # 4

class PipelineJobStatus(_PipelineJobStatus, metaclass=_PipelineJobStatusEnumTypeWrapper):
    """NOTE: changes here must be reflected in the `status_map` in `python/pipelines/src/routers/pipeline_jobs_from_proto.py`"""

PIPELINE_JOB_STATUS_UNSPECIFIED: PipelineJobStatus.ValueType  # 0
PIPELINE_JOB_STATUS_PENDING: PipelineJobStatus.ValueType  # 1
PIPELINE_JOB_STATUS_RUNNING: PipelineJobStatus.ValueType  # 2
PIPELINE_JOB_STATUS_COMPLETED: PipelineJobStatus.ValueType  # 3
PIPELINE_JOB_STATUS_FAILED: PipelineJobStatus.ValueType  # 4
global___PipelineJobStatus = PipelineJobStatus

class Pipeline(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    DEFINITION_YAML_FIELD_NUMBER: builtins.int
    CREATED_AT_FIELD_NUMBER: builtins.int
    UPDATED_AT_FIELD_NUMBER: builtins.int
    id: builtins.str
    name: builtins.str
    description: builtins.str
    definition_yaml: builtins.str
    @property
    def created_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def updated_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        name: builtins.str = ...,
        description: builtins.str = ...,
        definition_yaml: builtins.str = ...,
        created_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        updated_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["created_at", b"created_at", "updated_at", b"updated_at"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["created_at", b"created_at", "definition_yaml", b"definition_yaml", "description", b"description", "id", b"id", "name", b"name", "updated_at", b"updated_at"]) -> None: ...

global___Pipeline = Pipeline

class PipelineJob(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    PIPELINE_ID_FIELD_NUMBER: builtins.int
    PROJECT_ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    CREATED_AT_FIELD_NUMBER: builtins.int
    UPDATED_AT_FIELD_NUMBER: builtins.int
    STARTED_AT_FIELD_NUMBER: builtins.int
    COMPLETED_AT_FIELD_NUMBER: builtins.int
    id: builtins.str
    pipeline_id: builtins.str
    project_id: builtins.str
    name: builtins.str
    description: builtins.str
    status: global___PipelineJobStatus.ValueType
    @property
    def created_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def updated_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def started_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def completed_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        pipeline_id: builtins.str = ...,
        project_id: builtins.str = ...,
        name: builtins.str = ...,
        description: builtins.str | None = ...,
        status: global___PipelineJobStatus.ValueType = ...,
        created_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        updated_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        started_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        completed_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_completed_at", b"_completed_at", "_description", b"_description", "_started_at", b"_started_at", "completed_at", b"completed_at", "created_at", b"created_at", "description", b"description", "started_at", b"started_at", "updated_at", b"updated_at"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_completed_at", b"_completed_at", "_description", b"_description", "_started_at", b"_started_at", "completed_at", b"completed_at", "created_at", b"created_at", "description", b"description", "id", b"id", "name", b"name", "pipeline_id", b"pipeline_id", "project_id", b"project_id", "started_at", b"started_at", "status", b"status", "updated_at", b"updated_at"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_completed_at", b"_completed_at"]) -> typing_extensions.Literal["completed_at"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description", b"_description"]) -> typing_extensions.Literal["description"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_started_at", b"_started_at"]) -> typing_extensions.Literal["started_at"] | None: ...

global___PipelineJob = PipelineJob

class CreatePipelineRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    DEFINITION_YAML_FIELD_NUMBER: builtins.int
    name: builtins.str
    """Required. The name of the pipeline."""
    description: builtins.str
    """Optional. The description of the pipeline."""
    definition_yaml: builtins.str
    """Required. The definition of the pipeline, formatted as a YAML string."""
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        description: builtins.str | None = ...,
        definition_yaml: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_description", b"_description", "description", b"description"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_description", b"_description", "definition_yaml", b"definition_yaml", "description", b"description", "name", b"name"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description", b"_description"]) -> typing_extensions.Literal["description"] | None: ...

global___CreatePipelineRequest = CreatePipelineRequest

class CreatePipelineResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PIPELINE_FIELD_NUMBER: builtins.int
    @property
    def pipeline(self) -> global___Pipeline:
        """The newly created pipeline."""
    def __init__(
        self,
        *,
        pipeline: global___Pipeline | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["pipeline", b"pipeline"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["pipeline", b"pipeline"]) -> None: ...

global___CreatePipelineResponse = CreatePipelineResponse

class GetPipelineRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    id: builtins.str
    def __init__(
        self,
        *,
        id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["id", b"id"]) -> None: ...

global___GetPipelineRequest = GetPipelineRequest

class GetPipelineResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PIPELINE_FIELD_NUMBER: builtins.int
    @property
    def pipeline(self) -> global___Pipeline: ...
    def __init__(
        self,
        *,
        pipeline: global___Pipeline | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["pipeline", b"pipeline"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["pipeline", b"pipeline"]) -> None: ...

global___GetPipelineResponse = GetPipelineResponse

class ListPipelinesRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___ListPipelinesRequest = ListPipelinesRequest

class ListPipelinesResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PIPELINES_FIELD_NUMBER: builtins.int
    @property
    def pipelines(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Pipeline]: ...
    def __init__(
        self,
        *,
        pipelines: collections.abc.Iterable[global___Pipeline] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["pipelines", b"pipelines"]) -> None: ...

global___ListPipelinesResponse = ListPipelinesResponse

class PipelineJobArgsColumn(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class StringColumn(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        NAME_FIELD_NUMBER: builtins.int
        VALUES_FIELD_NUMBER: builtins.int
        name: builtins.str
        @property
        def values(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
        def __init__(
            self,
            *,
            name: builtins.str = ...,
            values: collections.abc.Iterable[builtins.str] | None = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["name", b"name", "values", b"values"]) -> None: ...

    class IntColumn(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        NAME_FIELD_NUMBER: builtins.int
        VALUES_FIELD_NUMBER: builtins.int
        name: builtins.str
        @property
        def values(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
        def __init__(
            self,
            *,
            name: builtins.str = ...,
            values: collections.abc.Iterable[builtins.int] | None = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["name", b"name", "values", b"values"]) -> None: ...

    class DoubleColumn(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        NAME_FIELD_NUMBER: builtins.int
        VALUES_FIELD_NUMBER: builtins.int
        name: builtins.str
        @property
        def values(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]: ...
        def __init__(
            self,
            *,
            name: builtins.str = ...,
            values: collections.abc.Iterable[builtins.float] | None = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["name", b"name", "values", b"values"]) -> None: ...

    class BoolColumn(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        NAME_FIELD_NUMBER: builtins.int
        VALUES_FIELD_NUMBER: builtins.int
        name: builtins.str
        @property
        def values(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.bool]: ...
        def __init__(
            self,
            *,
            name: builtins.str = ...,
            values: collections.abc.Iterable[builtins.bool] | None = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["name", b"name", "values", b"values"]) -> None: ...

    STRING_COLUMN_FIELD_NUMBER: builtins.int
    INT_COLUMN_FIELD_NUMBER: builtins.int
    DOUBLE_COLUMN_FIELD_NUMBER: builtins.int
    BOOL_COLUMN_FIELD_NUMBER: builtins.int
    @property
    def string_column(self) -> global___PipelineJobArgsColumn.StringColumn: ...
    @property
    def int_column(self) -> global___PipelineJobArgsColumn.IntColumn: ...
    @property
    def double_column(self) -> global___PipelineJobArgsColumn.DoubleColumn: ...
    @property
    def bool_column(self) -> global___PipelineJobArgsColumn.BoolColumn: ...
    def __init__(
        self,
        *,
        string_column: global___PipelineJobArgsColumn.StringColumn | None = ...,
        int_column: global___PipelineJobArgsColumn.IntColumn | None = ...,
        double_column: global___PipelineJobArgsColumn.DoubleColumn | None = ...,
        bool_column: global___PipelineJobArgsColumn.BoolColumn | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["bool_column", b"bool_column", "column", b"column", "double_column", b"double_column", "int_column", b"int_column", "string_column", b"string_column"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["bool_column", b"bool_column", "column", b"column", "double_column", b"double_column", "int_column", b"int_column", "string_column", b"string_column"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["column", b"column"]) -> typing_extensions.Literal["string_column", "int_column", "double_column", "bool_column"] | None: ...

global___PipelineJobArgsColumn = PipelineJobArgsColumn

class CreatePipelineJobRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PIPELINE_ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    ARGS_COLUMNS_FIELD_NUMBER: builtins.int
    PROJECT_ID_FIELD_NUMBER: builtins.int
    pipeline_id: builtins.str
    name: builtins.str
    description: builtins.str
    @property
    def args_columns(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PipelineJobArgsColumn]:
        """The PipelineJobArgs formatted in columns."""
    project_id: builtins.str
    """PipelineJobs are scoped to a project.  Maybe some day we can lift this restriction, but for
    now, all permissions are scoped to a project (as are all the resources a pipeline might
    reference like sim templates, named variable sets, etc.), so it simplifies things to constrain
    a pipeline job to a single project.
    """
    def __init__(
        self,
        *,
        pipeline_id: builtins.str = ...,
        name: builtins.str = ...,
        description: builtins.str | None = ...,
        args_columns: collections.abc.Iterable[global___PipelineJobArgsColumn] | None = ...,
        project_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_description", b"_description", "description", b"description"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_description", b"_description", "args_columns", b"args_columns", "description", b"description", "name", b"name", "pipeline_id", b"pipeline_id", "project_id", b"project_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description", b"_description"]) -> typing_extensions.Literal["description"] | None: ...

global___CreatePipelineJobRequest = CreatePipelineJobRequest

class CreatePipelineJobResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PIPELINE_JOB_FIELD_NUMBER: builtins.int
    @property
    def pipeline_job(self) -> global___PipelineJob: ...
    def __init__(
        self,
        *,
        pipeline_job: global___PipelineJob | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["pipeline_job", b"pipeline_job"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["pipeline_job", b"pipeline_job"]) -> None: ...

global___CreatePipelineJobResponse = CreatePipelineJobResponse

class GetPipelineJobRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    id: builtins.str
    def __init__(
        self,
        *,
        id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["id", b"id"]) -> None: ...

global___GetPipelineJobRequest = GetPipelineJobRequest

class GetPipelineJobResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PIPELINE_JOB_FIELD_NUMBER: builtins.int
    @property
    def pipeline_job(self) -> global___PipelineJob: ...
    def __init__(
        self,
        *,
        pipeline_job: global___PipelineJob | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["pipeline_job", b"pipeline_job"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["pipeline_job", b"pipeline_job"]) -> None: ...

global___GetPipelineJobResponse = GetPipelineJobResponse

class ListPipelineJobsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___ListPipelineJobsRequest = ListPipelineJobsRequest

class ListPipelineJobsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PIPELINE_JOBS_FIELD_NUMBER: builtins.int
    @property
    def pipeline_jobs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PipelineJob]: ...
    def __init__(
        self,
        *,
        pipeline_jobs: collections.abc.Iterable[global___PipelineJob] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["pipeline_jobs", b"pipeline_jobs"]) -> None: ...

global___ListPipelineJobsResponse = ListPipelineJobsResponse
