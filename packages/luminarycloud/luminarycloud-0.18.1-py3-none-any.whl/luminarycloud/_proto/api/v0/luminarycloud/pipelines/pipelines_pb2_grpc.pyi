"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import grpc
import luminarycloud._proto.api.v0.luminarycloud.pipelines.pipelines_pb2

class PipelineServiceStub:
    """Manages Pipelines"""

    def __init__(self, channel: grpc.Channel) -> None: ...
    CreatePipeline: grpc.UnaryUnaryMultiCallable[
        luminarycloud._proto.api.v0.luminarycloud.pipelines.pipelines_pb2.CreatePipelineRequest,
        luminarycloud._proto.api.v0.luminarycloud.pipelines.pipelines_pb2.CreatePipelineResponse,
    ]
    """Creates a new pipeline."""
    GetPipeline: grpc.UnaryUnaryMultiCallable[
        luminarycloud._proto.api.v0.luminarycloud.pipelines.pipelines_pb2.GetPipelineRequest,
        luminarycloud._proto.api.v0.luminarycloud.pipelines.pipelines_pb2.GetPipelineResponse,
    ]
    """Retrieves a pipeline."""
    ListPipelines: grpc.UnaryUnaryMultiCallable[
        luminarycloud._proto.api.v0.luminarycloud.pipelines.pipelines_pb2.ListPipelinesRequest,
        luminarycloud._proto.api.v0.luminarycloud.pipelines.pipelines_pb2.ListPipelinesResponse,
    ]
    """Lists all pipelines."""
    CreatePipelineJob: grpc.UnaryUnaryMultiCallable[
        luminarycloud._proto.api.v0.luminarycloud.pipelines.pipelines_pb2.CreatePipelineJobRequest,
        luminarycloud._proto.api.v0.luminarycloud.pipelines.pipelines_pb2.CreatePipelineJobResponse,
    ]
    """Creates a new pipeline job."""
    GetPipelineJob: grpc.UnaryUnaryMultiCallable[
        luminarycloud._proto.api.v0.luminarycloud.pipelines.pipelines_pb2.GetPipelineJobRequest,
        luminarycloud._proto.api.v0.luminarycloud.pipelines.pipelines_pb2.GetPipelineJobResponse,
    ]
    """Retrieves a pipeline job."""
    ListPipelineJobs: grpc.UnaryUnaryMultiCallable[
        luminarycloud._proto.api.v0.luminarycloud.pipelines.pipelines_pb2.ListPipelineJobsRequest,
        luminarycloud._proto.api.v0.luminarycloud.pipelines.pipelines_pb2.ListPipelineJobsResponse,
    ]
    """Lists all pipeline jobs."""

class PipelineServiceServicer(metaclass=abc.ABCMeta):
    """Manages Pipelines"""

    @abc.abstractmethod
    def CreatePipeline(
        self,
        request: luminarycloud._proto.api.v0.luminarycloud.pipelines.pipelines_pb2.CreatePipelineRequest,
        context: grpc.ServicerContext,
    ) -> luminarycloud._proto.api.v0.luminarycloud.pipelines.pipelines_pb2.CreatePipelineResponse:
        """Creates a new pipeline."""
    @abc.abstractmethod
    def GetPipeline(
        self,
        request: luminarycloud._proto.api.v0.luminarycloud.pipelines.pipelines_pb2.GetPipelineRequest,
        context: grpc.ServicerContext,
    ) -> luminarycloud._proto.api.v0.luminarycloud.pipelines.pipelines_pb2.GetPipelineResponse:
        """Retrieves a pipeline."""
    @abc.abstractmethod
    def ListPipelines(
        self,
        request: luminarycloud._proto.api.v0.luminarycloud.pipelines.pipelines_pb2.ListPipelinesRequest,
        context: grpc.ServicerContext,
    ) -> luminarycloud._proto.api.v0.luminarycloud.pipelines.pipelines_pb2.ListPipelinesResponse:
        """Lists all pipelines."""
    @abc.abstractmethod
    def CreatePipelineJob(
        self,
        request: luminarycloud._proto.api.v0.luminarycloud.pipelines.pipelines_pb2.CreatePipelineJobRequest,
        context: grpc.ServicerContext,
    ) -> luminarycloud._proto.api.v0.luminarycloud.pipelines.pipelines_pb2.CreatePipelineJobResponse:
        """Creates a new pipeline job."""
    @abc.abstractmethod
    def GetPipelineJob(
        self,
        request: luminarycloud._proto.api.v0.luminarycloud.pipelines.pipelines_pb2.GetPipelineJobRequest,
        context: grpc.ServicerContext,
    ) -> luminarycloud._proto.api.v0.luminarycloud.pipelines.pipelines_pb2.GetPipelineJobResponse:
        """Retrieves a pipeline job."""
    @abc.abstractmethod
    def ListPipelineJobs(
        self,
        request: luminarycloud._proto.api.v0.luminarycloud.pipelines.pipelines_pb2.ListPipelineJobsRequest,
        context: grpc.ServicerContext,
    ) -> luminarycloud._proto.api.v0.luminarycloud.pipelines.pipelines_pb2.ListPipelineJobsResponse:
        """Lists all pipeline jobs."""

def add_PipelineServiceServicer_to_server(servicer: PipelineServiceServicer, server: grpc.Server) -> None: ...
