# coding: utf-8

"""
    Electricity Maps API

    Electricity Maps API

    The version of the OpenAPI document: 1.0.0
    Contact: hello@electricitymaps.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi.models.past_range_response_price_day_ahead import PastRangeResponsePriceDayAhead

class TestPastRangeResponsePriceDayAhead(unittest.TestCase):
    """PastRangeResponsePriceDayAhead unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PastRangeResponsePriceDayAhead:
        """Test PastRangeResponsePriceDayAhead
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PastRangeResponsePriceDayAhead`
        """
        model = PastRangeResponsePriceDayAhead()
        if include_optional:
            return PastRangeResponsePriceDayAhead(
                zone = '',
                data = [
                    openapi.models.price_day_ahead.PriceDayAhead(
                        zone = 'DK-DK2', 
                        datetime = '', 
                        created_at = '', 
                        updated_at = '', 
                        value = 100, 
                        unit = 'EUR/MWh', 
                        source = 'settled_and_published_price', )
                    ],
                temporal_granularity = '15_minutes',
                aggregation_period = '15_minutes'
            )
        else:
            return PastRangeResponsePriceDayAhead(
                zone = '',
                data = [
                    openapi.models.price_day_ahead.PriceDayAhead(
                        zone = 'DK-DK2', 
                        datetime = '', 
                        created_at = '', 
                        updated_at = '', 
                        value = 100, 
                        unit = 'EUR/MWh', 
                        source = 'settled_and_published_price', )
                    ],
                temporal_granularity = '15_minutes',
        )
        """

    def testPastRangeResponsePriceDayAhead(self):
        """Test PastRangeResponsePriceDayAhead"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
