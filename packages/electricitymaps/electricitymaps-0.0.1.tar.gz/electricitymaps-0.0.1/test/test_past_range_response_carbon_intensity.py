# coding: utf-8

"""
    Electricity Maps API

    Electricity Maps API

    The version of the OpenAPI document: 1.0.0
    Contact: hello@electricitymaps.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi.models.past_range_response_carbon_intensity import PastRangeResponseCarbonIntensity

class TestPastRangeResponseCarbonIntensity(unittest.TestCase):
    """PastRangeResponseCarbonIntensity unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PastRangeResponseCarbonIntensity:
        """Test PastRangeResponseCarbonIntensity
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PastRangeResponseCarbonIntensity`
        """
        model = PastRangeResponseCarbonIntensity()
        if include_optional:
            return PastRangeResponseCarbonIntensity(
                zone = '',
                data = [
                    openapi.models.carbon_intensity.CarbonIntensity(
                        zone = 'DK-DK2', 
                        carbon_intensity = 318, 
                        datetime = '2024-05-19T03:00:00.000Z', 
                        updated_at = '2025-07-25T12:32:42.039Z', 
                        emission_factor_type = 'direct', 
                        is_estimated = False, 
                        estimation_method = '', 
                        temporal_granularity = '15_minutes', )
                    ],
                temporal_granularity = '15_minutes',
                aggregation_period = '15_minutes'
            )
        else:
            return PastRangeResponseCarbonIntensity(
                zone = '',
                data = [
                    openapi.models.carbon_intensity.CarbonIntensity(
                        zone = 'DK-DK2', 
                        carbon_intensity = 318, 
                        datetime = '2024-05-19T03:00:00.000Z', 
                        updated_at = '2025-07-25T12:32:42.039Z', 
                        emission_factor_type = 'direct', 
                        is_estimated = False, 
                        estimation_method = '', 
                        temporal_granularity = '15_minutes', )
                    ],
                temporal_granularity = '15_minutes',
        )
        """

    def testPastRangeResponseCarbonIntensity(self):
        """Test PastRangeResponseCarbonIntensity"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
