# coding: utf-8

"""
    Electricity Maps API

    Electricity Maps API

    The version of the OpenAPI document: 1.0.0
    Contact: hello@electricitymaps.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi.models.carbon_intensity_forecast_response import CarbonIntensityForecastResponse

class TestCarbonIntensityForecastResponse(unittest.TestCase):
    """CarbonIntensityForecastResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CarbonIntensityForecastResponse:
        """Test CarbonIntensityForecastResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CarbonIntensityForecastResponse`
        """
        model = CarbonIntensityForecastResponse()
        if include_optional:
            return CarbonIntensityForecastResponse(
                zone = 'DK-DK2',
                updated_at = '2025-08-22T18:00:00.000Z',
                forecast = [
                    openapi.models.carbon_intensity_forecast_response_forecast_inner.CarbonIntensityForecastResponse_forecast_inner(
                        carbon_intensity = 100, 
                        datetime = '2025-08-22T18:00:00.000Z', )
                    ]
            )
        else:
            return CarbonIntensityForecastResponse(
                zone = 'DK-DK2',
                forecast = [
                    openapi.models.carbon_intensity_forecast_response_forecast_inner.CarbonIntensityForecastResponse_forecast_inner(
                        carbon_intensity = 100, 
                        datetime = '2025-08-22T18:00:00.000Z', )
                    ],
        )
        """

    def testCarbonIntensityForecastResponse(self):
        """Test CarbonIntensityForecastResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
