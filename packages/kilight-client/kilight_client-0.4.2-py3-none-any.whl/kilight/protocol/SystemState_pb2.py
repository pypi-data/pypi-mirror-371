# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: kilight/protocol/SystemState.proto
# Protobuf Python Version: 6.31.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    31,
    1,
    '',
    'kilight/protocol/SystemState.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from kilight.protocol import OutputState_pb2 as kilight_dot_protocol_dot_OutputState__pb2
from kilight.protocol import SystemTemperatures_pb2 as kilight_dot_protocol_dot_SystemTemperatures__pb2
from kilight.protocol import FanState_pb2 as kilight_dot_protocol_dot_FanState__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\"kilight/protocol/SystemState.proto\x12\x10kilight.protocol\x1a\"kilight/protocol/OutputState.proto\x1a)kilight/protocol/SystemTemperatures.proto\x1a\x1fkilight/protocol/FanState.proto\"\xe3\x01\n\x0bSystemState\x12.\n\x07outputA\x18\x01 \x01(\x0b\x32\x1d.kilight.protocol.OutputState\x12\x33\n\x07outputB\x18\x02 \x01(\x0b\x32\x1d.kilight.protocol.OutputStateH\x00\x88\x01\x01\x12:\n\x0ctemperatures\x18\x03 \x01(\x0b\x32$.kilight.protocol.SystemTemperatures\x12\'\n\x03\x66\x61n\x18\x04 \x01(\x0b\x32\x1a.kilight.protocol.FanStateB\n\n\x08_outputBb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'kilight.protocol.SystemState_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_SYSTEMSTATE']._serialized_start=169
  _globals['_SYSTEMSTATE']._serialized_end=396
# @@protoc_insertion_point(module_scope)
