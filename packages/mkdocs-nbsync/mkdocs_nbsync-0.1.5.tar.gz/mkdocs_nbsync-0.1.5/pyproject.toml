[build-system]
requires = ["uv_build"]
build-backend = "uv_build"

[project]
name = "mkdocs-nbsync"
version = "0.1.5"
description = "MkDocs plugin treating Jupyter notebooks, Python scripts and Markdown files as first-class citizens for documentation with dynamic execution and real-time synchronization"
readme = "README.md"
license = { file = "LICENSE" }
authors = [{ name = "daizutabi", email = "daizutabi@gmail.com" }]
keywords = [
  "jupyter",
  "notebook",
  "mkdocs",
  "documentation",
  "markdown",
  "python",
  "visualization",
  "dynamic-execution",
  "real-time-sync",
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3.14",
  "Topic :: Documentation",
  "Topic :: Software Development :: Documentation",
  "Topic :: Text Processing :: Markup :: Markdown",
]
requires-python = ">=3.10"
dependencies = ["mkdocs>=1.6", "nbsync>=0.3.6"]

[project.urls]
Documentation = "https://daizutabi.github.io/mkdocs-nbsync/"
Source = "https://github.com/daizutabi/mkdocs-nbsync"
Issues = "https://github.com/daizutabi/mkdocs-nbsync/issues"

[project.entry-points."mkdocs.plugins"]
mkdocs-nbsync = "mkdocs_nbsync.plugin:Plugin"

[dependency-groups]
dev = [
  "ipykernel>=6.29.5",
  "matplotlib>=3.10.1",
  "mkdocs-material>=9.6.11",
  "nbconvert>=7.16.6",
  "pytest-clarity>=1.0.1",
  "pytest-cov>=6.1.0",
  "pytest-randomly>=3.16.0",
  "pytest-xdist>=3.6.1",
  "seaborn>=0.13.2",
]

[tool.pytest.ini_options]
testpaths = ["src", "tests"]
addopts = [
  "--doctest-modules",
  "--cov=mkdocs_nbsync",
  "--cov-report=lcov:lcov.info",
]

[tool.coverage.report]
exclude_lines = [
  "except ImportError",
  "if TYPE_CHECKING:",
  "raise NotImplementedError",
  "no cov",
]
skip_covered = true

[tool.ruff]
line-length = 88
target-version = "py310"

[tool.ruff.lint]
select = ["ALL"]
unfixable = ["F401"]
ignore = ["ANN401", "ARG001", "ARG002", "C901", "D", "PLR0911", "S105"]

[tool.ruff.lint.per-file-ignores]
"**/tests/*" = ["ANN", "ARG", "D", "FBT", "PLR", "RUF", "S", "PGH003"]
"**/{notebooks,scripts}/*" = ["ANN", "ERA001", "NPY", "T201"]

[tool.basedpyright]
include = ["src", "tests"]
reportAny = false
reportExplicitAny = false
reportIncompatibleMethodOverride = false
reportImplicitOverride = false
reportUnusedCallResult = false
