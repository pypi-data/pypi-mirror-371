{
  "ERROR_EMPTY_DATA": "Erreur: données vides fournies",
  "ERROR_COLUMN_NOT_FOUND": "Erreur: Colonne '{}' INTUST dans DataFrame",
  "ERROR_PLOT_GENERATION": "Plot de génération d'erreurs: {}",
  "ERROR_INVALID_DATA": "Erreur: données non valides fournies",
  "ERROR_MODA": "Mode de calcul d'erreur",
  "ERROR_MEDIA": "Erreur de calcul de la moyenne",
  "ERROR_MEDIANA": "Erreur de calcul de la médiane",
  "ERROR_RANGO": "Erreur de calcul de la plage",
  "ERROR_VARIANZA": "Erreur de calcul de la variance",
  "ERROR_DESVIACION": "Erreur de calcul de l'écart type",
  "ERROR_DISPERSION": "Erreur de calcul des mesures de dispersion",
  "ERROR_COLUMNA_NO_EXISTE": "La colonne '{}' n'existe pas dans le dataframe",
  "error_type": "L'entrée doit être de la chaîne de type.",
  "not_found": "Aucune fonction nommée \"{name}\" Found. \\ N \\ Navailable Les options sont: \\ n \\ n {Options}",
  "title_all": "Documentation desiliaire",
  "title_not_found": "Fonction introuvable",
  "copy": "Copier dans le presse-papiers",
  "close": "Fermer",
  "call": "Appel (nom, type = aucun, chemin = aucun, timeout = 5, strict = true)\nRecherche un fichier par nom (et éventuellement taper) dans un dossier donné (ou à partir de CWD) récursivement vers le bas puis vers le haut,\net le charge en fonction de son type automatiquement.\n\nParamètres:\n    Nom (Str): Nom de base du fichier, sans extension.\n    Type (Str, Facultatif): Extension attendue («CSV», «JSON», «XML»).\n    Path (Str, Facultatif): chemin initial vers la recherche depuis.\n    Timeout (int, facultatif): temps de recherche maximum en secondes.\n    Strict (bool, facultatif): si vrai, soulève une erreur si plusieurs fichiers avec le même nom sont trouvés.\n\nRenvoie: le contenu du fichier trouvé ou aucun.",
  "load_user_translations": "load_user_translations (lang_path = \"lang.json\")\nCharge les traductions définies par l'utilisateur à partir d'un fichier JSON et les fusionne avec les traductions par défaut.\n\nParamètres:\n    Lang_path (Str, Facultatif): Chemin vers le fichier de traductions utilisateur. Par défaut \"lang.json\".\n\nComportement:\n    - Si le fichier existe et est un JSON valide, fusionne son contenu avec des traductions par défaut\n    - Si le fichier n'existe pas, ne conserve que des traductions par défaut\n    - Affiche une fenêtre contextuelle d'avertissement si le fichier existe mais ne peut pas être chargé\n    - met à jour le dictionnaire mondial des _translations\n\nRemarque: Cette fonction doit être appelée avant d'utiliser la fonction t () pour que les traductions utilisateur prennent effet.",
  "switch": "Système de cas de commutation amélioré pour Python. Supports:\n- plusieurs clés correspondantes par cas\n- Faire correspondre par valeur, type, regex, fonction lambda ou classe\n- Support de structure de données Pandas et Numpy\n- Exécution asynchrone facultative des cas\n- Match-tout pour exécuter plusieurs cas de correspondance\n- Mode de débogage pour enregistrer les cas de correspondance",
  "async_switch": "Emballage à Switch Instanciate en mode asynchrone. Paramètres:\n- Valeur: la valeur à correspondre aux cas définis.\n- ** KWARGS: Arguments de mots clés facultatifs transmis directement à la classe Switch. Ceux-ci peuvent inclure:\n  - match_all (bool): exécutez tous les cas de correspondance au lieu de s'arrêter au premier.\n  - Debug (bool): Imprimez quel cas correspondait et ce qui exécuté.\n  - async_mode (bool): ne doit pas être passé manuellement ici (toujours forcé à vrai).\nExemple: asyncSwitch ('Hello', match_all = true, debug = true) (...)",
  "file_not_found": "Fichier introuvable: {file_path}",
  "encoding_error": "Erreur d'encodage de fichiers (pas UTF-8)",
  "syntax_error": "Erreur de syntaxe: {msg}",
  "undefined_name": "Nom non défini: '{nom}'",
  "syntax_check_title": "Vérification de la syntaxe",
  "no_errors_found": "Aucune erreur de syntaxe trouvée!",
  "errors_found": "Found {count} error (s) dans {file_path}:",
  "error_line": "Line {line}: {message}",
  "error_context": "Contexte: {contexte}",
  "syntax_errors_title": "Erreurs de syntaxe",
  "multiple_errors": "Trouvé plusieurs erreurs",
  "error_types_found": "Types d'erreur trouvés: {types}",
  "multiple_errors_title": "Trouvé plusieurs types d'erreurs",
  "syntax_analysis": "Analyse de syntaxe",
  "semantic_analysis": "Analyse sémantique",
  "provide_file_path": "Veuillez fournir un chemin de fichier pour vérifier",
  "file_search_title": "Recherche de fichiers",
  "searching_from": "Rechercher",
  "files_found": "Fichiers trouvés",
  "file_not_found_explicit": "File '{name}. {Ext}' Non trouvé dans '{path}'",
  "file_not_found_any": "Aucun fichier nommé '{name}' trouvé dans '{path}'",
  "file_ambiguous": "Plusieurs fichiers nommés '{name}' Found: {Types}. Spécifiez le type ou utilisez strict = false.",
  "unsupported_file_type": "Type de fichier non pris en charge: {ext}",
  "t": "Renvoie le texte localisé pour une clé donnée en fonction de la langue sélectionnée.",
  "show_gui_popup_description": "Affiche une fenêtre contextuelle avec du contenu texte et une visualisation facultative.\nGère les environnements CLI et Jupyter Notebook.\n\nCaractéristiques:\n- Copier / enregistrer les modifications de la fonctionnalité en fonction de l'onglet actif\n- Manipulation appropriée de la figure dans Jupyter\n- terminaison de fenêtre propre\n\nArgs:\n    Titre (Str): titre de fenêtre\n    Contenu (STR): Contenu texte à afficher\n    Fig (matplotlib.figure.figure, facultatif): figure pré-créée\n    Plot_function (callable, facultatif): fonction qui génère une figure\n    Plot_args (dict, facultatif): arguments pour tracé_fonction",
  "warning": "Avertissement",
  "translations_not_found_warning": "traductions.json introuvables",
  "load_user_translations_error": "Impossible de charger l'utilisateur lang.json: {error}",
  "missing_translation_key": "manquant: {key}",
  "semantic_analysis_failed": "L'analyse sémantique a échoué: {msg}",
  "redundant_true": "Comparaison redondante avec true, utilisez directement la valeur",
  "redundant_false": "Comparaison redondante avec false, utilisez «pas» plutôt",
  "none_comparison": "La comparaison avec aucune ne devrait utiliser 'est' est \"au lieu de '=='",
  "not_true_recommendation": "L'utilisation de '! = True' n'est pas recommandée, envisagez de simplifier la condition",
  "not_false_recommendation": "L'utilisation de '! = False' n'est pas recommandée, envisagez d'utiliser une condition positive",
  "function": "fonction",
  "class": "classe",
  "help_usage": "Utilisez l'aide ('function_name') pour plus de détails sur une fonction spécifique",
  "help_error": "Erreur: la fonction '{}' n'existe pas ou n'a pas de documentation",
  "save": "Sauvegarder",
  "content": "Contenu",
  "preview": "Prévisualisation",
  "light_theme": "Thème léger",
  "dark_theme": "Thème sombre",
  "settings": "Paramètres",
  "error_in_gui": "Erreur dans GUI",
  "example": "Exemple",
  "preview_error": "Erreur de prévisualisation",
  "help_available_functions": "Fonctions disponibles:",
  "function_preview_title": "Aperçu de {fonction}",
  "non_graph_preview_available": "Aperçu non graphique disponible",
  "preview_error_message": "Erreur dans l'aperçu:\n{erreur}",
  "async_preview_not_available": "L'exemple asynchronisé ne peut pas être affiché dans Sync Preview.\nUtilisez 'Await AsyncSwitch (...)' dans un environnement asynchrone.",
  "switch_preview_positive": "Positif (exemple de commutateur)",
  "switch_preview_zero": "Zéro (exemple de commutateur)",
  "scatter_description": "Crée un tracé de dispersion pour visualiser la relation entre deux variables continues.",
  "lineplot_description": "Crée un tracé de ligne idéal pour les séries chronologiques ou les données catégorielles commandées.",
  "kdeplot_description": "Crée un histogramme lissé en utilisant une estimation de la densité du noyau.",
  "violinplot_description": "Montre la distribution des données quantitatives dans plusieurs catégories.",
  "pairplot_description": "Crée des relations par paire dans un ensemble de données montrant les distributions conjointes et marginales.",
  "countplot_description": "Un tracé de barre qui montre la fréquence des données catégorielles.",
  "lmplot_description": "Les données des tracés et un modèle de régression linéaire s'adaptent avec des intervalles de confiance.",
  "jointplot_description": "Combine le tracé de dispersion avec des histogrammes ou des parcelles de KDE sur les marges.",
  "swarmplot_description": "Montre toutes les observations ainsi que la représentation de la distribution sous-jacente.",
  "regplot_description": "Les données des tracés et un modèle de régression s'adaptent à l'ordre polynomial en option.",
  "barplot_description": "Montre les estimations ponctuelles et les intervalles de confiance comme des barres rectangulaires.",
  "stripplot_description": "Un tracé de dispersion où une variable est catégorique avec la gigue pour éviter le chevauchement.",
  "large_plot_note": "Remarque: ce tracé peut prendre un moment pour rendre en raison de sa taille",
  "preview_not_available": "Aperçu interactif non disponible pour cette fonction",
  "description": "description",
  "get_moda_description": "Calcule le mode (valeur la plus fréquente) d'un ensemble de données. Peut renvoyer la valeur avec son nombre de fréquences.",
  "get_media_description": "Calcule la moyenne arithmétique (moyenne) d'un ensemble de données. Gère les valeurs NAN éventuellement.",
  "get_median_description": "Calcule la médiane (valeur moyenne) d'un ensemble de données. Gère les valeurs NAN éventuellement.",
  "get_rank_description": "Calcule la plage (différence entre max et min) d'une colonne DataFrame.",
  "get_var_description": "Calcule la variance d'une colonne DataFrame.",
  "get_desv_description": "Calcule l'écart type d'une colonne DataFrame.",
  "disp_description": "Renvoie des mesures de dispersion (plage, variance, écart-type) pour une colonne DataFrame.",
  "call_description": "Recherche et lit des fichiers de différents formats (CSV, JSON, XML) avec des options de recherche flexibles.",
  "check_syntax_description": "Analyse le code Python pour les erreurs de syntaxe, les noms non définis et les problèmes de style.",
  "createDB_description": "Fonction d'usine pour créer une instance de connexion de base de données.",
  "exportData_description": "Exporte les données des tables de base de données vers divers formats (CSV, JSON, XML, SQL, Excel, etc.).",
  "addTable_description": "Ajoute une nouvelle table à la base de données avec des colonnes et des contraintes spécifiées.",
  "mergeTable_description": "Merges plusieurs tables à l'aide de SQL Logic avec différents types de jointures.",
  "join_description": "Effectue des jointures SQL entre les tables avec divers types de jointures.",
  "drop_description": "Dépose les tables de la base de données, éventuellement avec Cascade.",
  "cascadeDelete_description": "Effectue la suppression en cascade basée sur une condition, gérant les dépendances.",
  "recursiveQuery_description": "Exécute des requêtes récursives à l'aide d'expressions de table communes (CTE).",
  "windowFunction_description": "Applique des fonctions de fenêtre (ROW_NUMBER, RANGE, etc.) aux données de la table.",
  "executeRawSQL_description": "Exécute les requêtes SQL brutes directement sur la base de données.",
  "show_description": "Affiche les tables et les données de la base de données dans une interface graphique.",
  "hbar_description": "Crée un graphique à barres horizontal avec des étiquettes et des couleurs personnalisables.",
  "vbar_description": "Crée un graphique à barres vertical avec des étiquettes et des couleurs personnalisables.",
  "pie_description": "Crée un graphique à tarte avec des étiquettes personnalisables, des couleurs et des formates en pourcentage.",
  "boxplot_description": "Crée un tracé de boîte pour visualiser la distribution des données entre les catégories.",
  "histo_description": "Crée un histogramme pour visualiser la distribution d'une variable numérique.",
  "heatmap_description": "Crée une carte thermique pour visualiser des données de type matrice avec le codage couleur.",
  "table_description": "Crée une visualisation de table à partir de tableaux de données ou de frames de données.",
  "normalize_description": "Normalise un tableau entre 0 et 1 en utilisant la mise à l'échelle Min-Max.",
  "conditional_description": "Applique des conditions logiques pour générer une nouvelle colonne dans un dataframe.",
  "convert_file_description": "Convertit les fichiers entre différents formats (SHP, DBF, XML, etc.) en CSV.",
  "Switch_description": "Implémentation de commutation synchrone avec plusieurs formats de correspondance de motifs.",
  "switch_description": "Fonction de wrapper pour l'utilisation de la syntaxe naturelle du commutateur synchrone.",
  "AsyncSwitch_description": "Implémentation de commutation asynchrone avec plusieurs formats de correspondance de motifs.",
  "async_switch_description": "Fonction de wrapper pour l'utilisation de la syntaxe naturelle du commutateur asynchrone.",
  "config_description": "Dictionnaire de configuration global pour les paramètres du module.",
  "fig_to_img_description": "Convertit une figure matplotlib en un tableau d'image à utiliser dans d'autres visualisations.",
  "format_number_description": "Formats Nombres avec décimales personnalisables et formatage en pourcentage.",
  "load_user_translations_description": "Charge les fichiers de traduction définis par l'utilisateur pour étendre ou remplacer les traductions par défaut.",
  "register_description": "Décorateur pour enregistrer des fonctions ou des classes dans le registre mondial.",
  "set_language_description": "Définit la langue actuelle pour les traductions.",
  "t_description": "Fonction de traduction qui renvoie la chaîne traduite pour une clé donnée dans la langue actuelle."
}