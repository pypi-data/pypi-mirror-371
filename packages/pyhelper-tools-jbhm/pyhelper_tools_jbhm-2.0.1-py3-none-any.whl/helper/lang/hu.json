{
  "ERROR_EMPTY_DATA": "Hiba: Üres adatok megadva",
  "ERROR_COLUMN_NOT_FOUND": "Hiba: A '{}' oszlop nem található a DataFrame -ban",
  "ERROR_PLOT_GENERATION": "Hiba -generációs cselekmény: {}",
  "ERROR_INVALID_DATA": "Hiba: Érvénytelen adatok megadva",
  "ERROR_MODA": "Hiba kiszámítási mód",
  "ERROR_MEDIA": "Hiba kiszámítása az átlag",
  "ERROR_MEDIANA": "Hiba a medián kiszámítása",
  "ERROR_RANGO": "Hiba kiszámítási tartomány",
  "ERROR_VARIANZA": "Hiba a variancia kiszámítása",
  "ERROR_DESVIACION": "Hiba a standard eltérés kiszámításához",
  "ERROR_DISPERSION": "Hiba a diszperziós intézkedések kiszámításának hibája",
  "ERROR_COLUMNA_NO_EXISTE": "A '{}' oszlop nem létezik az adatkeretben",
  "error_type": "A bemenetnek típusú karakterláncnak kell lennie.",
  "not_found": "Nincs \"{név}\" nevű funkció.",
  "title_all": "Segítő dokumentáció",
  "title_not_found": "A funkció nem található",
  "copy": "Másolja a vágólapra",
  "close": "Közeli",
  "call": "Hívás (név, type = nincs, elérési út = nincs, időtúllépés = 5, szigorú = igaz)\nA fájlt név szerint (és opcionálisan típust) keres egy adott mappában (vagy a CWD -ből) rekurzív módon lefelé, majd felfelé,\nés automatikusan betölti a típusától függően.\n\nParaméterek:\n    Név (STR): A fájl alapneve, kiterjesztés nélkül.\n    Típus (STR, opcionális): Várható kiterjesztés ('CSV', 'JSON', 'XML').\n    Út (STR, opcionális): Kezdeti út a kereséshez.\n    Időtúllépés (int, opcionális): maximális keresési idő másodpercek alatt.\n    Szigorú (bool, opcionális): Ha igaz, akkor hibát okoz, ha több azonos nevű fájl található.\n\nVisszatérés: A talált fájl tartalma, vagy nincs.",
  "load_user_translations": "load_user_transzlations (lang_path = \"lang.json\")\nBetölti a felhasználó által definiált fordításokat egy JSON fájlból, és egyesíti azokat az alapértelmezett fordításokkal.\n\nParaméterek:\n    lang_path (str, opcionális): a felhasználói fordítási fájl elérési útja. Alapértelmezés szerint a \"lang.json\" -nak.\n\nViselkedés:\n    - Ha a fájl létezik és érvényes JSON, az alapértelmezett fordításokkal egyesíti annak tartalmát\n    - Ha a fájl nem létezik, csak az alapértelmezett fordításokat tartja fenn\n    - Figyelmeztető felbukkanást mutat, ha a fájl létezik, de nem tölthető be\n    - Frissíti a globális _transzlations szótár\n\nMegjegyzés: Ezt a funkciót a t () függvény használata előtt meg kell hívni, hogy a felhasználói fordítások hatályba lépjenek.",
  "switch": "Továbbfejlesztett kapcsolási rendszer a Python számára. Támogatások:\n- Többszörös megfelelő kulcsok esetén\n- Mérni az érték, a típus, a regex, a lambda funkció vagy az osztály szerint\n- Pandas és Numpy adatszerkezeti támogatás\n- Az esetek opcionális aszinknc végrehajtása\n- Misling-ALL MODE több megfelelő eset végrehajtásához\n- hibakeresési mód a naplózási esetekhez",
  "async_switch": "Csomagológép a váltáshoz az Async módban. Paraméterek:\n- Érték: A meghatározott eseteknek való megfeleléshez szükséges érték.\n- ** KWARGS: Opcionális kulcsszó argumentumok közvetlenül a kapcsolóosztályhoz továbbították. Ide tartozhatnak:\n  - Match_all (bool): Végezze el az összes megfelelő esetet az első leállítás helyett.\n  - Debug (bool): Nyomtassa ki, melyik esethez igazodott és melyik végrehajtott.\n  - Async_mode (bool): Nem szabad itt manuálisan átadni (mindig igazra kényszerítve).\nPélda: AsyncSwitch ('Hello', Match_all = True, Debug = True) (...)",
  "file_not_found": "A fájl nem található: {file_path}",
  "encoding_error": "Fájl kódolási hiba (nem UTF-8)",
  "syntax_error": "Szintaxis hiba: {msg}",
  "undefined_name": "Nem definiált név: '{név}'",
  "syntax_check_title": "Szintaxis ellenőrzés",
  "no_errors_found": "Nem talált szintaxis hibákat!",
  "errors_found": "Talált {count} hiba (s) a {file_path} -ben:",
  "error_line": "{Sor} sor: {üzenet}",
  "error_context": "Kontextus: {kontextus}",
  "syntax_errors_title": "Szintaxis hibák",
  "multiple_errors": "Több hibát talált",
  "error_types_found": "Hibatípusok megtalálhatók: {Típusok}",
  "multiple_errors_title": "Többféle hibát talált",
  "syntax_analysis": "Szintaxis elemzés",
  "semantic_analysis": "Szemantikai elemzés",
  "provide_file_path": "Kérjük, adjon meg egy fájl elérési utat az ellenőrzéshez",
  "file_search_title": "Fájlkeresés",
  "searching_from": "Keresés",
  "files_found": "Fájlok találtak",
  "file_not_found_explicit": "A '{név}. {Ext}' fájl nem található a '{elérési út}'",
  "file_not_found_any": "A {name} 'nevű fájl nem található a' {elérési út} '-ben",
  "file_ambiguous": "A {név} 'nevű több fájl megtalálható: {type}. Adja meg a típust, vagy használja a szigorú = hamis.",
  "unsupported_file_type": "Nem támogatott fájltípus: {ext}",
  "t": "Visszaadja a lokalizált szöveget egy adott kulcshoz a kiválasztott nyelv alapján.",
  "show_gui_popup_description": "Megjeleníti a felbukkanó ablakot szöveges tartalommal és opcionális megjelenítéssel.\nMind a CLI, mind a Jupyter notebook környezetet kezeli.\n\nJellemzők:\n- A funkcionalitási változások másolása/mentése Az aktív fül alapján\n- Megfelelő figurakezelés a Jupyterben\n- Tiszta ablak megszüntetése\n\nARGS:\n    Cím (STR): ablakcím\n    Tartalom (STR): Szöveges tartalom a megjelenítéséhez\n    ábra (matplotlib.figure.figure, opcionális): Előre létrehozott ábra\n    Plot_function (hívható, opcionális): A figura generáló funkció\n    Plot_args (dikt, opcionális): argumentumok a plot_funkcióhoz",
  "warning": "Figyelmeztetés",
  "translations_not_found_warning": "fordítások.json nem található",
  "load_user_translations_error": "Nem tudta betölteni a felhasználót Lang.json: {hiba}",
  "missing_translation_key": "missing: {key}",
  "semantic_analysis_failed": "Semantic analysis failed: {msg}",
  "redundant_true": "Redundant comparison with True, use the value directly",
  "redundant_false": "Redundant comparison with False, use 'not' instead",
  "none_comparison": "Comparison with None should use 'is' instead of '=='",
  "not_true_recommendation": "Using '!= True' is not recommended, consider simplifying the condition",
  "not_false_recommendation": "Using '!= False' is not recommended, consider using a positive condition",
  "function": "function",
  "class": "class",
  "help_usage": "Use help('function_name') for details about a specific function",
  "help_error": "Error: Function '{}' does not exist or has no documentation",
  "save": "Save",
  "content": "Content",
  "preview": "Preview",
  "light_theme": "Light Theme",
  "dark_theme": "Dark Theme",
  "settings": "Settings",
  "error_in_gui": "Error in GUI",
  "example": "Example",
  "preview_error": "Preview Error",
  "help_available_functions": "Available functions:",
  "function_preview_title": "Preview of {function}",
  "non_graph_preview_available": "Non-graphical preview available",
  "preview_error_message": "Error in preview:\n{error}",
  "async_preview_not_available": "Async example cannot be shown in sync preview.\nUse 'await AsyncSwitch(...)' in async environment.",
  "switch_preview_positive": "Positive (Switch example)",
  "switch_preview_zero": "Zero (Switch example)",
  "scatter_description": "Creates a scatter plot to visualize the relationship between two continuous variables.",
  "lineplot_description": "Creates a line plot ideal for time series or ordered categorical data.",
  "kdeplot_description": "Creates a smoothed histogram using kernel density estimation.",
  "violinplot_description": "Shows the distribution of quantitative data across several categories.",
  "pairplot_description": "Creates pairwise relationships in a dataset showing both joint and marginal distributions.",
  "countplot_description": "A bar plot that shows the frequency of categorical data.",
  "lmplot_description": "Plots data and a linear regression model fit with confidence intervals.",
  "jointplot_description": "Combines scatter plot with histograms or KDE plots on the margins.",
  "swarmplot_description": "Shows all observations along with representation of the underlying distribution.",
  "regplot_description": "Plots data and a regression model fit with optional polynomial order.",
  "barplot_description": "Shows point estimates and confidence intervals as rectangular bars.",
  "stripplot_description": "A scatter plot where one variable is categorical with jitter to avoid overlap.",
  "large_plot_note": "Note: This plot may take a moment to render due to its size",
  "preview_not_available": "Interactive preview not available for this function",
  "description": "description",
  "get_moda_description": "Calculates the mode (most frequent value) of a dataset. Can return the value with its frequency count.",
  "get_media_description": "Calculates the arithmetic mean (average) of a dataset. Handles NaN values optionally.",
  "get_median_description": "Calculates the median (middle value) of a dataset. Handles NaN values optionally.",
  "get_rank_description": "Calculates the range (difference between max and min) of a DataFrame column.",
  "get_var_description": "Calculates the variance of a DataFrame column.",
  "get_desv_description": "Calculates the standard deviation of a DataFrame column.",
  "disp_description": "Returns dispersion measures (range, variance, standard deviation) for a DataFrame column.",
  "call_description": "Searches for and reads files of different formats (CSV, JSON, XML) with flexible search options.",
  "check_syntax_description": "Analyzes Python code for syntax errors, undefined names, and style issues.",
  "createDB_description": "Factory function to create a database connection instance.",
  "exportData_description": "Exports data from database tables to various formats (CSV, JSON, XML, SQL, Excel, etc.).",
  "addTable_description": "Adds a new table to the database with specified columns and constraints.",
  "mergeTable_description": "Merges multiple tables using SQL logic with different join types.",
  "join_description": "Performs SQL joins between tables with various join types.",
  "drop_description": "Drops tables from the database, optionally with cascade.",
  "cascadeDelete_description": "Performs cascade deletion based on a condition, handling dependencies.",
  "recursiveQuery_description": "Executes recursive queries using Common Table Expressions (CTE).",
  "windowFunction_description": "Applies window functions (ROW_NUMBER, RANK, etc.) to table data.",
  "executeRawSQL_description": "Executes raw SQL queries directly on the database.",
  "show_description": "Displays database tables and data in a graphical interface.",
  "hbar_description": "Creates a horizontal bar chart with customizable labels and colors.",
  "vbar_description": "Creates a vertical bar chart with customizable labels and colors.",
  "pie_description": "Creates a pie chart with customizable labels, colors, and percentage formatting.",
  "boxplot_description": "Creates a box plot to visualize distribution of data across categories.",
  "histo_description": "Creates a histogram to visualize distribution of a numeric variable.",
  "heatmap_description": "Creates a heatmap to visualize matrix-like data with color coding.",
  "table_description": "Creates a table visualization from data arrays or DataFrames.",
  "normalize_description": "Normalizes an array between 0 and 1 using min-max scaling.",
  "conditional_description": "Applies logical conditions to generate a new column in a DataFrame.",
  "convert_file_description": "Converts files between different formats (SHP, DBF, XML, etc.) to CSV.",
  "Switch_description": "Synchronous switch implementation with multiple pattern matching formats.",
  "switch_description": "Wrapper function for natural syntax usage of the synchronous switch.",
  "AsyncSwitch_description": "Asynchronous switch implementation with multiple pattern matching formats.",
  "async_switch_description": "Wrapper function for natural syntax usage of the asynchronous switch.",
  "config_description": "Global configuration dictionary for module settings.",
  "fig_to_img_description": "Converts a matplotlib figure to an image array for use in other visualizations.",
  "format_number_description": "Formats numbers with customizable decimal places and percentage formatting.",
  "load_user_translations_description": "Loads user-defined translation files to extend or override default translations.",
  "register_description": "Decorator to register functions or classes in the global REGISTRY.",
  "set_language_description": "Sets the current language for translations.",
  "t_description": "Translation function that returns the translated string for a given key in the current language."
}