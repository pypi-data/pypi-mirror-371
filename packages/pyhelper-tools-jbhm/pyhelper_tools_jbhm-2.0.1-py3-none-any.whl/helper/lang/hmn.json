{
  "ERROR_EMPTY_DATA": "Yuam Kev: Cov ntaub ntawv npliag",
  "ERROR_COLUMN_NOT_FOUND": "Yuam Kev: Kem '{{}' tsis pom nyob hauv Dataframe",
  "ERROR_PLOT_GENERATION": "Yuam Kev Tsim Cov Ntsiab Lus: {}",
  "ERROR_INVALID_DATA": "Yuam Kev: Cov ntaub ntawv tsis raug muab",
  "ERROR_MODA": "Yuam Kev Sau",
  "ERROR_MEDIA": "Yuam kev ntsuas txhais tau tias",
  "ERROR_MEDIANA": "Yuam Kev Ntsuas Nruab Nrab",
  "ERROR_RANGO": "Yuam Kev Xam Tau Ntau Yam",
  "ERROR_VARIANZA": "Yuam Kev Ntsuas Variance",
  "ERROR_DESVIACION": "Yuam Kev Xam Cov Qauv Qauv Txawv",
  "ERROR_DISPERSION": "Yuam Kev Ntsuas Ntsuas Kev Ntsuas Daus",
  "ERROR_COLUMNA_NO_EXISTE": "Kem '{}' tsis muaj nyob hauv Dataframe",
  "error_type": "Cov tswv yim yuav tsum yog hom hlua.",
  "not_found": "Tsis muaj nuj nqi npe \"{lub npe}\" pom. \\ N \\ n nav navailable xaiv yog: \\ n}",
  "title_all": "Cov Ntaub Ntawv Helper",
  "title_not_found": "Muaj nuj nqi tsis pom",
  "copy": "Daim ntawv luam tawm rau ntawv los teev",
  "close": "Kaw",
  "call": "Hu (Npe, Ntaus = Tsis Muaj, Kab = Tsis Muaj Ib, Times = 5, nruj = muaj tseeb)\nTshawb rau cov ntaub ntawv ntawm lub npe (thiab xaiv hom) nyob rau hauv ib daim nplaub tshev (lossis los ntawm CWD) Recursiddely downwards thiab ces upwards,\nThiab thauj khoom nws nyob ntawm nws hom cia.\n\nCov tsis muaj:\n    Npe (str): Lub npe npe ntawm cov ntaub ntawv, tsis muaj kev ncua ntxiv.\n    Hom (Str, xaiv): Xav tau kev txuas ntxiv ('CSV', 'JSAS', 'XML').\n    Txoj kev (str, yeem): txoj kev pib mus nrhiav los ntawm.\n    Lub sijhawm (INT, YOOJ YIM):: Lub sijhawm tshawb ntau tshaj plaws hauv vib nas this.\n    strict (bool, yeem): Yog tias muaj tseeb, tsim nyog yog tias ntau cov ntaub ntawv nrog tib lub npe pom.\n\nRov qab los: cov ntsiab lus ntawm cov ntawv pom cov ntaub ntawv lossis tsis muaj.",
  "load_user_translations": "Load_USER_TRANSER_TRANSLENTS (Lang_pha = \"Lang.json\")\nThauj cov neeg siv txhais lus los ntawm JSON ntawv thiab sib koom ua ke nrog lawv nrog lub neej ntawd txhais.\n\nCov tsis muaj:\n    Lang_path (Str, Yeem): Txoj Kev Rau Cov Neeg Siv Cov Lus Txhais. Lub neej ntawd rau \"Lang.json\".\n\nTus cwj pwm:\n    - Yog tias cov ntaub ntawv muaj thiab yog siv tau Json, Merces nws cov ntsiab lus nrog kev txhais lus\n    - Yog tias cov ntaub ntawv tsis muaj nyob, pheej tsuas yog txhais tau tias txhais lus\n    - Qhia cov lus ceeb toom yog tias cov ntaub ntawv muaj tab sis tsis tuaj yeem thauj khoom\n    - Hloov tshiab lub ntiaj teb _translations phau ntawv txhais lus\n\nNco tseg: txoj haujlwm no yuav tsum raug hu ua T () ua haujlwm rau cov neeg siv txhais cov nyhuv.",
  "switch": "Txhim kho txoj kev hloov-rooj plaub rau nab hab sej. Txhawb Nqa:\n- Ntau cov yuam sij sib txuam ib kis\n- phim los ntawm tus nqi, hom, regex, lambda muaj nuj nqi, lossis chav kawm\n- Pandas thiab numpy cov ntaub ntawv qauv kev txhawb nqa\n- Xaiv async tau ua tiav ntawm cov neeg mob\n- phim-txhua hom rau kev ua kom muaj kev sib luag\n- Debug hom kom log sib piv",
  "async_switch": "Wrapper rau kev hloov pauv nrawm hauv Async hom. Cov tsis muaj:\n- Tus nqi: Tus nqi los sib phim rau qee kis.\n- ** KWARGS: yeem lo lus tseem ceeb sib cav sib ceg dhau mus ncaj qha rau chav kawm hloov mus. Cov no tuaj yeem suav nrog:\n  - Math_all (bol): Ua txhua rooj plaub txuam nrog kev nres ntawm thawj.\n  - Debug (BOL): Luam tawm cov ntaub ntawv twg thiab ua dab tsi.\n  - Async_mode (BOOL): Yuav tsum tsis txhob dhau ib tug manually ntawm no (ib txwm tau yuam kom muaj tseeb).\nPiv txwv li: AsyncsWitch ('Nyob zoo', Match_All = Tseeb, debug = muaj tseeb) (...)",
  "file_not_found": "Cov ntaub ntawv tsis pom: {file_path}",
  "encoding_error": "Cov ntaub ntawv encoding yuam kev (tsis UTF-8)",
  "syntax_error": "Syntax yuam kev: {msg}",
  "undefined_name": "Undefined lub npe: '{lub npe}'",
  "syntax_check_title": "Syntax xyuas",
  "no_errors_found": "Tsis muaj qhov yuam kev uas pom!",
  "errors_found": "Pom {suav} ua yuam kev (s) hauv {file_path}:",
  "error_line": "Kab {kab}: {lus}",
  "error_context": "Cov ntsiab lus: {ntsiab lus}",
  "syntax_errors_title": "Syntax yuam kev",
  "multiple_errors": "Pom ntau qhov yuam kev",
  "error_types_found": "Yuam Kev Nrhiav: {hom}",
  "multiple_errors_title": "Pom ntau hom kev tsis raug",
  "syntax_analysis": "Syntax Kev Ntsuam Xyuas",
  "semantic_analysis": "Kev Ntsuam Xyuas Xibfwb",
  "provide_file_path": "Thov muab cov ntaub ntawv qhia cov ntaub ntawv mus kuaj",
  "file_search_title": "Kev Tshawb Nrhiav Kev Ua Ntawv",
  "searching_from": "Tshawb ntawm",
  "files_found": "Cov ntaub ntawv pom",
  "file_not_found_explicit": "Cov ntaub ntawv '{npe}. {Ext}' 'tsis pom nyob rau hauv' {kab} '",
  "file_not_found_any": "Tsis muaj cov ntaub ntawv npe hu ua '{lub npe}' pom nyob rau hauv '{kab}'",
  "file_ambiguous": "Ntau cov ntaub ntawv npe hu ua '{lub npe}' pom: {hom}. Qhia kom meej hom lossis siv strict = cuav.",
  "unsupported_file_type": "Cov ntaub ntawv tsis txhawb nqa hom: {ext}",
  "t": "Rov qab cov ntawv sau hauv zos rau tus yuam sij raws li cov lus xaiv.",
  "show_gui_popup_description": "Qhia txog lub popup qhov rai nrog cov ntawv sau cov ntsiab lus thiab kev pom zoo.\nNoj tes ob leeg thiab jupyter phau ntawv sau tseg.\n\nNta:\n- Luam tawm / Tseg Ua Haujlwm hloov raws li cov tab\n- Tus duab kom zoo tuav hauv Jupyter\n- ntxuav lub qhov rai kom huv\n\nArgs:\n    Npe (str): Qhov rai npe\n    Cov ntsiab lus (str): Cov ntsiab lus cov ntsiab lus los tso saib\n    Daim duab (latplotlib.figure.figure, yeem): ua ntej tsim daim duab\n    Plot_function (Hu tau, yeem): Muaj nuj nqi uas tsim ib daim duab\n    Plot_args (Dict, Yeem):: Sib cav rau cov plat_function",
  "warning": "Lus ceeb toom",
  "translations_not_found_warning": "txhais lus .json tsis pom",
  "load_user_translations_error": "Tsis tuaj yeem thauj tus neeg siv lang.json: {yuam kev}",
  "missing_translation_key": "ploj lawm: {yawm}",
  "semantic_analysis_failed": "Kev Tshawb Fawb Kev Tshawb Fawb Ua Tsis tiav: {msg}",
  "redundant_true": "Kev sib piv tsis zoo nrog qhov tseeb, siv tus nqi ncaj qha",
  "redundant_false": "Kev sib piv rov ua nrog tsis muaj tseeb, siv 'tsis yog' hloov",
  "none_comparison": "Kev sib piv nrog tsis muaj leej twg yuav tsum siv 'yog' hloov ntawm '=='",
  "not_true_recommendation": "Siv '! = Muaj tseeb' tsis pom zoo, xav kom yooj yim tus mob",
  "not_false_recommendation": "Siv '! = Cuav' tsis pom zoo, xav txog kev siv tus mob",
  "function": "rooj mov",
  "class": "hom",
  "help_usage": "Siv Kev Pab ('Function_name') kom paub cov ntsiab lus txog kev ua haujlwm tshwj xeeb",
  "help_error": "Yuam Kev: Ua Haujlwm '{}' tsis muaj nyob lossis tsis muaj ntaub ntawv",
  "save": "Cawm",
  "content": "Zoo siab",
  "preview": "Saib ua ntej",
  "light_theme": "Lub Teeb Lub Ntsiab",
  "dark_theme": "Tsaus ntsiab lus",
  "settings": "Chaw teeb tsa",
  "error_in_gui": "Yuam kev hauv GUI",
  "example": "Tus yam ntxwv",
  "preview_error": "Saib ua ntej yuam kev",
  "help_available_functions": "Muaj cov haujlwm muaj:",
  "function_preview_title": "Saib ua ntej {muaj nuj nqi}",
  "non_graph_preview_available": "Tsis-graphical saib ua ntej muaj",
  "preview_error_message": "Yuam kev hauv kev saib ua ntej:\n{yuam kev}",
  "async_preview_not_available": "Raws li tus qauv tsis tuaj yeem pom hauv Sync saib ua ntej.\nSiv 'tos li asyncswitch (...)' nyob rau ib puag ncig async.",
  "switch_preview_positive": "Zoo (Hloov Piv Txwv)",
  "switch_preview_zero": "Xoom (hloov piv txwv)",
  "scatter_description": "Tsim cov phiaj xwm scatter kom pom kev sib raug zoo ntawm ob txuas txuas ntxiv.",
  "lineplot_description": "Tsim ib txoj kab ib lub siab zoo tagnrho rau lub sijhawm series lossis xaj cov ntaub ntawv ntawm cov ntaub ntawv.",
  "kdeplot_description": "Tsim ib qho histedhed histogram siv kernel ntom kwv yees.",
  "violinplot_description": "Qhia cov kev faib cov ntaub ntawv ntau thoob plaws ntau pawg.",
  "pairplot_description": "Tsim cov kev sib raug zoo txuas rau hauv cov dataset qhia ob qho kev sib koom tes thiab kev faib tawm marginal.",
  "countplot_description": "Ib txoj kab kev ua yeeb yam uas qhia tau cov zaus ntawm cov ntaub ntawv ntawm cov ntaub ntawv.",
  "lmplot_description": "Cov ntaub ntawv thaj chaw thiab ib tus qauv regression liness haum nrog kev ntseeg siab sib nrug.",
  "jointplot_description": "Ua ke sib xyaw ua ke cov phiaj xwm nrog cov histograms lossis kde cov av rau ntawm cov npoo.",
  "swarmplot_description": "Qhia tag nrho cov kev soj ntsuam nrog rau sawv cev ntawm qhov kev faib tawm hauv qab.",
  "regplot_description": "Cov ntaub ntawv thaj chaw thiab ib tus qauv regression haum nrog xaiv polynomial txiav txim.",
  "barplot_description": "Qhia tau tias muaj kev kwv yees thiab kev ntseeg siab ua ke ua cov kab sib dhos.",
  "stripplot_description": "Ib qho scatter cov ntsiab lus uas ib qho sib txawv yog categorical nrog jitter kom tsis txhob sib tshooj.",
  "large_plot_note": "NCO TSEG: Cov phiaj xwm no yuav siv sijhawm ib pliag kom tau muab vim nws loj",
  "preview_not_available": "Kev sib tham sib tham tsis muaj rau cov haujlwm no",
  "description": "kev piav txog",
  "get_moda_description": "Xam cov hom (feem ntau muaj nuj nqis) ntawm cov dataset. Tuaj yeem xa tus nqi nrog nws cov zaus suav.",
  "get_media_description": "Xam qhov kev txiav txim siab arithmetic (nruab nrab) ntawm cov dataset. Feem ntau cov nan muaj nuj nqis xaiv.",
  "get_median_description": "Xam cov nruab nrab (tus nqi nruab nrab) ntawm cov dataset. Feem ntau cov nan muaj nuj nqis xaiv.",
  "get_rank_description": "Xam cov ntau yam (sib txawv ntawm max thiab min) ntawm ib kem dataframe.",
  "get_var_description": "Xam qhov sib txawv ntawm cov ntawv dataframe.",
  "get_desv_description": "Xam tus qauv sib txawv ntawm cov ntawv dataframe.",
  "disp_description": "Rov qab cov kev ntsuas tsis dhau (ntau, kev txawv txav, qauv sib txawv) rau cov datafrrame kem.",
  "call_description": "Tshawb nrhiav thiab nyeem cov ntaub ntawv ntawm cov ntawv sib txawv (CSV, JSON, XML) nrog kev xaiv kev tshawb nrhiav.",
  "check_syntax_description": "Analyzes Python code for syntax errors, undefined names, and style issues.",
  "createDB_description": "Factory function to create a database connection instance.",
  "exportData_description": "Exports data from database tables to various formats (CSV, JSON, XML, SQL, Excel, etc.).",
  "addTable_description": "Adds a new table to the database with specified columns and constraints.",
  "mergeTable_description": "Merges multiple tables using SQL logic with different join types.",
  "join_description": "Performs SQL joins between tables with various join types.",
  "drop_description": "Drops tables from the database, optionally with cascade.",
  "cascadeDelete_description": "Performs cascade deletion based on a condition, handling dependencies.",
  "recursiveQuery_description": "Executes recursive queries using Common Table Expressions (CTE).",
  "windowFunction_description": "Applies window functions (ROW_NUMBER, RANK, etc.) to table data.",
  "executeRawSQL_description": "Executes raw SQL queries directly on the database.",
  "show_description": "Displays database tables and data in a graphical interface.",
  "hbar_description": "Creates a horizontal bar chart with customizable labels and colors.",
  "vbar_description": "Creates a vertical bar chart with customizable labels and colors.",
  "pie_description": "Creates a pie chart with customizable labels, colors, and percentage formatting.",
  "boxplot_description": "Creates a box plot to visualize distribution of data across categories.",
  "histo_description": "Creates a histogram to visualize distribution of a numeric variable.",
  "heatmap_description": "Creates a heatmap to visualize matrix-like data with color coding.",
  "table_description": "Creates a table visualization from data arrays or DataFrames.",
  "normalize_description": "Normalizes an array between 0 and 1 using min-max scaling.",
  "conditional_description": "Applies logical conditions to generate a new column in a DataFrame.",
  "convert_file_description": "Converts files between different formats (SHP, DBF, XML, etc.) to CSV.",
  "Switch_description": "Synchronous switch implementation with multiple pattern matching formats.",
  "switch_description": "Wrapper function for natural syntax usage of the synchronous switch.",
  "AsyncSwitch_description": "Asynchronous switch implementation with multiple pattern matching formats.",
  "async_switch_description": "Wrapper function for natural syntax usage of the asynchronous switch.",
  "config_description": "Global configuration dictionary for module settings.",
  "fig_to_img_description": "Converts a matplotlib figure to an image array for use in other visualizations.",
  "format_number_description": "Formats numbers with customizable decimal places and percentage formatting.",
  "load_user_translations_description": "Loads user-defined translation files to extend or override default translations.",
  "register_description": "Decorator to register functions or classes in the global REGISTRY.",
  "set_language_description": "Sets the current language for translations.",
  "t_description": "Translation function that returns the translated string for a given key in the current language."
}