{
  "ERROR_EMPTY_DATA": "错误：提供的空数据",
  "ERROR_COLUMN_NOT_FOUND": "错误：dataframe中未找到列'{}'",
  "ERROR_PLOT_GENERATION": "产生错误图：{}",
  "ERROR_INVALID_DATA": "错误：提供的数据无效",
  "ERROR_MODA": "错误计算模式",
  "ERROR_MEDIA": "错误计算平均值",
  "ERROR_MEDIANA": "错误计算中值",
  "ERROR_RANGO": "错误计算范围",
  "ERROR_VARIANZA": "错误计算方差",
  "ERROR_DESVIACION": "错误计算标准偏差",
  "ERROR_DISPERSION": "计算分散措施的错误",
  "ERROR_COLUMNA_NO_EXISTE": "列'{}'在数据框中不存在",
  "error_type": "输入必须是类型字符串。",
  "not_found": "找不到名为“ {name}”的函数。",
  "title_all": "助手文档",
  "title_not_found": "找不到功能",
  "copy": "复制到剪贴板",
  "close": "关闭",
  "call": "呼叫（名称，type = none，path = none，timeout = 5，strict = true）\n在给定文件夹（或从CWD）中循环向下，然后向上搜索逐个名称（和可选的类型）\n并根据自动的类型加载它。\n\n参数：\n    名称（str）：文件的基本名称，无扩展。\n    类型（str，可选）：预期扩展（'csv'，'json'，'xml'）。\n    路径（str，可选）：搜索的初始路径。\n    超时（INT，可选）：以秒为单位的最大搜索时间。\n    严格（bool，可选）：如果找到具有相同名称的多个文件，则会引起错误。\n\n返回：发现文件的内容或无。",
  "load_user_translations": "load_user_translations（lang_path =“ lang.json”）\n从JSON文件加载用户定义的翻译，并将其与默认翻译合并。\n\n参数：\n    lang_path（str，可选）：用户翻译文件的路径。默认为“ lang.json”。\n\n行为：\n     - 如果文件存在并且有效JSON，则将其内容与默认翻译合并\n     - 如果文件不存在，则仅保留默认翻译\n     - 如果文件存在但无法加载，请显示警告弹出窗口\n     - 更新全局_ translations字典\n\n注意：在使用t（）函数以进行用户翻译生效之前，必须调用此功能。",
  "switch": "Python的增强开关案例系统。支持：\n - 每个情况多个匹配键\n - 按值，类型，正则lambda功能或类匹配\n - 熊猫和数量数据结构支持\n - 可选的异步执行案例\n - 执行多个匹配案例的匹配模式\n - 调试模式进行日志匹配案例",
  "async_switch": "包装器以异步模式实例化开关。参数：\n - 值：与定义的情况匹配的值。\n -  ** Kwargs：可选的关键字参数直接传递给开关类。这些可以包括：\n  -match_all（bool）：执行所有匹配案例，而不是在第一个匹配案例中停止。\n   - 调试（布尔）：打印匹配的情况和执行的情况。\n   -  async_mode（bool）：不应在此处手动传递（始终被迫为true）。\n示例：asyncswitch（'Hello'，match_all = true，debug = true）（...）",
  "file_not_found": "未找到文件：{file_path}",
  "encoding_error": "文件编码错误（不是UTF-8）",
  "syntax_error": "语法错误：{msg}",
  "undefined_name": "未定义的名称：'{name}'",
  "syntax_check_title": "语法检查",
  "no_errors_found": "找不到语法错误！",
  "errors_found": "在{file_path}中找到{count} error（s）：",
  "error_line": "行{line}：{messages}",
  "error_context": "上下文：{context}",
  "syntax_errors_title": "语法错误",
  "multiple_errors": "找到了多个错误",
  "error_types_found": "找到错误类型：{type}",
  "multiple_errors_title": "找到了多种类型的错误",
  "syntax_analysis": "语法分析",
  "semantic_analysis": "语义分析",
  "provide_file_path": "请提供检查路径以进行检查",
  "file_search_title": "文件搜索",
  "searching_from": "搜索",
  "files_found": "找到的文件",
  "file_not_found_explicit": "文件'{name}。{ext}'在'{path}'中找不到",
  "file_not_found_any": "在'{path}'中找到的没有名为'{name}'的文件",
  "file_ambiguous": "多个名为'{name}'的文件找到：{type}。指定类型或使用strict = false。",
  "unsupported_file_type": "不支持的文件类型：{ext}",
  "t": "根据所选语言返回给定键的本地化文本。",
  "show_gui_popup_description": "显示带有文本内容和可选可视化的弹出窗口。\n处理CLI和Jupyter笔记本电脑环境。\n\n特征：\n - 复制/保存基于活动选项卡的功能更改\n -  jupyter中正确的数字处理\n - 清洁窗户终止\n\nargs：\n    标题（str）：窗口标题\n    内容（str）：要显示的文本内容\n    图（matplotlib.figure.figure，可选）：预先创建的图\n    plot_function（可呼叫，可选）：生成图形的函数\n    plot_args（dict，可选）：plot_function的参数",
  "warning": "警告",
  "translations_not_found_warning": "translations.json找不到",
  "load_user_translations_error": "无法加载用户lang.json：{error}",
  "missing_translation_key": "缺少：{key}",
  "semantic_analysis_failed": "语义分析失败：{msg}",
  "redundant_true": "与True的冗余比较，直接使用该值",
  "redundant_false": "与false的多余比较，而不是“不使用”",
  "none_comparison": "与无用的比较应该使用“ IS”而不是'=='",
  "not_true_recommendation": "不建议使用'！= true'，请考虑简化条件",
  "not_false_recommendation": "不建议使用'！= false'，请考虑使用正条件",
  "function": "功能",
  "class": "班级",
  "help_usage": "使用帮助（'function_name'）有关特定功能的详细信息",
  "help_error": "错误：函数'{}'不存在或没有文档",
  "save": "节省",
  "content": "内容",
  "preview": "预览",
  "light_theme": "光主题",
  "dark_theme": "黑暗主题",
  "settings": "设置",
  "error_in_gui": "GUI错误",
  "example": "例子",
  "preview_error": "预览错误",
  "help_available_functions": "可用功能：",
  "function_preview_title": "{函数}的预览",
  "non_graph_preview_available": "可用的非图形预览",
  "preview_error_message": "预览错误：\n{错误}",
  "async_preview_not_available": "异步示例无法在同步预览中显示。\n在异步环境中使用“等待异步（...）”。",
  "switch_preview_positive": "正（开关示例）",
  "switch_preview_zero": "零（开关示例）",
  "scatter_description": "创建一个散点图，以可视化两个连续变量之间的关系。",
  "lineplot_description": "为时间序列或有序的分类数据创建线路图理想。",
  "kdeplot_description": "使用内核密度估计创建平滑的直方图。",
  "violinplot_description": "显示了几个类别的定量数据的分布。",
  "pairplot_description": "在显示关节和边际分布的数据集中创建成对关系。",
  "countplot_description": "一个显示分类数据频率的条图。",
  "lmplot_description": "绘制数据和线性回归模型拟合置信区间。",
  "jointplot_description": "将散点图与边缘上的直方图或KDE图相结合。",
  "swarmplot_description": "显示所有观察结果以及基础分布的表示。",
  "regplot_description": "绘制数据和带有可选多项式顺序的回归模型。",
  "barplot_description": "将点估计和置信区间显示为矩形条。",
  "stripplot_description": "一个散点图，其中一个变量与抖动分类以避免重叠。",
  "large_plot_note": "注意：由于其大小，此图可能需要片刻才能渲染",
  "preview_not_available": "互动预览无法用于此功能",
  "description": "描述",
  "get_moda_description": "计算数据集的模式（最常见值）。可以用其频率计数返回该值。",
  "get_media_description": "计算数据集的算术平均值（平均）。可选地处理NAN值。",
  "get_median_description": "计算数据集的中值（中值）。可选地处理NAN值。",
  "get_rank_description": "计算数据框列的范围（最大和最小之间的差异）。",
  "get_var_description": "计算数据框列的方差。",
  "get_desv_description": "计算数据框列的标准偏差。",
  "disp_description": "返回数据帧列的分散度量（范围，方差，标准偏差）。",
  "call_description": "使用灵活的搜索选项搜索并读取不同格式（CSV，JSON，XML）的文件。",
  "check_syntax_description": "分析Python代码的语法错误，未定义的名称和样式问题。",
  "createDB_description": "工厂功能以创建数据库连接实例。",
  "exportData_description": "将数据从数据库表导出到各种格式（CSV，JSON，XML，SQL，Excel等）。",
  "addTable_description": "用指定的列和约束向数据库中添加一个新表。",
  "mergeTable_description": "使用SQL Logic与不同的联接类型合并多个表。",
  "join_description": "具有各种连接类型的表之间的SQL联接。",
  "drop_description": "可选地从数据库中删除表格。",
  "cascadeDelete_description": "根据条件，处理依赖项执行级联删除。",
  "recursiveQuery_description": "使用通用表表达式（CTE）执行递归查询。",
  "windowFunction_description": "将窗口函数（row_number，等级等）应用于表数据。",
  "executeRawSQL_description": "直接在数据库上执行RAW SQL查询。",
  "show_description": "在图形接口中显示数据库表和数据。",
  "hbar_description": "创建具有可自定义标签和颜色的水平条形图。",
  "vbar_description": "创建具有可自定义标签和颜色的垂直条形图。",
  "pie_description": "创建具有可自定义标签，颜色和百分比格式的饼图。",
  "boxplot_description": "创建一个框图来可视化跨类别的数据分布。",
  "histo_description": "创建直方图可视化数字变量的分布。",
  "heatmap_description": "创建一个热图以可视化使用颜色编码的矩阵状数据。",
  "table_description": "从数据阵列或数据范围内创建表可视化。",
  "normalize_description": "使用Min-Max缩放将0到1之间的数组归一化。",
  "conditional_description": "应用逻辑条件来生成数据框中的新列。",
  "convert_file_description": "将文件在不同格式（SHP，DBF，XML等）之间转换为CSV。",
  "Switch_description": "具有多种模式匹配格式的同步开关实现。",
  "switch_description": "自然语法使用同步开关的包装函数。",
  "AsyncSwitch_description": "具有多种模式匹配格式的异步开关实现。",
  "async_switch_description": "异步开关的自然语法使用的包装函数。",
  "config_description": "模块设置的全局配置字典。",
  "fig_to_img_description": "将matplotlib的图形转换为图像阵列，以用于其他可视化。",
  "format_number_description": "具有可自定义小数位置和百分比格式的格式数字。",
  "load_user_translations_description": "加载用户定义的翻译文件以扩展或覆盖默认翻译。",
  "register_description": "在全球注册表中注册功能或课程的装饰器。",
  "set_language_description": "设置当前的翻译语言。",
  "t_description": "翻译功能，该功能返回当前语言中给定键的翻译字符串。"
}