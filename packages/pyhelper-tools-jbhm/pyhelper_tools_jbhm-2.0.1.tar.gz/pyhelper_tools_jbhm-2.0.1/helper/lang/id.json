{
  "ERROR_EMPTY_DATA": "Kesalahan: Data kosong disediakan",
  "ERROR_COLUMN_NOT_FOUND": "Kesalahan: kolom '{}' tidak ditemukan di DataFrame",
  "ERROR_PLOT_GENERATION": "Kesalahan menghasilkan plot: {}",
  "ERROR_INVALID_DATA": "Kesalahan: Data tidak valid disediakan",
  "ERROR_MODA": "Mode penghitungan kesalahan",
  "ERROR_MEDIA": "Kesalahan menghitung rata -rata",
  "ERROR_MEDIANA": "Kesalahan menghitung median",
  "ERROR_RANGO": "Rentang penghitungan kesalahan",
  "ERROR_VARIANZA": "Kesalahan menghitung varian",
  "ERROR_DESVIACION": "Kesalahan menghitung standar deviasi",
  "ERROR_DISPERSION": "Kesalahan menghitung langkah -langkah dispersi",
  "ERROR_COLUMNA_NO_EXISTE": "Kolom '{}' tidak ada di DataFrame",
  "error_type": "Input harus dari string tipe.",
  "not_found": "Tidak ada fungsi bernama \"{name}\" ditemukan. \\ N \\ opsi yang dapat dinavailable adalah: \\ n \\ n {options}",
  "title_all": "Dokumentasi Pembantu",
  "title_not_found": "Fungsi tidak ditemukan",
  "copy": "Salin ke clipboard",
  "close": "Menutup",
  "call": "Panggilan (nama, type = tidak ada, path = tidak ada, timeout = 5, strict = true)\nMencari file dengan nama (dan secara opsional mengetik) di folder yang diberikan (atau dari CWD) secara rekursif ke bawah dan kemudian ke atas,\ndan memuatnya tergantung pada jenisnya secara otomatis.\n\nParameter:\n    Nama (str): Nama dasar file, tanpa ekstensi.\n    Tipe (str, opsional): Ekstensi yang diharapkan ('CSV', 'JSON', 'XML').\n    Path (str, opsional): Jalur awal untuk mencari dari.\n    Timeout (int, opsional): Waktu pencarian maksimum dalam detik.\n    ketat (bool, opsional): Jika benar, meningkatkan kesalahan jika beberapa file dengan nama yang sama ditemukan.\n\nPengembalian: Konten file yang ditemukan atau tidak sama sekali.",
  "load_user_translations": "load_user_translations (lang_path = \"lang.json\")\nMemuat terjemahan yang ditentukan pengguna dari file JSON dan menggabungkannya dengan terjemahan default.\n\nParameter:\n    lang_path (str, opsional): jalur ke file terjemahan pengguna. Default ke \"lang.json\".\n\nPerilaku:\n    - Jika file ada dan valid JSON, gabungkan isinya dengan terjemahan default\n    - Jika file tidak ada, hanya menyimpan terjemahan default\n    - Menampilkan popup peringatan jika ada file tetapi tidak dapat dimuat\n    - memperbarui kamus _translasi global\n\nCatatan: Fungsi ini harus dipanggil sebelum menggunakan fungsi T () agar terjemahan pengguna berlaku.",
  "switch": "Sistem sakelar sakelar yang ditingkatkan untuk python. Dukungan:\n- Beberapa kunci pencocokan per kasus\n- Cocokkan dengan nilai, ketik, regex, fungsi lambda, atau kelas\n- PANDAS DAN NUMPY DATA STRUKTUR DUKUNGAN\n- Eksekusi kasus async opsional\n- Mode pencocokan-semua untuk mengeksekusi beberapa kasus pencocokan\n- Mode debug untuk mencatat kasus pencocokan",
  "async_switch": "Pembungkus untuk membuat sakelar instantiate dalam mode async. Parameter:\n- Nilai: Nilai yang cocok dengan kasus yang ditentukan.\n- ** KWARGS: Argumen kata kunci opsional diteruskan langsung ke kelas sakelar. Ini bisa termasuk:\n  - Match_all (bool): Jalankan semua casing yang cocok alih -alih berhenti di yang pertama.\n  - Debug (BOOL): Cetak kasing mana yang cocok dan apa yang dieksekusi.\n  - async_mode (bool): Tidak boleh diteruskan secara manual di sini (selalu dipaksa untuk benar).\nContoh: asyncswitch ('halo', match_all = true, debug = true) (...)",
  "file_not_found": "File tidak ditemukan: {file_path}",
  "encoding_error": "Kesalahan pengkodean file (bukan UTF-8)",
  "syntax_error": "Kesalahan sintaks: {msg}",
  "undefined_name": "Nama Tidak Ditentukan: '{Name}'",
  "syntax_check_title": "Pemeriksaan sintaksis",
  "no_errors_found": "Tidak ada kesalahan sintaks yang ditemukan!",
  "errors_found": "Ditemukan {count} error (s) di {file_path}:",
  "error_line": "Baris {line}: {pesan}",
  "error_context": "Konteks: {konteks}",
  "syntax_errors_title": "Kesalahan sintaksis",
  "multiple_errors": "Menemukan beberapa kesalahan",
  "error_types_found": "Jenis kesalahan yang ditemukan: {type}",
  "multiple_errors_title": "Menemukan beberapa jenis kesalahan",
  "syntax_analysis": "Analisis Sintaks",
  "semantic_analysis": "Analisis semantik",
  "provide_file_path": "Harap berikan jalur file untuk memeriksa",
  "file_search_title": "Pencarian file",
  "searching_from": "Mencari dari",
  "files_found": "File ditemukan",
  "file_not_found_explicit": "File '{name}. {Ext}' tidak ditemukan di '{path}'",
  "file_not_found_any": "Tidak ada file bernama '{name}' ditemukan di '{path}'",
  "file_ambiguous": "Beberapa file bernama '{name}' ditemukan: {type}. Tentukan tipe atau gunakan strict = false.",
  "unsupported_file_type": "Jenis file yang tidak didukung: {ext}",
  "t": "Mengembalikan teks terlokalisasi untuk kunci yang diberikan berdasarkan bahasa yang dipilih.",
  "show_gui_popup_description": "Menampilkan jendela popup dengan konten teks dan visualisasi opsional.\nMenangani lingkungan notebook CLI dan Jupyter.\n\nFitur:\n- Salin/Simpan Perubahan Fungsionalitas Berdasarkan Tab Aktif\n- Penanganan sosok yang tepat di Jupyter\n- Pengakhiran Jendela Bersih\n\nArgs:\n    Judul (Str): Judul Jendela\n    konten (str): konten teks yang akan ditampilkan\n    Gbr (Matplotlib.Figure.Figure, Opsional): Gambar yang telah dibuat sebelumnya\n    Plot_function (dapat dipanggil, opsional): Fungsi yang menghasilkan angka\n    PLOT_ARGS (Dikt, Opsional): Argumen untuk Plot_Function",
  "warning": "Peringatan",
  "translations_not_found_warning": "translations.json tidak ditemukan",
  "load_user_translations_error": "Tidak dapat memuat pengguna lang.json: {error}",
  "missing_translation_key": "missing: {key}",
  "semantic_analysis_failed": "Semantic analysis failed: {msg}",
  "redundant_true": "Redundant comparison with True, use the value directly",
  "redundant_false": "Redundant comparison with False, use 'not' instead",
  "none_comparison": "Comparison with None should use 'is' instead of '=='",
  "not_true_recommendation": "Using '!= True' is not recommended, consider simplifying the condition",
  "not_false_recommendation": "Using '!= False' is not recommended, consider using a positive condition",
  "function": "function",
  "class": "class",
  "help_usage": "Use help('function_name') for details about a specific function",
  "help_error": "Error: Function '{}' does not exist or has no documentation",
  "save": "Save",
  "content": "Content",
  "preview": "Preview",
  "light_theme": "Light Theme",
  "dark_theme": "Dark Theme",
  "settings": "Settings",
  "error_in_gui": "Error in GUI",
  "example": "Example",
  "preview_error": "Preview Error",
  "help_available_functions": "Available functions:",
  "function_preview_title": "Preview of {function}",
  "non_graph_preview_available": "Non-graphical preview available",
  "preview_error_message": "Error in preview:\n{error}",
  "async_preview_not_available": "Async example cannot be shown in sync preview.\nUse 'await AsyncSwitch(...)' in async environment.",
  "switch_preview_positive": "Positive (Switch example)",
  "switch_preview_zero": "Zero (Switch example)",
  "scatter_description": "Creates a scatter plot to visualize the relationship between two continuous variables.",
  "lineplot_description": "Creates a line plot ideal for time series or ordered categorical data.",
  "kdeplot_description": "Creates a smoothed histogram using kernel density estimation.",
  "violinplot_description": "Shows the distribution of quantitative data across several categories.",
  "pairplot_description": "Creates pairwise relationships in a dataset showing both joint and marginal distributions.",
  "countplot_description": "A bar plot that shows the frequency of categorical data.",
  "lmplot_description": "Plots data and a linear regression model fit with confidence intervals.",
  "jointplot_description": "Combines scatter plot with histograms or KDE plots on the margins.",
  "swarmplot_description": "Shows all observations along with representation of the underlying distribution.",
  "regplot_description": "Plots data and a regression model fit with optional polynomial order.",
  "barplot_description": "Shows point estimates and confidence intervals as rectangular bars.",
  "stripplot_description": "A scatter plot where one variable is categorical with jitter to avoid overlap.",
  "large_plot_note": "Note: This plot may take a moment to render due to its size",
  "preview_not_available": "Interactive preview not available for this function",
  "description": "description",
  "get_moda_description": "Calculates the mode (most frequent value) of a dataset. Can return the value with its frequency count.",
  "get_media_description": "Calculates the arithmetic mean (average) of a dataset. Handles NaN values optionally.",
  "get_median_description": "Calculates the median (middle value) of a dataset. Handles NaN values optionally.",
  "get_rank_description": "Calculates the range (difference between max and min) of a DataFrame column.",
  "get_var_description": "Calculates the variance of a DataFrame column.",
  "get_desv_description": "Calculates the standard deviation of a DataFrame column.",
  "disp_description": "Returns dispersion measures (range, variance, standard deviation) for a DataFrame column.",
  "call_description": "Searches for and reads files of different formats (CSV, JSON, XML) with flexible search options.",
  "check_syntax_description": "Analyzes Python code for syntax errors, undefined names, and style issues.",
  "createDB_description": "Factory function to create a database connection instance.",
  "exportData_description": "Exports data from database tables to various formats (CSV, JSON, XML, SQL, Excel, etc.).",
  "addTable_description": "Adds a new table to the database with specified columns and constraints.",
  "mergeTable_description": "Merges multiple tables using SQL logic with different join types.",
  "join_description": "Performs SQL joins between tables with various join types.",
  "drop_description": "Drops tables from the database, optionally with cascade.",
  "cascadeDelete_description": "Performs cascade deletion based on a condition, handling dependencies.",
  "recursiveQuery_description": "Executes recursive queries using Common Table Expressions (CTE).",
  "windowFunction_description": "Applies window functions (ROW_NUMBER, RANK, etc.) to table data.",
  "executeRawSQL_description": "Executes raw SQL queries directly on the database.",
  "show_description": "Displays database tables and data in a graphical interface.",
  "hbar_description": "Creates a horizontal bar chart with customizable labels and colors.",
  "vbar_description": "Creates a vertical bar chart with customizable labels and colors.",
  "pie_description": "Creates a pie chart with customizable labels, colors, and percentage formatting.",
  "boxplot_description": "Creates a box plot to visualize distribution of data across categories.",
  "histo_description": "Creates a histogram to visualize distribution of a numeric variable.",
  "heatmap_description": "Creates a heatmap to visualize matrix-like data with color coding.",
  "table_description": "Creates a table visualization from data arrays or DataFrames.",
  "normalize_description": "Normalizes an array between 0 and 1 using min-max scaling.",
  "conditional_description": "Applies logical conditions to generate a new column in a DataFrame.",
  "convert_file_description": "Converts files between different formats (SHP, DBF, XML, etc.) to CSV.",
  "Switch_description": "Synchronous switch implementation with multiple pattern matching formats.",
  "switch_description": "Wrapper function for natural syntax usage of the synchronous switch.",
  "AsyncSwitch_description": "Asynchronous switch implementation with multiple pattern matching formats.",
  "async_switch_description": "Wrapper function for natural syntax usage of the asynchronous switch.",
  "config_description": "Global configuration dictionary for module settings.",
  "fig_to_img_description": "Converts a matplotlib figure to an image array for use in other visualizations.",
  "format_number_description": "Formats numbers with customizable decimal places and percentage formatting.",
  "load_user_translations_description": "Loads user-defined translation files to extend or override default translations.",
  "register_description": "Decorator to register functions or classes in the global REGISTRY.",
  "set_language_description": "Sets the current language for translations.",
  "t_description": "Translation function that returns the translated string for a given key in the current language."
}