{
  "ERROR_EMPTY_DATA": "Erro: datos baleiros proporcionados",
  "ERROR_COLUMN_NOT_FOUND": "Erro: columna '{}' non atopada en DataFrame",
  "ERROR_PLOT_GENERATION": "Erro ao xerar trama: {}",
  "ERROR_INVALID_DATA": "Erro: datos non válidos proporcionados",
  "ERROR_MODA": "Modo de cálculo de erros",
  "ERROR_MEDIA": "Erro calculando a media",
  "ERROR_MEDIANA": "Erro calculando a mediana",
  "ERROR_RANGO": "Erro de cálculo do rango",
  "ERROR_VARIANZA": "Erro calculando a varianza",
  "ERROR_DESVIACION": "Erro calculando a desviación estándar",
  "ERROR_DISPERSION": "Erro calculando as medidas de dispersión",
  "ERROR_COLUMNA_NO_EXISTE": "A columna '{}' non existe no DataFrame",
  "error_type": "A entrada debe ser de cadea de tipo.",
  "not_found": "Non hai ningunha función chamada \"{nome}\" atopada. \\ N \\ opcións navailables son: \\ n \\ n {opcións}",
  "title_all": "Documentación auxiliar",
  "title_not_found": "Función non atopada",
  "copy": "Copia no portapapeis",
  "close": "Pechar",
  "call": "Chama (nome, type = ningún, path = ningún, tempo de espera = 5, estrito = verdadeiro)\nBusca un ficheiro por nome (e opcionalmente tipo) nun cartafol dado (ou desde CWD) recursivamente cara a abaixo e logo cara arriba,\ne cargalo segundo o seu tipo automaticamente.\n\nParámetros:\n    Nome (STR): nome base do ficheiro, sen extensión.\n    TIPO (STR, opcional): extensión esperada ('CSV', 'JSON', 'XML').\n    PATH (STR, opcional): ruta inicial para buscar.\n    Timeout (int, opcional): tempo máximo de busca en segundos.\n    Strict (bool, opcional): se é certo, aumenta o erro se se atopan varios ficheiros co mesmo nome.\n\nDevolve: o contido do ficheiro atopado ou ningún.",
  "load_user_translations": "Load_user_translations (lang_path = \"lang.json\")\nCarga traducións definidas polo usuario dun ficheiro JSON e fusionan coas traducións predeterminadas.\n\nParámetros:\n    lang_path (str, opcional): ruta ao ficheiro de traducións de usuario. Os valores predeterminados a \"Lang.json\".\n\nComportamento:\n    - Se o ficheiro existe e é válido JSON, fusiona o seu contido con traducións predeterminadas\n    - Se o ficheiro non existe, só garda traducións predeterminadas\n    - mostra unha emerxente de aviso se o ficheiro existe pero non se pode cargar\n    - Actualiza o dicionario global de _translacións\n\nNota: Esta función debe ser chamada antes de usar a función t () para que as traducións de usuarios teñan efecto.",
  "switch": "Sistema de conmutador mellorado para Python. Soportes:\n- Múltiples claves de correspondencia por caso\n- coincidir por valor, tipo, regex, función lambda ou clase\n- Soporte de estrutura de datos de Pandas e Numpy\n- Execución opcional de casos async\n- modo de coincidencia para executar múltiples casos de correspondencia\n- Modo de depuración para rexistrar casos de correspondencia",
  "async_switch": "Envoltorio para instantanear o cambio en modo async. Parámetros:\n- Valor: o valor a coincidir cos casos definidos.\n- ** Kwargs: argumentos opcionais de palabras clave pasadas directamente á clase Switch. Estes poden incluír:\n  - Match_all (bool): executar todos os casos de correspondencia en vez de parar ao primeiro.\n  - Debug (Bool): Imprimir que caso coincidiu e o que se executou.\n  - async_mode (bool): non se debe pasar manualmente aquí (sempre forzado a verdade).\nExemplo: asyncswitch ('Ola', match_all = true, debug = true) (...)",
  "file_not_found": "Ficheiro non atopado: {file_path}",
  "encoding_error": "Erro de codificación de ficheiros (non UTF-8)",
  "syntax_error": "Erro de sintaxe: {msg}",
  "undefined_name": "Nome indefinido: '{nome}'",
  "syntax_check_title": "Comprobación de sintaxe",
  "no_errors_found": "Non se atoparon erros de sintaxe.",
  "errors_found": "Atopado {count} erro (s) en {file_path}:",
  "error_line": "Liña {liña}: {mensaxe}",
  "error_context": "Contexto: {contexto}",
  "syntax_errors_title": "Erros de sintaxe",
  "multiple_errors": "Atopou múltiples erros",
  "error_types_found": "Tipos de erro atopados: {tipos}",
  "multiple_errors_title": "Atopou varios tipos de erros",
  "syntax_analysis": "Análise de sintaxe",
  "semantic_analysis": "Análise semántica",
  "provide_file_path": "Proporciona unha ruta de ficheiro para comprobar",
  "file_search_title": "Busca de ficheiros",
  "searching_from": "Buscando desde",
  "files_found": "Arquivos atopados",
  "file_not_found_explicit": "Arquivo '{nome}. {Ext}' non atopado en '{path}'",
  "file_not_found_any": "Ningún ficheiro chamado '{nome}' atopado en '{path}'",
  "file_ambiguous": "Varios ficheiros chamados '{nome}' atopados: {tipos}. Especifique o tipo ou usa rigor = falso.",
  "unsupported_file_type": "Tipo de ficheiro non compatible: {ext}",
  "t": "Devolve o texto localizado para unha clave dada en función do idioma seleccionado.",
  "show_gui_popup_description": "Mostra unha xanela emerxente con contido de texto e visualización opcional.\nManexa ambientes de portátiles CLI e Jupyter.\n\nCaracterísticas:\n- Copia/gardar os cambios de funcionalidade en función da pestana activa\n- Manexo adecuado de figuras en Jupyter\n- Limpar a terminación da xanela\n\nArgs:\n    Título (STR): Título da xanela\n    Contido (STR): contido de texto a mostrar\n    fig (matplotlib.figure.figure, opcional): figura pre-creada\n    plot_function (calable, opcional): función que xera unha figura\n    plot_args (dict, opcional): argumentos para plot_function",
  "warning": "Aviso",
  "translations_not_found_warning": "traducións.json non atopado",
  "load_user_translations_error": "Non se puido cargar o usuario Lang.json: {error}",
  "missing_translation_key": "falta: {clave}",
  "semantic_analysis_failed": "Fallou a análise semántica: {msg}",
  "redundant_true": "Comparación redundante con True, usa o valor directamente",
  "redundant_false": "Comparación redundante con falso, usa \"non\" no seu lugar",
  "none_comparison": "A comparación con ningunha debe usar \"é\" en vez de \"==\"",
  "not_true_recommendation": "Usar '! = True' non se recomenda, considere simplificar a condición",
  "not_false_recommendation": "Usar '! = Falso' non se recomenda, considere usar unha condición positiva",
  "function": "función",
  "class": "clase",
  "help_usage": "Use axuda (\"nome de función\") para obter máis detalles sobre unha función específica",
  "help_error": "Erro: a función '{}' non existe ou non ten documentación",
  "save": "Gardar",
  "content": "Contido",
  "preview": "Vista previa",
  "light_theme": "Tema lixeiro",
  "dark_theme": "Tema escuro",
  "settings": "Configuración",
  "error_in_gui": "Erro na GUI",
  "example": "Exemplo",
  "preview_error": "Erro de vista previa",
  "help_available_functions": "Funcións dispoñibles:",
  "function_preview_title": "Vista previa de {función}",
  "non_graph_preview_available": "Vista previa non gráfica dispoñible",
  "preview_error_message": "Erro na vista previa:\n{Erro}",
  "async_preview_not_available": "O exemplo Async non se pode amosar na vista previa de sincronización.\nUse \"Agardar asyncswitch (...)\" no ambiente async.",
  "switch_preview_positive": "Positivo (exemplo de interruptor)",
  "switch_preview_zero": "Cero (exemplo de interruptor)",
  "scatter_description": "Crea unha trama de dispersión para visualizar a relación entre dúas variables continuas.",
  "lineplot_description": "Crea unha trama de liña ideal para series de tempo ou datos categóricos ordenados.",
  "kdeplot_description": "Crea un histograma suavizado mediante a estimación de densidade do núcleo.",
  "violinplot_description": "Mostra a distribución de datos cuantitativos en varias categorías.",
  "pairplot_description": "Crea relacións por parellas nun conxunto de datos que mostra as distribucións conxuntas e marxinais.",
  "countplot_description": "Unha trama de barras que mostra a frecuencia de datos categóricos.",
  "lmplot_description": "Trama datos e un modelo de regresión lineal en forma con intervalos de confianza.",
  "jointplot_description": "Combina a trama de dispersión con histogramas ou tramas KDE nas marxes.",
  "swarmplot_description": "Mostra todas as observacións xunto coa representación da distribución subxacente.",
  "regplot_description": "Transformación de datos e un modelo de regresión con orde polinómica opcional.",
  "barplot_description": "Mostra estimacións de puntos e intervalos de confianza como barras rectangulares.",
  "stripplot_description": "Unha trama de dispersión onde unha variable é categórica con jitter para evitar o solapamento.",
  "large_plot_note": "Nota: Esta trama pode levar un momento para renderse debido ao seu tamaño",
  "preview_not_available": "Vista previa interactiva non dispoñible para esta función",
  "description": "descrición",
  "get_moda_description": "Calcula o modo (valor máis frecuente) dun conxunto de datos. Pode devolver o valor co seu reconto de frecuencias.",
  "get_media_description": "Calcula a media aritmética (media) dun conxunto de datos. Manexa os valores NAN de xeito opcional.",
  "get_median_description": "Calcula a mediana (valor medio) dun conxunto de datos. Manexa os valores NAN de xeito opcional.",
  "get_rank_description": "Calcula o rango (diferenza entre máximo e min) dunha columna de datos de datos.",
  "get_var_description": "Calcula a varianza dunha columna de DataFrame.",
  "get_desv_description": "Calcula a desviación estándar dunha columna de datos de datos.",
  "disp_description": "Devolve as medidas de dispersión (rango, varianza, desviación estándar) para unha columna de datos de datos.",
  "call_description": "Busca e le ficheiros de diferentes formatos (CSV, JSON, XML) con opcións de busca flexibles.",
  "check_syntax_description": "Analyzes Python code for syntax errors, undefined names, and style issues.",
  "createDB_description": "Factory function to create a database connection instance.",
  "exportData_description": "Exports data from database tables to various formats (CSV, JSON, XML, SQL, Excel, etc.).",
  "addTable_description": "Adds a new table to the database with specified columns and constraints.",
  "mergeTable_description": "Merges multiple tables using SQL logic with different join types.",
  "join_description": "Performs SQL joins between tables with various join types.",
  "drop_description": "Drops tables from the database, optionally with cascade.",
  "cascadeDelete_description": "Performs cascade deletion based on a condition, handling dependencies.",
  "recursiveQuery_description": "Executes recursive queries using Common Table Expressions (CTE).",
  "windowFunction_description": "Applies window functions (ROW_NUMBER, RANK, etc.) to table data.",
  "executeRawSQL_description": "Executes raw SQL queries directly on the database.",
  "show_description": "Displays database tables and data in a graphical interface.",
  "hbar_description": "Creates a horizontal bar chart with customizable labels and colors.",
  "vbar_description": "Creates a vertical bar chart with customizable labels and colors.",
  "pie_description": "Creates a pie chart with customizable labels, colors, and percentage formatting.",
  "boxplot_description": "Creates a box plot to visualize distribution of data across categories.",
  "histo_description": "Creates a histogram to visualize distribution of a numeric variable.",
  "heatmap_description": "Creates a heatmap to visualize matrix-like data with color coding.",
  "table_description": "Creates a table visualization from data arrays or DataFrames.",
  "normalize_description": "Normalizes an array between 0 and 1 using min-max scaling.",
  "conditional_description": "Applies logical conditions to generate a new column in a DataFrame.",
  "convert_file_description": "Converts files between different formats (SHP, DBF, XML, etc.) to CSV.",
  "Switch_description": "Synchronous switch implementation with multiple pattern matching formats.",
  "switch_description": "Wrapper function for natural syntax usage of the synchronous switch.",
  "AsyncSwitch_description": "Asynchronous switch implementation with multiple pattern matching formats.",
  "async_switch_description": "Wrapper function for natural syntax usage of the asynchronous switch.",
  "config_description": "Global configuration dictionary for module settings.",
  "fig_to_img_description": "Converts a matplotlib figure to an image array for use in other visualizations.",
  "format_number_description": "Formats numbers with customizable decimal places and percentage formatting.",
  "load_user_translations_description": "Loads user-defined translation files to extend or override default translations.",
  "register_description": "Decorator to register functions or classes in the global REGISTRY.",
  "set_language_description": "Sets the current language for translations.",
  "t_description": "Translation function that returns the translated string for a given key in the current language."
}