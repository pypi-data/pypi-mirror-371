{
  "ERROR_EMPTY_DATA": "ގޯސް: ހުސް ޑޭޓާ ފޯރުކޮށްދީފި",
  "ERROR_COLUMN_NOT_FOUND": "error: dataFrame އިން ކޮލަމް '{}' ނުފެނެއެވެ .",
  "ERROR_PLOT_GENERATION": "އެރަރ ޖެނެރޭޓް ޕްލޮޓް: {}",
  "ERROR_INVALID_DATA": "އެރަރ: ސައްހަ ނޫން ޑޭޓާ ފޯރުކޮށްދިނުން",
  "ERROR_MODA": "އެރަރ ކެލްކިއުލޭޓިންގ މޯޑް",
  "ERROR_MEDIA": "އެރަރ ކަލަކުލެޓިންގ މީން",
  "ERROR_MEDIANA": "މީޑިއަން ކަނޑައެޅުމުގެ ގޯސް",
  "ERROR_RANGO": "އެރަރ ކަނޑައެޅުން ރޭންޖް",
  "ERROR_VARIANZA": "އެރަރ ވެރިއަންސް ކަނޑައެޅުން",
  "ERROR_DESVIACION": "އެރަރ ސްޓޭންޑަރޑް ޑިވިއޭޝަން ކަނޑައެޅުން",
  "ERROR_DISPERSION": "ޑިސްޕަރޝަން މީސަރސް ކަނޑައެޅުމުގެ ގޯސް",
  "ERROR_COLUMNA_NO_EXISTE": "dataFrame ގައި '{}' ކޮލަމް ނެތް",
  "error_type": "އެ އިންޕުޓް ވާންޖެހޭނީ ޓައިޕް ސްޓްރިންގ އެއްގެ ގޮތުގައެވެ.",
  "not_found": "\"{NAME}\" ގެ ނަމުގައި އެއްވެސް ފަންކްޝަނެއް ހޯދިފައެއް ނުވެއެވެ.\\n\\navailable އޮޕްޝަންސް އަކީ:\\n\\n{options}",
  "title_all": "ހެލްޕަރ ޑޮކިއުމަންޓޭޝަން",
  "title_not_found": "ފަންކްޝަން ނުފެނޭ",
  "copy": "ކްލިޕްބޯޑަށް ކޮޕީ ކުރާށެވެ .",
  "close": "ލެއްޕުން",
  "call": "ކޯލް(ނަން، ޓައިޕް=ނޯން، ޕަތު=ނޯން، ޓައިމްއައުޓް=5، ސްޓްރިކްޓް=ޓްރޫ)\nދީފައިވާ ފޯލްޑަރެއްގައި (ނުވަތަ ސީޑަބްލިޔުޑީ އިން) ރިކަރސިވްކޮށް ތިރިއަށް އަދި ދެން މައްޗަށް ފައިލެއް ހޯދުމަށް (އަދި އިޚްތިޔާރީ ގޮތެއްގައި ޓައިޕް) ހޯދުން،\nއަދި އޭގެ ވައްތަރަށް ބަލައިގެން އޮޓޮމެޓިކުން ލޯޑްކުރެއެވެ.\n\nޕެރެމިޓަރސް:\n    ނަން (އެސްޓީއާރު): ފައިލްގެ ބޭސް ނަން، އެކްސްޓެންޝަން ނެތި.\n    ޓައިޕް (str, optional): އެކްސްޕެކްޓެޑް އެކްސްޓެންޝަން ('CSV', 'JSON', 'XML').\n    PATH (Str, Optional): އިންޓިޝިއަލް ޕަތު ޓު ސަރޗް ފްރޮމް ފްރޮމް.\n    ޓައިމްއައުޓް (int, optional): ސިކުންތުކޮޅެއްގެ ތެރޭގައި އެންމެ ގިނައިން ސަރޗް ޓައިމް ލިބޭނެއެވެ.\n    ސްޓްރިކްޓް (ބޯލް، އިޚްތިޔާރީ): ޓްރޫ ނަމަ، އެއް ނަމެއްގައި ގިނަ ފައިލްތަކެއް ފެނިއްޖެނަމަ އެރަރ އިތުރުކޮށްދެއެވެ.\n\nރިޓަރންސް: ހޯދިފައިވާ ފައިލްގެ ކޮންޓެންޓް ނުވަތަ އެއްވެސް އެއްޗެއްގެ ކޮންޓެންޓް.",
  "load_user_translations": "load_user_translations(lang_path=\"lang.json\")\nޖޭއެސްއޯއެން ފައިލަކުން ޔޫޒަރ ޑެފިނޭޓް ޓްރާންސްލެޝަންތައް ލޯޑްކޮށް، ޑިފޯލްޓް ޓްރާންސްލެޝަންތަކާ އެއްކޮށްލައެވެ.\n\nޕެރެމިޓަރސް:\n    lang_path (str, optional): ޔޫޒަރ ޓްރާންސްލެޝަންސް ފައިލް އަށް ދާ މަގު. ޑިފޯލްޓް ކުރަނީ \"Lang.json\" އަށެވެ.\n\nއުޅުން:\n    - ފައިލް އެގްޒިސްވެ ސައްހަ ޖޭއެސްއޯއެން ނަމަ، ޑިފޯލްޓް ޓްރާންސްލެޝަންސް އާއި އޭގެ ކޮންޓެންޓްސް އެއްކޮށްލައެވެ.\n    - ފައިލް ނެތްނަމަ، ހަމައެކަނި ޑިފޯލްޓް ތަރުޖަމާތައް ބެހެއްޓޭނެއެވެ .\n    - ފައިލް ހުރި ނަމަވެސް ލޯޑް ނުކުރެވޭނަމަ އިންޒާރު ޕޮޕްއަޕް އެއް ދައްކާށެވެ .\n    - ގްލޯބަލް _ޓްރާންސްލެޝަންސް ޑިކްޝަނަރީ އަޕްޑޭޓްސް\n\nނޯޓް: މި ފަންކްޝަނަށް އަމަލުކުރަން ބޭނުންވާ ގޮތަށް ޔޫޒަރ ޓްރާންސްލެޝަންތަކަށް T() ފަންކްޝަން ބޭނުން ކުރުމުގެ ކުރިން ގުޅަން ޖެހެއެވެ.",
  "switch": "ޕައިތަން އަށް ބޭނުންވާ ސްވިޗް-ކޭސް ސިސްޓަމް އެންހަންސްޑް. ސަޕޯޓްސް:\n- ކޮންމެ ކޭސްއަކަށް މަލްޓިޕަލް މެޗިންގ ކީސް\n- އަގު، ވައްތަރު، ރެގްއެކްސް، ލަމްބްޑާ ފަންކްޝަން، ނުވަތަ ކްލާސް އަށް ބަލާފައި\n- ޕަންޑާސް އަދި ނަމްޕީ ޑޭޓާ ސްޓްރަކްޗަރ ސަޕޯޓް\n- ކޭސްތަކުގެ އިޚްތިޔާރީ އެސިންކް އެގްޒެކެޝަން\n- މެޗް-އޯލް މޯޑް ފޯރ އެގްޒެކިއުޓިންގ މަލްޓިޕަލް މެޗިންގ ކޭސްސް\n- ޑިބަގް މޯޑް ލޮގް މެޗިންގ ކޭސްސް",
  "async_switch": "އެސިންކް މޯޑުގައި ސްވިޗް އިންސްޓޭންޝިއޭޓް ކުރުމަށް ރެޕަރ. ޕެރެމިޓަރސް:\n- އަގު: ކަނޑައެޅިފައިވާ ޙާލަތްތަކާ އެއްގޮތްވާ އަގު.\n- **KWARGS: އިޚްތިޔާރީ ކީވޯޑް އަރގިއުމެންޓްސް ސީދާ ސްވިޗް ކްލާހަށް ފޮނުވިއެވެ. މީގެ ތެރޭގައި ހިމެނިދާނެއެވެ.\n  - MATCH_ALL (BOOL): ފުރަތަމަ ވަގުތުގައި ހުއްޓާލުމުގެ ބަދަލުގައި ހުރިހާ މެޗިންގ ކޭސްތައް އެގްޒެކެޓް ކުރާށެވެ.\n  - DEBUG (BOOL): ކޮން ކޭސްއެއް މެޗްކޮށް ކޮން ކޭސްއެއް އަދި އެގްޒެކެޓް ކުރި އެއްޗެއް ޕްރިންޓް ކުރާށެވެ.\n  - ASYNC_MODE (BOOL): މިތަނުގައި މެނުއަލްކޮށް ފާސްކޮށްގެން ނުވާނެ (އަބަދުވެސް ތެދުވެރިކަމާއެކު ތެދުވެގެން).\nމިސާލު: އެސިންކްސްވިޗް('ހެލޯ'، މެޗް_އޯލް=ޓްރޫ، ޑީބަގް=ޓްރޫ)(...)",
  "file_not_found": "ފައިލް ނުފެނުނު: {FILE_PATH}",
  "encoding_error": "ފައިލް އެންކޯޑިންގ އެރަރ (ޔޫޓީއެފް-8 ނޫން)",
  "syntax_error": "ސިންޓެކްސް އެރަރ: {MSG}",
  "undefined_name": "މާނަ ނުކުރެވޭ ނަން: '{NAME}'",
  "syntax_check_title": "ސިންޓެކްސް ޗެކް",
  "no_errors_found": "ސިންޓެކްސް އެރަރސް އެއް ނުފެނޭ!",
  "errors_found": "{COUNT} {FILE_PATH} ގައިވާ {COUNT} ERROR(s):",
  "error_line": "ލައިން {ލައިން}: {މެސެޖް}",
  "error_context": "ކޮންޓެކްސްޓް: {ކޮންޓެކްސްޓް}",
  "syntax_errors_title": "ސިންޓެކްސް އެރަރސް",
  "multiple_errors": "އެތައް ގޯހެއް ފެނިއްޖެ",
  "error_types_found": "އެރަރ ވައްތަރުތައް ފެނިއްޖެ: {ޓައިޕްސް}",
  "multiple_errors_title": "އެތައް ވައްތަރެއްގެ ގޯސްތަކެއް ފެނިފައިވެއެވެ .",
  "syntax_analysis": "ސިންޓެކްސް އެނަލިސިސް",
  "semantic_analysis": "ސެމެންޓިކް އެނަލިސިސް",
  "provide_file_path": "ޗެކް ކުރުމަށް ފައިލް މަގެއް ފޯރުކޮށްދެއްވުން އެދެމެވެ .",
  "file_search_title": "ފައިލް ސަރޗް",
  "searching_from": "އިން ހޯދަނީ",
  "files_found": "ފެނުނު ފައިލްތައް",
  "file_not_found_explicit": "file '{name}.{ext}' '{path}' އިން ނުފެނެއެވެ.",
  "file_not_found_any": "'{name}' ނަމަކަށް ކިޔާ އެއްވެސް ފައިލެއް '{path}' އިން ނުފެނެއެވެ.",
  "file_ambiguous": "'{NAME}' ގެ ނަމުގައި ގިނަ ފައިލްތަކެއް ފެނިއްޖެއެވެ: {types}. stript=false ވައްތަރު ކަނޑައެޅުން ނުވަތަ ބޭނުންކުރާށެވެ.",
  "unsupported_file_type": "ސަޕޯޓް ނުކުރާ ފައިލް ވައްތަރު: {ext}",
  "t": "ހޮވާފައިވާ ބަހަށް ބިނާކޮށް ދީފައިވާ ކީއަކަށް ލޮކަލައިޒްޑް ޓެކްސްޓް ރިޓަރން ކޮށްދެއެވެ.",
  "show_gui_popup_description": "ޓެކްސްޓް ކޮންޓެންޓާއި އިޚްތިޔާރީ ވިޝުއަލައިޒޭޝަން އާއި އެކު ޕޮޕްއަޕް ވިންޑޯއެއް ދައްކާނެއެވެ.\nސީއެލްއައި އާއި ޖުޕިޓަރ ނޯޓްބުކްގެ މާހައުލުތައް ވެސް ޙައްލުކުރެއެވެ.\n\nސިފަތައް:\n- އެކްޓިވް ޓެބް އަށް ބިނާކޮށް ފަންކްޝަނަލިޓީ ކޮޕީ/ސޭވްކުރުން\n- ޖުޕައިޓަރ ގައި ރަނގަޅަށް ފިގުއަރ ހެންޑްލިންގ\n- ސާފު ކުޑަދޮރު ނިންމާލުން\n\nއާރގްސް:\n    ސުރުޚީ (އެސްޓީއާރު): ވިންޑޯ ސުރުޚީ\n    ކޮންޓެންޓް (އެސްޓީއާރު): ޓެކްސްޓް ކޮންޓެންޓް ދައްކާނެ\n    ފޮޓޯ (MATPLOTLIB.FIOR.FIOR.FIOR, OPTIONAL): ކުރިން އުފެއްދި ފޮޓޯ\n    ޕްލޮޓް_ފަންކްޝަން (ކޯލް ކުރެވޭ، އިޚްތިޔާރީ): ފޮޓޯއެއް އުފައްދާ ފަންކްޝަން\n    ޕްލޮޓް_އާރގްސް (ޑިކްޓް، އިޚްތިޔާރީ): ޕްލޮޓް_ފަންކްޝަން އަށް އަރގިއުމެންޓްސް",
  "warning": "އިންޒާރު",
  "translations_not_found_warning": "translations.json ނުފެނުނު",
  "load_user_translations_error": "USER LAG.JSON ލޯޑް ނުކުރެވުނު: {އެރޯރ}",
  "missing_translation_key": "ގެއްލިފައިވާ: {ކީ}",
  "semantic_analysis_failed": "ސެމެންޓިކް އެނަލިސިސް ފެއިލްވީ: {MSG}",
  "redundant_true": "ރިޑަންޑަންޓް ކޮމްޕެރިޝަން ވިތު ޓްރޫ، ޔޫސް ދަ ވެލިއު ސީދާ",
  "redundant_false": "ރިޑަންޑަންޓް ކޮމްޕެރިޝަން ވިތު ފޯލްސް، ޔޫސް 'ނޮޓް' ގެ ބަދަލުގައި",
  "none_comparison": "އެއްވެސް މީހަކާ އަޅާކިޔުން '==' ގެ ބަދަލުގައި 'އައިއެސް' ބޭނުން ކުރަން ޖެހެއެވެ.",
  "not_true_recommendation": "'!= true' ބޭނުންކުރުމަކީ ރަނގަޅު ކަމެއް ނޫން، ހާލަތު ފަސޭހަ ކުރުމަށް ވިސްނާށެވެ .",
  "not_false_recommendation": "'!= ފޯލްސް' ބޭނުންކުރުމަކީ ރަނގަޅު ކަމެއް ނޫން، ޕޮޒިޓިވް ކޮންޑިޝަނެއް ބޭނުންކުރުމަށް ވިސްނާށެވެ .",
  "function": "ފަންކްޝަން",
  "class": "ކްލާސް",
  "help_usage": "ވަކި ފަންކްޝަނަކާ ބެހޭ ތަފްސީލު ހޯދުމަށް help('fanction_name') ބޭނުން ކުރާށެވެ .",
  "help_error": "އެރަރ: ފަންކްޝަން '{}' އެއް ނެތް ނުވަތަ އެއްވެސް ޑޮކިއުމަންޓޭޝަނެއް ނެތް",
  "save": "ރައްކާކުރުން",
  "content": "ކޮންޓެންޓް",
  "preview": "ޕްރިވިއު",
  "light_theme": "ލައިޓް ތީމް",
  "dark_theme": "ޑާކް ތީމް",
  "settings": "ސެޓިންގސް",
  "error_in_gui": "ޖީއައި ގައި ގޯސް",
  "example": "މިސާލު",
  "preview_error": "ޕްރިވިއު އެރޯރ",
  "help_available_functions": "ލިބެންހުރި ފަންކްޝަންތައް:",
  "function_preview_title": "{ފަންކްޝަން} ގެ ޕްރިވިއު",
  "non_graph_preview_available": "ނޮން ގްރެފިކަލް ޕްރިވިއު ލިބެން ހުންނާނެ",
  "preview_error_message": "ޕްރިވިއު ގައި އެރަރ:\n{ކުށް}",
  "async_preview_not_available": "އެސިންކް މިސާލު ސިންކް ޕްރިވިއު ގައި ނުދައްކާނެއެވެ.\nއެސިންކް މާހައުލުގައި 'އޭވިޓް އެސިންކްސްވިޗް(...)' ބޭނުން ކުރާށެވެ.",
  "switch_preview_positive": "ޕޮޒިޓިވް (ސްވިޗް މިސާލު)",
  "switch_preview_zero": "ޒީރޯ (ސްވިޗް މިސާލު)",
  "scatter_description": "ކޮންޓިނިއުއަރ ދެ ވެރިއޭބަލްގެ މެދުގައިވާ ގުޅުން ސިފަކުރުމަށް ސްކެޓަރ ޕްލޮޓެއް އުފައްދައެވެ.",
  "lineplot_description": "ޓައިމް ސީރީޒް ނުވަތަ އޯޑަރޑް ކެޓަގަރީ ޑޭޓާއަށް އޯޑިއަލް ލައިން ޕްލޮޓެއް އުފައްދައެވެ.",
  "kdeplot_description": "ކަރނަލް ޑެންސިޓީ އެސްޓިމޭޝަން ބޭނުންކޮށްގެން ސްމޫތުޑް ހިސްޓޯގްރާމް އެއް އުފައްދައެވެ.",
  "violinplot_description": "ބައެއް ކެޓަގަރީތަކުގެ ތެރެއިން ކުއަންޓިޓޭޓިވް ޑޭޓާ ބެހިފައިވާ ގޮތް ދައްކައެވެ.",
  "pairplot_description": "ޖޮއިންޓް އަދި މާޖިނަލް ޑިސްޓްރިބިއުޝަން ވެސް ދައްކުވައިދޭ ޑޭޓާސެޓެއްގައި ޖޯޑުޖޯޑަށް ގުޅުންތައް އުފައްދައެވެ.",
  "countplot_description": "ކެޓަގަރީ ޑޭޓާގެ ފްރީކުއެންސީ ދައްކާ ބާ ޕްލޮޓެކެވެ.",
  "lmplot_description": "ޑޭޓާއާއި ލައިނަރ ރިގްރެޝަން މޮޑެލްއެއް ކޮންފިޑެންސް އިންޓަވަލްތަކާއެކު ފިޓްކުރެއެވެ.",
  "jointplot_description": "ސްކެޓަރ ޕްލޮޓް އާއި ހިސްޓޯގްރާމް ނުވަތަ މާރޖިންގައި ކޭޑީއީ ޕްލޮޓްތައް އެއްކޮށްލައެވެ.",
  "swarmplot_description": "ހުރިހާ އޮބްޒަރވޭޝަންތަކެއް ދައްކާއިރު އޭގެ އަޑީގައިވާ ޑިސްޓްރިބިއުޝަން ތަމްސީލު ކުރެއެވެ.",
  "regplot_description": "ޑޭޓާއާއި ރިގްރެޝަން މޮޑެލް ފިޓްކޮށް އިޚްތިޔާރީ ޕޮލިނޮމިއަލް އޯޑަރ އާއި އެކު ފިޓްކުރެއެވެ.",
  "barplot_description": "ރެކްޓަންގްލަރ ބާރސްގެ ގޮތުގައި ޕޮއިންޓް އެސްޓިމޭޓްތަކާއި ކޮންފިޑެންސް އިންޓަވަލްތައް ދައްކައެވެ.",
  "stripplot_description": "އެއް ވެރިއޭބަލް ޖިޓަރ އާއި އެކު ކެޓަގަރީ ވެފައިވާ ސްކެޓަރ ޕްލޮޓެއް އޮވަރލެޕް ވުމުން ސަލާމަތްވުމަށް.",
  "large_plot_note": "ނޯޓް: މި ޕްލޮޓަށް އޭގެ ސައިޒަށް ބަލާއިރު ރެންޑަރ ކުރަން ވަގުތުކޮޅެއް ނަގާފާނެއެވެ .",
  "preview_not_available": "މި ފަންކްޝަނަށް އިންޓަރެކްޓިވް ޕްރިވިއު ނުލިބޭ",
  "description": "ތަފްޞީލު",
  "get_moda_description": "ޑޭޓާސެޓެއްގެ މޯޑް (އެންމެ ގިނައިން ލިބޭ އަގު) ކަނޑައަޅައެވެ. އޭގެ ފްރީކުއެންސީ ކައުންޓާއެކު އެ އަގު ރިޓަރން ކުރެވޭނެއެވެ.",
  "get_media_description": "ޑޭޓާސެޓެއްގެ އެރިތްމެޓިކް މީން (އެވްރެޖް) ހިސާބުކުރެއެވެ. NAN VALUES އިޚްތިޔާރީ ގޮތެއްގައި ޙަވާލުކުރެއެވެ.",
  "get_median_description": "ޑޭޓާސެޓެއްގެ މީޑިއަން (މެދު އަގު) ހިސާބުކުރެއެވެ. NAN VALUES އިޚްތިޔާރީ ގޮތެއްގައި ޙަވާލުކުރެއެވެ.",
  "get_rank_description": "ޑޭޓާފްރޭމް ކޮލަމެއްގެ ރޭންޖް (މެކްސް އާއި މިން އާއި ދެމެދުގައިވާ ތަފާތު) ހިސާބުކުރެއެވެ.",
  "get_var_description": "ޑޭޓާފްރޭމް ކޮލަމެއްގެ ވަރިއަންސް ހިސާބުކުރެއެވެ.",
  "get_desv_description": "ޑޭޓާފްރޭމް ކޮލަމެއްގެ ސްޓޭންޑަރޑް ޑިވިއޭޝަން ހިސާބުކުރެއެވެ.",
  "disp_description": "ޑޭޓާފްރޭމް ކޮލަމަކަށް ޑިސްޕަރޝަން މީސަރސް (ރޭންޖް، ވެރިއަންސް، ސްޓޭންޑަރޑް ޑިވިއޭޝަން) ރިޓަރން ކުރެއެވެ.",
  "call_description": "ފްލެކްސިބަލް ސަރޗް އޮޕްޝަންތަކާއެކު ތަފާތު ފޯމެޓްތަކުގެ (CSV, JSON, XML) ފައިލްތައް ހޯދައި ކިޔައެވެ.",
  "check_syntax_description": "ސިންޓެކްސް އެރަރސް، އަންޑެފައިންޑް ނޭމްސް، އަދި ސްޓައިލް އިޝޫސް އަށް ޕައިތަން ކޯޑް އެނަލައިޒް ކުރުން.",
  "createDB_description": "ޑޭޓާބޭސް ކަނެކްޝަން އިންސްޓޭންސް އެއް އުފެއްދުމަށްޓަކައި ފެކްޓްރީ ފަންކްޝަން.",
  "exportData_description": "ޑޭޓާބޭސް ޓޭބަލްތަކުން ޑޭޓާ އެކްސްޕޯޓް ކުރަނީ އެކި ފޯމެޓްތަކަށް (ސީއެސްވީ، ޖޭއެސްއޯއެން، އެކްސްއެމްއެލް، އެސްކިއުއެލް، އެކްސެލް، ފަދަ) އެވެ.",
  "addTable_description": "ކަނޑައެޅިފައިވާ ކޮލަމްތަކާއި ކޮންސްޓްރެއިންޓްތަކާއެކު ޑޭޓާބޭސްއަށް އާ ތާވަލެއް އިތުރުކުރެއެވެ.",
  "mergeTable_description": "ތަފާތު ޖޮއިން ވައްތަރުތަކާއެކު އެސްކިއުއެލް ލޮޖިކް ބޭނުންކޮށްގެން ގިނަ ޓޭބަލްތަކެއް އެއްކޮށްލައެވެ.",
  "join_description": "އެކި ޖޮއިން ވައްތަރުތަކާއެކު ޓޭބަލްތަކުގެ މެދުގައި އެސްކިއުއެލް ޖޮއިންތައް ކުރިއަށް ގެންދިއުން.",
  "drop_description": "ޑޭޓާބޭސްއިން ޓޭބަލްތައް ޑްރޮޕްސް، އިޚްތިޔާރީ ގޮތެއްގައި ކެސްކޭޑް އާއި އެކު.",
  "cascadeDelete_description": "ކޮންޑިޝަނެއްގެ މައްޗަށް ބިނާކޮށް، ޑިޕެންޑެންސީތައް ޙައްލުކުރުމުގެ މައްޗަށް ބިނާކޮށް ކެސްކޭޑް ޑިލީޓް ކުރުން.",
  "recursiveQuery_description": "ކޮމަން ޓޭބަލް އެކްސްޕްރެޝަންސް (ސީޓީއީ) ބޭނުންކޮށްގެން ރިކަރސިވް ކިއުއަރީތައް އެގްޒެކެޓް ކުރެއެވެ.",
  "windowFunction_description": "ޓޭބަލް ޑޭޓާއަށް ވިންޑޯ ފަންކްޝަންސް (row_number, rank, etc.) .",
  "executeRawSQL_description": "ސީދާ ޑޭޓާބޭސްގައި ރޯ އެސްކިއުއެލް ކިއުއަރީތައް އެގްޒެކެޓް ކުރެއެވެ.",
  "show_description": "ގްރެފިކަލް އިންޓަރފޭސްއެއްގައި ޑޭޓާބޭސް ޓޭބަލްތަކާއި ޑޭޓާ ދައްކާލައެވެ.",
  "hbar_description": "ކަސްޓަމައިޒް ކުރެވޭ ލޭބަލްތަކާއި ކުލަތަކާއެކު ހޮރައިޒޮންޓަލް ބާ ޗާޓެއް އުފައްދައެވެ.",
  "vbar_description": "ކަސްޓަމައިޒް ކުރެވޭ ލޭބަލްތަކާއި ކުލަތަކާއެކު ވަރުގަދަ ބާ ޗާޓެއް އުފައްދައެވެ.",
  "pie_description": "ކަސްޓަމައިޒް ކުރެވޭ ލޭބަލްތަކާއި، ކުލަތަކާއި، ޕަސެންޓް ފޯމެޓިންގ އާއި އެކު ޕައި ޗާޓެއް އުފައްދައެވެ.",
  "boxplot_description": "ކެޓަގަރީތަކުގެ ތެރެއިން ޑޭޓާ ޑިސްޓްރިބިއުޝަން ވިޝުއަލައިޒް ކުރުމަށް ބޮކްސް ޕްލޮޓެއް އުފައްދައެވެ.",
  "histo_description": "ނިއުމެރިކް ވެރިއޭބަލްއެއްގެ ޑިސްޓްރިބިއުޝަން ވިޝުއަލައިޒް ކުރުމަށް ހިސްޓޯގްރާމް އުފައްދައެވެ.",
  "heatmap_description": "ކަލަރ ކޯޑިންގ އާއި އެކު މެޓްރިކްސް ކަހަލަ ޑޭޓާ ވިޝުއަލައިޒް ކުރުމަށް ހީޓްމެޕް އެއް އުފައްދައެވެ.",
  "table_description": "ޑޭޓާ އެރޭސް ނުވަތަ ޑޭޓާފްރޭމްތަކުން ޓޭބަލް ވިޝުއަލައިޒޭޝަނެއް އުފައްދައެވެ.",
  "normalize_description": "މިން-މެކްސް ސްކޭލިންގ ބޭނުންކޮށްގެން 0 އާއި 1 އާއި ދެމެދުގެ އެރޭއެއް ނޯމަލައިޒް ކުރެއެވެ.",
  "conditional_description": "ޑޭޓާފްރޭމެއްގައި އާ ކޮލަމެއް އުފެއްދުމަށް ލޮޖިކަލް ކޮންޑިޝަންސް އަމަލުކުރުން.",
  "convert_file_description": "އެކި ފޯމެޓްތަކުގެ މެދުގައި ފައިލްތައް (SHP, DBF, XML, etc.) ގެ މެދުގައިވާ ފައިލްތައް ސީއެސްވީއަށް ބަދަލުކުރެއެވެ.",
  "Switch_description": "މަލްޓިޕަލް ޕެޓަރން މެޗިންގ ފޯމެޓްތަކާއެކު ސިންކްރޮނަސް ސްވިޗް އިމްޕްލިމެންޓޭޝަން.",
  "switch_description": "ސިންކްރޮނަސް ސްވިޗްގެ ނެޗުރަލް ސިންޓެކްސް ބޭނުންކުރުމަށް ރެޕަރ ފަންކްޝަން.",
  "AsyncSwitch_description": "މަލްޓިޕަލް ޕެޓަރން މެޗިންގ ފޯމެޓްތަކާއެކު އެސިންކްރޮނަސް ސްވިޗް އިމްޕްލިމެންޓޭޝަން.",
  "async_switch_description": "އެސިންކްރޮނަސް ސްވިޗްގެ ނެޗުރަލް ސިންޓެކްސް ބޭނުންކުރުމަށް ރެޕަރ ފަންކްޝަން.",
  "config_description": "މޮޑިއުލް ސެޓިންގސް އަށް ގްލޯބަލް ކޮންފިގްރޭޝަން ޑިކްޝަނަރީ.",
  "fig_to_img_description": "އެހެން ވިޝުއަލައިޒޭޝަންތަކުގައި ބޭނުންކުރުމަށްޓަކައި މެޓްޕްލޮޓްލިބް ފިގަރ އެއް އިމޭޖް އެރޭއަކަށް ބަދަލުކުރެއެވެ.",
  "format_number_description": "ކަސްޓަމައިޒް ކުރެވޭ ޑިސިމަލް ތަންތަނާއި ޕަސެންޓް ފޯމެޓިންގ އާއި އެކު ފޯމެޓްސް ނަންބަރުތައް.",
  "load_user_translations_description": "ޑިފޯލްޓް ތަރުޖަމާތައް ދިގުކޮށް ނުވަތަ އޯވަރރައިޑް ކުރުމަށް ޔޫޒަރ ޑެފިނޭޓް ކޮށްފައިވާ ތަރުޖަމާ ފައިލްތައް ލޯޑް ކުރެއެވެ.",
  "register_description": "ގްލޯބަލް ރެޖިސްޓްރީގައި ފަންކްޝަން ނުވަތަ ކްލާސްތައް ރަޖިސްޓްރީ ކުރުމަށް ޑެކޯރޭޓަރ.",
  "set_language_description": "ތަރުޖަމާތަކަށް މިހާރު ބޭނުންކުރާ ބަސް ކަނޑައަޅައެވެ.",
  "t_description": "މިހާރު ހުރި ބަހުގައި ދީފައިވާ ކީއަކަށް ތަރުޖަމާ ކުރެވިފައިވާ ސްޓްރިންގް ރިޓަރން ކުރާ ތަރުޖަމާ ފަންކްޝަން."
}