name: "Test"

on:
  merge_group:
  workflow_dispatch:
  workflow_call:
  pull_request:
  push:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  cargo-fmt:
    name: Cargo fmt
    runs-on: ubuntu-latest

    steps:
      - name: Fetch Repository
        uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt

      - name: Rustfmt Check
        run: cargo fmt --all --check

  cargo-clippy:
    name: Cargo clippy
    runs-on: ubuntu-latest

    steps:
      - name: Fetch Repository
        uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: clippy

      - name: Clippy Check
        run: cargo clippy --workspace --all-targets --all-features -- -Dwarnings

  build-and-pytest:
    name: Build & Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.11", "3.13t" ]

    steps:
      - name: Fetch Repository
        uses: actions/checkout@v4

      - name: Setup mold linker
        uses: rui314/setup-mold@v1
        with:
          make-default: true

      - name: Install stable Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Install cargo-nextest
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-nextest

      - name: Run cargo nextest in ferrobus-core
        run: |
          cd ferrobus-core
          cargo nextest run

      - name: Install UV
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.6.16"

      - name: Build & Test Python Extension
        run: |
          uv python install "${{ matrix.python-version }}"

          uv venv -p "${{ matrix.python-version }}" .venv
          source .venv/bin/activate

          uv pip install maturin pytest pytest-codspeed

          maturin develop
          pytest
