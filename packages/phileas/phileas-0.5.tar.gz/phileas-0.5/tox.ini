[tox]
env_list =
    clean_coverage
    py3.{10,11,12,13}_{test,type_check}
    pypy3.{10,11}_{test,type_check}
    py3.13_benchmark
    py3.13_doc
    pypy3.11_benchmark
    produce_reports

[gh]
python =
    python3.13 = clean_coverage, py3.13_test, py3.13_type_check, py3.13_benchmark, produce_reports
    python3.12 = py3.12_test, py3.12_type_check
    python3.11 = py3.11_test, py3.11_type_check
    python3.10 = py3.10_test, py3.10_type_check
    pypy3.11 = pypy3.11_test, pypy3.11_benchmark
    pypy3.10 = pypy3.10_test

[testenv]
skip_install = true
base_python =
    py3.10_{test,type_check}: py310
    py3.11_{test,type_check}: py311
    py3.12_{test,type_check}: py312
    {py3.13_{test,type_check,benchmark},clean_coverage,produce_reports}: py313
    pypy3.10_{test,type_check}: pypy310
    pypy3.11_{test,type_check,benchmark}: pypy311
allowlist_externals = poetry
commands_pre =
    poetry install --with=dev --all-extras
    poetry run maturin develop

[testenv:{py,pypy}3.{10,11,12}_test]
description = Run unit tests against Python {base_python}.
commands =
    poetry run python -m unittest --buffer

[testenv:{py,pypy}3.{10,11,12,13}_type_check]
description = Run type checking with Python {base_python}.
commands_pre =
    poetry install --with=dev
commands =
    poetry run mypy --no-incremental phileas

[testenv:{py3.13,pypy3.11}_benchmark]
description = Run benchmark with Python {base_python}.
commands =
    poetry run python -OO -m phileas benchmark

[testenv:clean_coverage]
description = Clean coverage files.
commands_pre =
    poetry install --with=dev --all-extras
commands =
    poetry run coverage erase

[testenv:py3.13_test]
description = Run unit tests against Python {base_python}.
depends =
    clean_coverage
commands =
    poetry run coverage run --append -m unittest --buffer
    poetry run coverage run --append -m phileas benchmark

[testenv:py3.13_doc]
description = Build the documentation with Python {base_python}.
depends =
    clean_coverage
commands =
    poetry run coverage run --append -m sphinx -M html doc/source doc/build

[testenv:produce_reports]
description = Product coverage reports.
depends =
    py3.13_test
commands_pre =
    poetry install --with=dev
commands =
    poetry run coverage report
    poetry run coverage html
    poetry run coverage xml
