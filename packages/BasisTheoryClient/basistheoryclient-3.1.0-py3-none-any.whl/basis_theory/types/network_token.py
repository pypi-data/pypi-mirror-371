# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .card import Card
from .card_details import CardDetails
from .network_token_extras import NetworkTokenExtras


class NetworkToken(UniversalBaseModel):
    id: typing.Optional[str] = None
    tenant_id: typing.Optional[str] = None
    data: typing.Optional[Card] = None
    card: typing.Optional[CardDetails] = None
    network_token: typing.Optional[CardDetails] = None
    par: typing.Optional[str] = None
    status: typing.Optional[str] = None
    created_by: typing.Optional[str] = None
    created_at: typing.Optional[dt.datetime] = None
    modified_by: typing.Optional[str] = None
    modified_at: typing.Optional[dt.datetime] = None
    token_id: typing.Optional[str] = None
    token_intent_id: typing.Optional[str] = None
    extras: typing_extensions.Annotated[typing.Optional[NetworkTokenExtras], FieldMetadata(alias="_extras")] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
