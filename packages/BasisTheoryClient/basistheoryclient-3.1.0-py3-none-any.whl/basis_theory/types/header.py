# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata


class Header(UniversalBaseModel):
    public_key_hash: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="publicKeyHash")] = None
    ephemeral_public_key: typing_extensions.Annotated[
        typing.Optional[str], FieldMetadata(alias="ephemeralPublicKey")
    ] = None
    transaction_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="transactionId")] = None
    application_data: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="applicationData")] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
