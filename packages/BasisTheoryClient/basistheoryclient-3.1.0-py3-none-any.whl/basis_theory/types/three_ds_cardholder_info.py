# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .three_ds_address import ThreeDsAddress
from .three_ds_cardholder_account_info import ThreeDsCardholderAccountInfo
from .three_ds_cardholder_authentication_info import ThreeDsCardholderAuthenticationInfo
from .three_ds_cardholder_phone_number import ThreeDsCardholderPhoneNumber
from .three_ds_prior_authentication_info import ThreeDsPriorAuthenticationInfo


class ThreeDsCardholderInfo(UniversalBaseModel):
    account_id: typing.Optional[str] = None
    account_type: typing.Optional[str] = None
    account_info: typing.Optional[ThreeDsCardholderAccountInfo] = None
    authentication_info: typing.Optional[ThreeDsCardholderAuthenticationInfo] = None
    prior_authentication_info: typing.Optional[ThreeDsPriorAuthenticationInfo] = None
    name: typing.Optional[str] = None
    email: typing.Optional[str] = None
    phone_number: typing.Optional[ThreeDsCardholderPhoneNumber] = None
    mobile_phone_number: typing.Optional[ThreeDsCardholderPhoneNumber] = None
    work_phone_number: typing.Optional[ThreeDsCardholderPhoneNumber] = None
    billing_shipping_address_match: typing.Optional[str] = None
    billing_address: typing.Optional[ThreeDsAddress] = None
    shipping_address: typing.Optional[ThreeDsAddress] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
