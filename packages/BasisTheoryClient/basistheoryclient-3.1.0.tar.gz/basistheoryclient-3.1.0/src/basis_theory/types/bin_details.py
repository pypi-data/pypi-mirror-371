# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .bin_details_bank import BinDetailsBank
from .bin_details_country import BinDetailsCountry
from .bin_details_product import BinDetailsProduct


class BinDetails(UniversalBaseModel):
    card_brand: typing.Optional[str] = None
    type: typing.Optional[str] = None
    prepaid: typing.Optional[bool] = None
    card_segment_type: typing.Optional[str] = None
    bank: typing.Optional[BinDetailsBank] = None
    product: typing.Optional[BinDetailsProduct] = None
    country: typing.Optional[BinDetailsCountry] = None
    reloadable: typing.Optional[bool] = None
    pan_or_token: typing.Optional[str] = None
    account_updater: typing.Optional[bool] = None
    alm: typing.Optional[bool] = None
    domestic_only: typing.Optional[bool] = None
    gambling_blocked: typing.Optional[bool] = None
    level2: typing.Optional[bool] = None
    level3: typing.Optional[bool] = None
    issuer_currency: typing.Optional[str] = None
    combo_card: typing.Optional[str] = None
    bin_length: typing.Optional[int] = None
    authentication: typing.Optional[typing.Optional[typing.Any]] = None
    cost: typing.Optional[typing.Optional[typing.Any]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
