[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "StrateQueue"
version = "v0.5.1"
description = "The fastest way from backtest to live trading"
readme = "README.md"
license = {text = "AGPL-3.0"}
authors = [
    {name = "Trading System Contributors", email = "samuel.tinnerholm@gmail.com"}
]
maintainers = [
    {name = "Trading System Contributors", email = "samuel.tinnerholm@gmail.com"}
]
keywords = [
    "trading", 
    "backtesting", 
    "live-trading", 
    "algorithmic-trading", 
    "financial-data",
    "quantitative-finance",
    "strategy-signals",
    "alpaca-trading"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Developers",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "License :: OSI Approved :: GNU Affero General Public License v3",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Operating System :: OS Independent",
]
requires-python = ">=3.10"
dependencies = [
    # Core dependencies - minimal for basic functionality
    "pandas>=2.0.0",
    "requests>=2.31.0",
    "websocket-client>=1.6.0",
    "python-dotenv>=1.0.0",
    "alpaca-py>=0.40.0",
    "ccxt>=4.4.96",
    "questionary>=1.10.0",
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "python-multipart",
    "httpx>=0.24.0",
    "rich>=13.0.0",
    "pydantic>=2.0,<2.12",
    "yfinance==0.2.65",
    "nest_asyncio>=1.5.0",
    "empyrical>=0.5.5"
]

[project.optional-dependencies]
# Interactive CLI setup (included in main dependencies)
interactive = [
    "questionary>=1.10.0",
]

# Backtesting.py engine support (NumPy 2.x compatible)
backtesting = [
    "numpy>=1.24,<3",
    "bokeh>=2.4.2",
    "backtesting>=0.3.3",
]

# VectorBT engine support (NumPy 1.x only due to dependency conflicts)
vectorbt = [
    "numpy>=1.21,<1.24",
    "numba>=0.56,<0.57",
    "vectorbt>=0.26,<0.29",
    "pandas>=2.0,<2.4",
    "scipy>=1.9,<2.0",
    "matplotlib>=3.5,<4.0",
    "plotly>=5.0,<7.0",
    "requests>=2.31,<3.0",
    "dill>=0.3.6,<0.5",
    "tqdm>=4.64,<5.0",
    "pytz>=2022.1",
    "python-dateutil>=2.8,<3.0",
]

# Backtrader engine support
backtrader = [
    "backtrader>=1.9.78.123",
]

# Zipline-Reloaded engine support  
zipline = [
    "zipline-reloaded>=3.0",
]

# BT engine support
bt = [
    "bt>=0.2.9",
]

# Advanced data processing
analytics = [
    "scipy>=1.11.0",
    "ta-lib>=0.4.0",
]
# Database support for production
database = [
    "psycopg2-binary>=2.9.7",
    "redis>=4.6.0",
]
# Monitoring and logging
monitoring = [
    "prometheus-client>=0.17.0",
    "structlog>=23.1.0",
]
# Interactive Brokers support
ibkr = [
    "ib_insync>=0.9.85",
]
# Development tools
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-dependency>=0.5.1",
    "pexpect>=4.8.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "isort>=5.12.0",
    "pre-commit>=3.0.0",
    "pytest-cov>=4.1.0"
]
# Full package with backtesting.py and zipline (recommended)
full = [
    "numpy>=1.24,<3",
    "backtesting>=0.3.3",
    "zipline-reloaded>=3.0",
    "scipy>=1.11.0",
    "ta-lib>=0.4.0",
    "psycopg2-binary>=2.9.7",
    "redis>=4.6.0",
    "prometheus-client>=0.17.0",
    "structlog>=23.1.0",
    "questionary>=1.10.0",
]
# All engines (note: conflicting numpy versions - choose one!)
all = [
    "numpy>=1.24,<3",
    "backtesting>=0.3.3",
    "vectorbt>=0.25,<0.29",
    "numba>=0.56,<0.57",
    "zipline-reloaded>=3.0",
    "bt>=0.2.9",
    "scipy>=1.11.0",
    "ta-lib>=0.4.0",
    "psycopg2-binary>=2.9.7",
    "redis>=4.6.0",
    "prometheus-client>=0.17.0",
    "structlog>=23.1.0",
    "questionary>=1.10.0",
    "backtrader>=1.9.78.123",
]

[project.urls]
Homepage = "https://github.com/StrateQueue/StrateQueue"
Documentation = "https://github.com/StrateQueue/StrateQueue#readme"
Repository = "https://github.com/StrateQueue/StrateQueue"
Issues = "https://github.com/StrateQueue/StrateQueue/issues"
Changelog = "https://github.com/StrateQueue/StrateQueue/releases"

[project.scripts]
stratequeue = "StrateQueue.cli.cli:main"
sq = "StrateQueue.cli.cli:main"
strateque = "StrateQueue.cli.cli:main"
strateline = "StrateQueue.cli.cli:main" # for the Americans hehe

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["src", "."]
include = ["StrateQueue*", "examples*"]

[tool.setuptools.package-data]
StrateQueue = ["webui_static/**", "*.txt", "*.md"]
examples = ["**/*"]

# Black configuration
[tool.black]
line-length = 100
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# MyPy configuration
[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-v --tb=short --ignore=examples/ --ignore-glob=examples/* --import-mode=prepend"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
norecursedirs = ["examples"]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
    "ignore::pytest.PytestDeprecationWarning"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "live_alpaca: marks tests that connect to live Alpaca API",
    "live_ibkr: marks tests that connect to live IBKR API",
    "network: marks tests that require network access",
    "asyncio: marks tests as async tests",
    "dependency: marks tests with dependencies on other tests"
] 