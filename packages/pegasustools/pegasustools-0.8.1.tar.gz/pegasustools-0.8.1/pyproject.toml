[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"


[project]
name = "pegasustools"
authors = [
  { name = "Robert Caddy", email = "rcaddy@princeton.edu" },
]
description = "Analysis package for the Pegasus PIC code."
readme = "README.md"
requires-python = ">=3.13"
classifiers = [
  "Development Status :: 1 - Planning",
  "Intended Audience :: Science/Research",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.13",
  "Topic :: Scientific/Engineering",
  "Topic :: Scientific/Engineering :: Astronomy",
  "Topic :: Scientific/Engineering :: Physics",
  "Typing :: Typed",
]
dynamic = ["version"]
dependencies = [
    "numpy>=2.2",
    "matplotlib>=3.10",
    "polars-u64-idx[numpy]>=1.29",
]

[project.optional-dependencies]
test = [
  "pytest>=8",
  "pytest-cov>=6",
]
dev = [
  "pytest>=8",
  "pytest-cov>=6",
]
docs = [
  "sphinx>=7.0",
  "myst_parser>=0.13",
  "sphinx_copybutton",
  "sphinx_autodoc_typehints",
  "furo>=2023.08.17",
  "nbsphinx>=0.9.7",
  "ipykernel",
  "pytest>=8"
]

[project.urls]
Homepage = "https://github.com/PegasusPIC/pegasustools"
"Bug Tracker" = "https://github.com/PegasusPIC/pegasustools/issues"
Discussions = "https://github.com/PegasusPIC/pegasustools/discussions"
Changelog = "https://github.com/PegasusPIC/pegasustools/releases"


[tool.hatch]
version.source = "vcs"
build.hooks.vcs.version-file = "src/pegasustools/_version.py"

[tool.hatch.envs.default]
features = ["test"]
scripts.test = "pytest {args}"


[tool.uv]
dev-dependencies = [
  "pegasustools[test]",
]


[tool.pytest.ini_options]
minversion = "8.0"
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config", "--cov=pegasustools", "--cov-branch", "--cov-report=term-missing"]
xfail_strict = true
filterwarnings = [
  "error",
]
log_cli_level = "INFO"
testpaths = [
  "tests",
]


[tool.coverage]
run.source = ["pegasustools"]
run.omit = ["tests/*", "noxfile.py", "src/pegasustools/_version.py"]
report.exclude_also = [
  'if typing.TYPE_CHECKING:',
]

[tool.mypy]
files = ["src", "tests"]
python_version = "3.13"
warn_unused_configs = true
strict = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
warn_unreachable = true
disallow_untyped_defs = false
disallow_incomplete_defs = false

[[tool.mypy.overrides]]
module = "pegasustools.*"
disallow_untyped_defs = true
disallow_incomplete_defs = true


[tool.ruff]
exclude = ["old_scripts/**"]

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = ["ALL"]
ignore = [
  "D203", # Formatting rule that conflicts with D211 which is what numpy uses
  "D213", # Formatting rule that conflicts with D212 which is what numpy uses
  "D413", # Formatting rule that conflicts with the numpy convention
  "D415", # Formatting rule that conflicts with the numpy convention

  # Rules that conflict or are made redundant when using formatter
  "W191",
  "E111",
  "E114",
  "E117",
  "D206",
  "D300",
  "Q",
  "COM812",
  "COM819",
  "ISC002",
]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["T20", "S101", "INP001", "SLF001", "N802", "PLR2004"]
"noxfile.py" = ["T20"]
"docs/**" = ["T20", "INP001"]

[tool.ruff.lint.pylint]
max-args = 10

[tool.pylint]
py-version = "3.13"
jobs = "0"
ignore-paths = [".*/_version.py"]
reports.output-format = "colorized"
similarities.ignore-imports = "yes"
messages_control.disable = [
  "design",
  "fixme",
  "line-too-long",
  "missing-module-docstring",
  "missing-function-docstring",
  "wrong-import-position",
]
