name: tometo_tomato
help: "Esegue un join fuzzy tra due file CSV, associando record simili anche in presenza di errori di battitura. Utilizza DuckDB e rapidfuzz per calcolare la somiglianza tra le colonne specificate. Output: un file con i match puliti e uno con i casi ambigui. Esempio: tometo_tomato input.csv ref.csv --join-pair 'regione,regio' --join-pair 'comune,comu' --add-field codice_comune --threshold 90 --show-score"
version: 0.1.0

args:
  - name: input_file
    required: true
    help: "File CSV da arricchire/correggere (es: input.csv)"
  - name: reference_file
    required: true
    help: "File CSV di riferimento ufficiale (es: ref.csv)"

flags:
  - long: --join-pair
    short: -j
    arg: pair_string
    repeatable: true
    help: "Coppia di colonne da confrontare (es: --join-pair regione regio). Puoi specificare pi√π coppie per join multi-colonna. Se omesso, verranno usate le colonne con lo stesso nome."
  - long: --show-score
    short: -s
    help: "Mostra il punteggio di somiglianza medio nel risultato."
  - long: --infer-pairs
    short: -i
    help: "Inferisci automaticamente coppie di colonne con nomi simili"
  - long: --infer-threshold
    short: -I
    arg: value
    default: "0.7"
    help: "Soglia (0-1) per l'inferenza delle coppie di intestazione"
  - long: --add-field
    short: -a
    arg: field_name
    repeatable: true
    help: "Campo del file di riferimento da aggiungere all'output (es: codice_comune)."
  - long: --threshold
    short: -t
    arg: value
    default: "90"
    help: "Soglia minima di somiglianza (0-100) per considerare un match valido."
  - long: --output-clean
    short: -o
    arg: path
    required: true
    help: "File di output per i match puliti."
  - long: --output-ambiguous
    short: -u
    arg: path
    help: "File di output per i match ambigui. Se non specificato, non viene generato."
