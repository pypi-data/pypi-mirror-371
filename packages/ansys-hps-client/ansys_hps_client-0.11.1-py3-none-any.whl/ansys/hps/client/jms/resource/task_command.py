# Copyright (C) 2022 - 2025 ANSYS, Inc. and/or its affiliates.
# SPDX-License-Identifier: MIT
#
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# DO NOT EDIT.
# This file is automatically generated from the JMS schemas.

"""Module providing the task command resource."""

from datetime import datetime

from marshmallow.utils import missing

from ansys.hps.client.common import Object

from ..schema.task_command import TaskCommandSchema


class TaskCommand(Object):
    """Provides the task command resource.

    Parameters
    ----------
    id : str, optional
        Unique ID to access the resource, generated internally by the server on creation.
    creation_time : datetime, optional
        Date and time that the resource was created.
    modification_time : datetime, optional
        Date and time that the resource was last modified.
    created_by : str, optional
        ID of the user who created the object.
    modified_by : str, optional
        ID of the user who last modified the object.
    task_id : str
        ID of the :class:`Task` instance that the command is linked to.
    command_definition_id : str
        ID of the :class:`TaskCommandDefinition` instance that the command is linked to.
    arguments : dict, optional
        Command arguments.
    running_time : datetime, optional
        Date and time that the command was set to running.
    finished_time : datetime, optional
        Date and time that the command was completed.
    status : str, optional
        Evaluation status.

    """

    class Meta:
        schema = TaskCommandSchema
        rest_name = "task_commands"

    def __init__(
        self,
        id: str = missing,
        creation_time: datetime = missing,
        modification_time: datetime = missing,
        created_by: str = missing,
        modified_by: str = missing,
        task_id: str = missing,
        command_definition_id: str = missing,
        arguments: dict = missing,
        running_time: datetime = missing,
        finished_time: datetime = missing,
        status: str = missing,
        **kwargs,
    ):
        self.id = id
        self.creation_time = creation_time
        self.modification_time = modification_time
        self.created_by = created_by
        self.modified_by = modified_by
        self.task_id = task_id
        self.command_definition_id = command_definition_id
        self.arguments = arguments
        self.running_time = running_time
        self.finished_time = finished_time
        self.status = status

        self.obj_type = self.__class__.__name__


TaskCommandSchema.Meta.object_class = TaskCommand
