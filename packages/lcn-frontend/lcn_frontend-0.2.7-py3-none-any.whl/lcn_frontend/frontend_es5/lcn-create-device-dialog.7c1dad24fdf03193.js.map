{"version":3,"file":"lcn-create-device-dialog.7c1dad24fdf03193.js","sources":["webpack://lcn-frontend/./homeassistant-frontend/src/components/ha-radio.ts","webpack://lcn-frontend/./src/dialogs/lcn-create-device-dialog.ts"],"sourcesContent":["import { RadioBase } from \"@material/mwc-radio/mwc-radio-base\";\nimport { styles } from \"@material/mwc-radio/mwc-radio.css\";\nimport { css } from \"lit\";\nimport { customElement } from \"lit/decorators\";\n\n@customElement(\"ha-radio\")\nexport class HaRadio extends RadioBase {\n  static override styles = [\n    styles,\n    css`\n      :host {\n        --mdc-theme-secondary: var(--primary-color);\n      }\n    `,\n  ];\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-radio\": HaRadio;\n  }\n}\n","import \"@ha/components/ha-icon-button\";\nimport \"@ha/components/ha-radio\";\nimport \"@ha/components/ha-formfield\";\nimport \"@ha/components/ha-textfield\";\nimport { fireEvent } from \"@ha/common/dom/fire_event\";\nimport type { PropertyValues, CSSResultGroup } from \"lit\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { createCloseHeading } from \"@ha/components/ha-dialog\";\nimport type { HaRadio } from \"@ha/components/ha-radio\";\nimport { haStyleDialog } from \"@ha/resources/styles\";\nimport type { HomeAssistant, ValueChangedEvent } from \"@ha/types\";\nimport type { LCN, LcnDeviceConfig } from \"types/lcn\";\nimport type { HaTextField } from \"@ha/components/ha-textfield\";\nimport { loadProgressDialog } from \"./show-dialog-progress\";\nimport type { LcnDeviceDialogParams } from \"./show-dialog-create-device\";\n\n@customElement(\"lcn-create-device-dialog\")\nexport class CreateDeviceDialog extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public lcn!: LCN;\n\n  @state() private _params?: LcnDeviceDialogParams;\n\n  @state() private _isGroup = false;\n\n  @state() private _segmentId = 0;\n\n  @state() private _addressId = 5;\n\n  @state() private _invalid = false;\n\n  public async showDialog(params: LcnDeviceDialogParams): Promise<void> {\n    this._params = params;\n    this.lcn = params.lcn;\n    await this.updateComplete;\n  }\n\n  protected firstUpdated(changedProperties: PropertyValues): void {\n    super.firstUpdated(changedProperties);\n    loadProgressDialog();\n  }\n\n  public willUpdate(changedProperties: PropertyValues) {\n    if (changedProperties.has(\"_invalid\")) {\n      this._invalid =\n        !this._validateSegmentId(this._segmentId) ||\n        !this._validateAddressId(this._addressId, this._isGroup);\n    }\n  }\n\n  protected render() {\n    if (!this._params) {\n      return nothing;\n    }\n    return html`\n      <ha-dialog\n        open\n        scrimClickAction\n        escapeKeyAction\n        .heading=${createCloseHeading(\n          this.hass,\n          this.lcn.localize(\"dashboard-devices-dialog-create-title\"),\n        ) as unknown as string}\n        @closed=${this._closeDialog}\n      >\n        <div id=\"type\">${this.lcn.localize(\"type\")}</div>\n\n        <ha-formfield label=${this.lcn.localize(\"module\")}>\n          <ha-radio\n            name=\"is_group\"\n            value=\"module\"\n            .checked=${this._isGroup === false}\n            @change=${this._isGroupChanged}\n          ></ha-radio>\n        </ha-formfield>\n\n        <ha-formfield label=${this.lcn.localize(\"group\")}>\n          <ha-radio\n            name=\"is_group\"\n            value=\"group\"\n            .checked=${this._isGroup === true}\n            @change=${this._isGroupChanged}\n          ></ha-radio>\n        </ha-formfield>\n\n        <ha-textfield\n          .label=${this.lcn.localize(\"segment-id\")}\n          type=\"number\"\n          .value=${this._segmentId.toString()}\n          min=\"0\"\n          required\n          autoValidate\n          @input=${this._segmentIdChanged}\n          .validityTransform=${this._validityTransformSegmentId}\n          .validationMessage=${this.lcn.localize(\"dashboard-devices-dialog-error-segment\")}\n        ></ha-textfield>\n\n        <ha-textfield\n          .label=${this.lcn.localize(\"id\")}\n          type=\"number\"\n          .value=${this._addressId.toString()}\n          min=\"0\"\n          required\n          autoValidate\n          @input=${this._addressIdChanged}\n          .validityTransform=${this._validityTransformAddressId}\n          .validationMessage=${this._isGroup\n            ? this.lcn.localize(\"dashboard-devices-dialog-error-group\")\n            : this.lcn.localize(\"dashboard-devices-dialog-error-module\")}\n        ></ha-textfield>\n\n        <div class=\"buttons\">\n          <mwc-button\n            slot=\"secondaryAction\"\n            @click=${this._closeDialog}\n            .label=${this.lcn.localize(\"dismiss\")}\n          ></mwc-button>\n\n          <mwc-button\n            slot=\"primaryAction\"\n            @click=${this._create}\n            .disabled=${this._invalid}\n            .label=${this.lcn.localize(\"create\")}\n          ></mwc-button>\n        </div>\n      </ha-dialog>\n    `;\n  }\n\n  private _isGroupChanged(ev: ValueChangedEvent<string>): void {\n    this._isGroup = (ev.target as HaRadio).value === \"group\";\n  }\n\n  private _segmentIdChanged(ev: ValueChangedEvent<string>): void {\n    const target = ev.target as HaTextField;\n    this._segmentId = +target.value;\n  }\n\n  private _addressIdChanged(ev: ValueChangedEvent<string>): void {\n    const target = ev.target as HaTextField;\n    this._addressId = +target.value;\n  }\n\n  private _validateSegmentId(segmentId: number): boolean {\n    // segement_id: 0, 5-128\n    return segmentId === 0 || (segmentId >= 5 && segmentId <= 128);\n  }\n\n  private _validateAddressId(addressId: number, isGroup: boolean): boolean {\n    // module_id: 5-254\n    // group_id: 5-254\n    if (isGroup) {\n      return addressId >= 5 && addressId <= 254;\n    }\n    return addressId >= 5 && addressId <= 254;\n  }\n\n  private get _validityTransformSegmentId() {\n    return (value: string) => ({ valid: this._validateSegmentId(+value) });\n  }\n\n  private get _validityTransformAddressId() {\n    return (value: string) => ({ valid: this._validateAddressId(+value, this._isGroup) });\n  }\n\n  private async _create(): Promise<void> {\n    const values: Partial<LcnDeviceConfig> = {\n      name: \"\",\n      address: [this._segmentId, this._addressId, this._isGroup],\n    };\n    await this._params!.createDevice(values);\n    this._closeDialog();\n  }\n\n  private _closeDialog(): void {\n    this._params = undefined;\n    fireEvent(this, \"dialog-closed\", { dialog: this.localName });\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyleDialog,\n      css`\n        #port-type {\n          margin-top: 16px;\n        }\n        ha-textfield {\n          display: block;\n          margin-bottom: 8px;\n        }\n        .buttons {\n          display: flex;\n          justify-content: space-between;\n          padding: 8px;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"lcn-create-device-dialog\": CreateDeviceDialog;\n  }\n}\n"],"names":["HaRadio","_RadioBase","_classCallCheck","_callSuper","arguments","_inherits","_createClass","RadioBase","styles","css","_templateObject","_taggedTemplateLiteral","CreateDeviceDialog","_LitElement","_this","concat","args","_isGroup","_segmentId","_addressId","_invalid","_callee","params","_regenerator","w","_context","n","this","_params","lcn","updateComplete","a","_x","_showDialog","apply","key","value","changedProperties","_superPropGet","loadProgressDialog","has","_validateSegmentId","_validateAddressId","html","createCloseHeading","hass","localize","_closeDialog","_isGroupChanged","toString","_segmentIdChanged","_validityTransformSegmentId","_addressIdChanged","_validityTransformAddressId","_create","nothing","ev","target","segmentId","addressId","isGroup","get","_this2","valid","_this3","_create2","_asyncToGenerator","m","_callee2","values","_context2","name","address","createDevice","undefined","fireEvent","dialog","localName","haStyleDialog","_templateObject2","LitElement","attribute"],"mappings":"sOAMAA,EAAA,SAAAC,GAAA,SAAAD,IAAA,OAAAE,EAAAA,EAAAA,GAAA,KAAAF,IAAAG,EAAAA,EAAAA,GAAA,KAAAH,EAAAI,UAAA,QAAAC,EAAAA,EAAAA,GAAAL,EAAAC,IAAAK,EAAAA,EAAAA,GAAAN,EAAA,EAAAO,EAAAA,GAAaP,EAAAQ,OAAA,CAETA,EAAAA,GACAC,EAAAA,EAAAA,IAAAC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6F,0WCSJC,EAAA,SAAAC,G,2GAAO,OAAAC,GAAAX,EAAAA,EAAAA,GAAA,KAAAS,EAAA,GAAAG,OAAAC,KAAAC,UAAA,EAAAH,EAAAI,WAAA,EAAAJ,EAAAK,WAAA,EAAAL,EAAAM,UAAA,EAAAN,C,+EAeL,SAAAO,EAAAC,GAAA,OAAAC,EAAAA,EAAAA,KAAAC,GAAA,SAAAC,GAAA,cAAAA,EAAAC,GAAA,OAEE,OADAC,KAAAC,QAAAN,EACAK,KAAAE,IAAAP,EAAAO,IAAAJ,EAAAC,EAAA,EACA,KAAAI,eAAA,cAAAL,EAAAM,EAAA,MAAAV,EAAA,UACF,SAJAW,GAAA,OAAAC,EAAAC,MAAA,KAAA9B,UAAA,KAAA+B,IAAA,eAAAC,MAMU,SAAAC,IACRC,EAAAA,EAAAA,GAAA1B,EAAA,sBAAA0B,CAAA,CAAAD,KACAE,EAAAA,EAAAA,IACF,IAAAJ,IAAA,aAAAC,MAEO,SAAAC,GACLA,EAAAG,IAAA,cACEb,KAAAP,UAAAO,KAAAc,mBAAAd,KAAAT,cAAAS,KAAAe,mBAAAf,KAAAR,WAAAQ,KAAAV,UAIJ,IAAAkB,IAAA,SAAAC,MAEU,WACR,OAAKT,KAALC,SAGAe,EAAAA,EAAAA,IAAAjC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8+CAKaiC,EAAAA,EAAAA,GAAA,KAAAC,KAAA,KAAAhB,IAAAiB,SAAA,0CAID,KAAAC,aAEO,KAAAlB,IAAAiB,SAAA,QAEK,KAAAjB,IAAAiB,SAAA,WAIP,SAAA7B,SACD,KAAA+B,gBAIQ,KAAAnB,IAAAiB,SAAA,UAIP,SAAA7B,SACD,KAAA+B,gBAKH,KAAAnB,IAAAiB,SAAA,cAEA,KAAA5B,WAAA+B,WAIA,KAAAC,kBACY,KAAAC,4BACA,KAAAtB,IAAAiB,SAAA,0CAIZ,KAAAjB,IAAAiB,SAAA,MAEA,KAAA3B,WAAA8B,WAIA,KAAAG,kBACY,KAAAC,4BACA,KAAApC,SAAA,KAAAY,IAAAiB,SAAA,6CAAAjB,IAAAiB,SAAA,yCAQV,KAAAC,aACA,KAAAlB,IAAAiB,SAAA,WAKA,KAAAQ,QACG,KAAAlC,SACH,KAAAS,IAAAiB,SAAA,WAtEbS,EAAAA,EA2EJ,IAAApB,IAAA,kBAAAC,MAEQ,SAAAoB,GACN7B,KAAAV,SAAA,UAAAuC,EAAAC,OAAArB,KACF,IAAAD,IAAA,oBAAAC,MAEQ,SAAAoB,GACN,IAAAC,EAAAD,EAAAC,OACA9B,KAAAT,YAAAuC,EAAArB,KACF,IAAAD,IAAA,oBAAAC,MAEQ,SAAAoB,GACN,IAAAC,EAAAD,EAAAC,OACA9B,KAAAR,YAAAsC,EAAArB,KACF,IAAAD,IAAA,qBAAAC,MAEQ,SAAAsB,GAEN,WAAAA,GAAAA,GAAA,GAAAA,GAAA,GACF,IAAAvB,IAAA,qBAAAC,MAEQ,SAAAuB,EAAAC,GAGN,OACED,GAAA,GAAAA,GAAA,GAGJ,IAAAxB,IAAA,8BAAA0B,IAEA,eAAAC,EAAA,KACE,OAAO,SAAP1B,GAAA,MAAO,CAAsB2B,MAAAD,EAAArB,oBAAAL,GAAuC,CACtE,IAAAD,IAAA,8BAAA0B,IAEA,eAAAG,EAAA,KACE,OAAO,SAAP5B,GAAA,MAAO,CAAsB2B,MAAAC,EAAAtB,oBAAAN,EAAA4B,EAAA/C,UAAsD,CACrF,IAAAkB,IAAA,UAAAC,OAAA6B,GAAAC,EAAAA,EAAAA,IAAA3C,EAAAA,EAAAA,KAAA4C,GAEA,SAAAC,IAAA,IAAAC,EAAA,OAAA9C,EAAAA,EAAAA,KAAAC,GAAA,SAAA8C,GAAA,cAAAA,EAAA5C,GAAA,OAIE,OAHA2C,EAAA,CACEE,KAAA,GACAC,QAAA,CAAU7C,KAAAT,WAAiBS,KAAAR,WAAiBQ,KAAAV,WAC9CqD,EAAA5C,EAAA,EACA,KAAAE,QAAA6C,aAAAJ,GAAA,OACA1C,KAAAoB,eAAA,cAAAuB,EAAAvC,EAAA,MAAAqC,EAAAzC,KAAA,KACF,WAPA,OAAAsC,EAAA/B,MAAA,KAAA9B,UAAA,KAAA+B,IAAA,eAAAC,MASQ,WACNT,KAAAC,aAAA8C,GACAC,EAAAA,EAAAA,GAAA,sBAAmCC,OAAA,KAAAC,WACrC,MAAA1C,IAAA,SAAA0B,IAEA,WACE,MAAO,CACLiB,EAAAA,IACArE,EAAAA,EAAAA,IAAAsE,IAAAA,GAAApE,EAAAA,EAAAA,GAAA,wSAeJ,KAlCA,IAAAsD,E,CAkCA,CArLF,CAAAe,EAAAA,K,2BACcC,WAAA,K,uDAEAA,WAAA,K"}