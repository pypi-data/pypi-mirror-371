# https://packaging.python.org/en/latest/guides/writing-pyproject-toml/

[project]
name = "git-garden"
description = "A simple Python git wrapper to help manage multi-project maintenance."
dynamic = ["version"]
readme = "README.md"
requires-python = ">= 3.10"
dependencies = ["click"]
authors = [{name = "c0ff33-dev"}]
keywords = ["git"]

classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]

[project.urls]
Homepage = "https://github.com/c0ff33-dev/git-garden"
Documentation = "https://git-garden.readthedocs.io/latest/"
Repository = "https://github.com/c0ff33-dev/git-garden.git"

[project.scripts]
git-garden = "git_garden.cli:main"

[project.optional-dependencies]
dev = [
    "ruff",
    "sphinx",
    "sphinx-autodoc-typehints",
    "tox",
    "pytest",
    "pytest-cov",
    "mypy",
    "pydoclint"
]

# editable installs are only invoked in uv when the build system is defined
[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.targets.sdist]
# limit tarball to src files
include = [
    "src/git_garden",
    "/tests"
]

[tool.hatch.build.targets.wheel]
packages = ["src/git_garden"]

[tool.pytest.ini_options]
addopts = "-rs" # short test summary, disable output capturing (i.e. allow stdout to stream to terminal)
testpaths = ["tests"]

[tool.mypy]
mypy_path = "src"

[tool.ruff]
line-length = 120 # E501

# The defaults + ANN (flake8-annotations for typing) + line length (E501)
# + D* pydocstyle to catch missing docstrings + misc style conventions
lint.select = ["E4", "E7", "E9", "F", "ANN", "E501", "D101", "D102", "D103", "D106", "D201", "D202", 
"D207", "D208", "D209", "D210", "D211", "D213", "D300", "D301", "D403", "D415", "D417", "D419"]

[tool.pydoclint]
style = "sphinx"
exclude = "venv|.tox|.git"
skip-checking-short-docstrings = false

# these are already enforced through ruff (pydocstyle)
arg-type-hints-in-docstring = false
check-return-types = false
check-yield-types = false

[tool.tox]
envlist = ["py3.10", "py3.11", "py3.12", "py3.13"]

[tool.tox.env_run_base]
allowlist_externals = ["ruff", "pydoclint", "pytest", "mypy"]
deps = ["ruff", "pydoclint", "pytest", "pytest-cov", "mypy"]

# pr pipeline checks
[tool.tox.env.pr]
commands = [
    ["ruff", "format", ".", "--check"],
    ["ruff", "check", "."],
    ["pydoclint", "."],
    ["pytest", "--cov", "git_garden", "--cov-report", "lcov:tests/cov.info", "--cov-report", "term", "--junitxml", "tests/test-results.xml"],
    ["mypy", "-m", "git_garden"]
]

# read/write fixes (dev inner loop)
[tool.tox.env.fix]
commands = [
    ["ruff", "format", "."],
    ["ruff", "check", ".", "--fix"]
]