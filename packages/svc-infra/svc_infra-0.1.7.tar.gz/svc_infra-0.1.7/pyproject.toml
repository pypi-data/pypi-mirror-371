[tool.poetry]
name = "svc-infra"
version = "0.1.7"
description = "Infrastructure for building and deploying prod-ready services"
authors = ["Ali Khatami <aliikhatami94@gmail.com>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "svc_infra", from = "src" }]
keywords = ["fastapi", "sqlalchemy", "alembic", "auth", "infra", "async", "pydantic"]

classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Framework :: FastAPI",
    "Typing :: Typed",
]

[tool.poetry.urls]
"Homepage" = "https://github.com/<your-org>/svc-infra"
"Repository" = "https://github.com/<your-org>/svc-infra"
"Issues" = "https://github.com/<your-org>/svc-infra/issues"

[tool.poetry.dependencies]
python = ">=3.11,<4.0"

# Core surface: enough to use the FastAPI helpers & settings without pulling DB/auth stacks
fastapi = "^0.116.1"
pydantic-settings = "^2.10.1"
python-dotenv = "^1.1.1"
typer = "^0.16.1"

# Keep advanced pieces optional via extras (see [tool.poetry.extras] below)
sqlalchemy = {extras = ["asyncio"], version = "^2.0.43", optional = true}
alembic = {version = "^1.13.2", optional = true}
greenlet = {version = "^3", optional = true}

# Auth stack (optional)
fastapi-users = {extras = ["oauth", "sqlalchemy2"], version = "^14.0.1", optional = true}
fastapi-users-db-sqlalchemy = {version = "^7.0.0", optional = true}
authlib = {version = "^1.6.2", optional = true}
httpx-oauth = {version = "^0.16.1", optional = true}
passlib = {extras = ["bcrypt"], version = "^1.7.4", optional = true}
email-validator = {version = "^2.2.0", optional = true}

# Drivers (optional; choose one)
asyncpg = {version = "^0.30.0", optional = true}
aiosqlite = {version = "^0.20.0", optional = true}

# General HTTP client (used by some features); keep core if you truly need it
httpx = "^0.28.1"

# If mcp is not needed at runtime for all users, consider making it optional too
mcp = {version = "^1.13.0", optional = true}

[tool.poetry.extras]
db = ["sqlalchemy", "alembic", "greenlet"]
auth = ["fastapi-users", "fastapi-users-db-sqlalchemy", "authlib", "httpx-oauth", "passlib", "email-validator"]
postgres = ["asyncpg"]
sqlite = ["aiosqlite"]
mcp = ["mcp"]

# Dev/test tools only
[tool.poetry.group.dev.dependencies]
pytest = "^8.3.2"
pytest-asyncio = "^0.23.8"
ruff = "^0.6.9"
mypy = "^1.11.2"
types-requests = "^2.32.0.20241016"

[tool.poetry.scripts]
svc-infra-auth = "svc_infra.auth.cli:app"
svc-infra-db = "svc_infra.db.cli:app"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"