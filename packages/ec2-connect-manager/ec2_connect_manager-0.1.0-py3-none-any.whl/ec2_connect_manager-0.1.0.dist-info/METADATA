Metadata-Version: 2.4
Name: ec2-connect-manager
Version: 0.1.0
Summary: A CLI tool to manage and connect to AWS EC2 instances
Author-email: Your Name <your.email@example.com>
License: MIT License
        
        Copyright (c) 2024 Your Name
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
Project-URL: Homepage, https://github.com/yourusername/ec2-manager
Keywords: aws,ec2,ssh,cli
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: boto3>=1.26.0
Requires-Dist: requests>=2.28.0
Dynamic: license-file

Here's a comprehensive `README.md` file for your EC2 Manager project:

```markdown
# EC2 Manager

[![PyPI version](https://badge.fury.io/py/ec2-manager.svg)](https://badge.fury.io/py/ec2-manager)
[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)
[![Python 3.7+](https://img.shields.io/badge/python-3.7+-blue.svg)](https://www.python.org/downloads/)

A powerful CLI tool for managing and connecting to AWS EC2 instances with automatic security group management and configuration handling.

## Features

- üöÄ Easy connection to EC2 instances
- üîí Automatic security group management
- ‚öôÔ∏è Persistent configuration management
- üåç Region selection and management
- üíª Instance state handling (start/stop)
- üîë SSH key management
- üõ°Ô∏è Secure credential handling
- üìù Comprehensive logging

## Installation

```bash
pip install ec2-manager
```

## Prerequisites

1. Python 3.7 or higher
2. AWS Account and credentials
3. SSH key pairs for your EC2 instances

## Quick Start

1. Configure your AWS credentials:
```bash
aws configure
```

2. Run EC2 Manager:
```bash
ec2-manager
```

On first run, the tool will guide you through configuration setup.

## Configuration

The tool creates a configuration file at `~/.ec2manager/config.ini` with the following settings:

```ini
[DEFAULT]
ssh_key_path = ~/.ssh
default_region = us-east-1
default_username = ec2-user
security_group_protocol = tcp
security_group_port = 22
```

### Configuration Options

| Option | Description | Default |
|--------|-------------|---------|
| ssh_key_path | Path to SSH keys directory | ~/.ssh |
| default_region | Default AWS region | us-east-1 |
| default_username | Default SSH username | ec2-user |
| security_group_protocol | Security group protocol | tcp |
| security_group_port | Security group port | 22 |

## Usage

### Basic Usage

1. Start the tool:
```bash
ec2-manager
```

2. Select a region from the displayed list

3. Choose an instance to connect to

4. Enter username (or press Enter for default)

### Features in Detail

#### Region Selection
- Lists all available AWS regions
- Remembers last used region
- Easy switching between regions

#### Instance Management
- Lists all instances with details:
  - Instance ID
  - Name
  - Status
  - Public IP
- Supports starting stopped instances
- Handles instance state transitions

#### Security Group Management
- Automatically manages security group rules
- Adds rules for your current IP
- Removes rules when disconnecting
- Supports custom protocols and ports

#### SSH Connection
- Automatic SSH key selection
- Custom username support
- Handles different instance states
- Secure connection settings

## Security

- Configurations stored in protected directory (`~/.ec2manager`)
- Secure file permissions (600 for config files)
- Temporary security group rules
- No storage of sensitive credentials

## Development

### Setting Up Development Environment

1. Clone the repository:
```bash
git clone https://github.com/yourusername/ec2-manager.git
cd ec2-manager
```

2. Create a virtual environment:
```bash
python -m venv venv
source venv/bin/activate  # On Windows: venv\Scripts\activate
```

3. Install development dependencies:
```bash
pip install -e ".[dev]"
```

### Running Tests

```bash
pytest
```

### Code Formatting

```bash
# Format code
black src tests

# Sort imports
isort src tests

# Check style
flake8 src tests
```

## Contributing

Contributions are welcome! Please feel free to submit a Pull Request.

1. Fork the repository
2. Create your feature branch (`git checkout -b feature/AmazingFeature`)
3. Commit your changes (`git commit -m 'Add some AmazingFeature'`)
4. Push to the branch (`git push origin feature/AmazingFeature`)
5. Open a Pull Request

## Common Issues and Solutions

### Issue: "Unable to locate credentials"
- Ensure AWS credentials are configured: `aws configure`
- Check `~/.aws/credentials` exists and has valid credentials

### Issue: "Permission denied (publickey)"
- Verify SSH key exists in configured path
- Check key permissions (should be 600)
- Confirm correct username for instance

### Issue: "Connection timed out"
- Verify security group rules
- Check instance public IP is accessible
- Ensure instance is running

## License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

## Acknowledgments

- AWS SDK for Python (Boto3)
- The AWS CLI team for inspiration
- All contributors and users

## Support

If you encounter any issues or need support, please:

1. Check the [Common Issues](#common-issues-and-solutions) section
2. Search existing GitHub issues
3. Create a new issue if needed


## Project Status

Active development - Accepting contributions

## Author

Meraj (meru.meraj64@gmail.com)

---

Made with ‚ù§Ô∏è by meraj64


