Metadata-Version: 2.4
Name: fourlabs-auth
Version: 0.1.9
Summary: Autentica√ß√£o por email fourlabs para Django
Author: Fourlabs
Author-email: fourlabs-un2@foursys.com.br
License: MIT
Classifier: Framework :: Django
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Requires-Dist: Django>=5.2
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: license
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# üîê Fourlabs Auth

Autentica√ß√£o via e-mail corporativo para projetos Django, com c√≥digo de verifica√ß√£o por e-mail, gerenciamento de conta, exporta√ß√£o de dados e mais.

---

## üöÄ Instala√ß√£o

### 1. Instale via pip (local ou via PyPI)

```bash
pip install fourlabs-auth
```

## ‚öôÔ∏è Configura√ß√£o

### 1. Adicione fourlabs_auth no INSTALLED_APPS

```python
# settings.py

INSTALLED_APPS = [
    ...
    'fourlabs_auth',
]
```


### 2. Configure o modelo de usu√°rio customizado

```bash
AUTH_USER_MODEL = 'fourlabs_auth.User'
```

### 3. Middleware e context processors (mensagens)

```python
MIDDLEWARE = [
    ...
    'django.contrib.messages.middleware.MessageMiddleware',
]

TEMPLATES = [
    {
        ...
        'OPTIONS': {
            'context_processors': [
                ...
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

```


### 4. Configure os templates e arquivos est√°ticos (se necess√°rio)

```python

STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / "static"]

TEMPLATES = [
    {
        ...
        'DIRS': [BASE_DIR / "templates"],
    }
]


```

## üîó URLs

#### Inclua as rotas da biblioteca no seu urls.py principal:

```python
from django.urls import path, include

urlpatterns = [
    ...
    path('auth/', include('fourlabs_auth.urls')),
]

```

## üíæ Migra√ß√µes

```bash
python manage.py makemigrations fourlabs_auth
python manage.py migrate
```


## üßë‚Äçüíº Funcionalidades Inclu√≠das

Rota	Descri√ß√£o
/auth/login/	Solicita o e-mail corporativo
/auth/verify/	Verifica o c√≥digo recebido
/auth/edit-user-name/	Atualiza o nome do usu√°rio
/auth/change-password/	Altera a senha do usu√°rio
/auth/delete-account/	Encerra a conta do usu√°rio
/auth/export-user-data/	Exporta os dados em JSON
/auth/logout/	Logout seguro do usu√°rio


## ‚úèÔ∏è Customiza√ß√£o
#### Voc√™ pode sobrescrever os templates HTML criando arquivos com o mesmo nome em:

```bash
templates/accounts/
```

## üì¶ Exemplo de fluxo de autentica√ß√£o

Acesse /auth/login/

Insira seu email da empresa (@foursys.com.br)

Verifique o c√≥digo enviado e fa√ßa login


## üß™ Requisitos

Django >= 3.2
Python >= 3.8

## Gerar o Pacote

```bash
python setup.py sdist bdist_wheel
```

## Publicar no PyPI

```bash
twine upload dist/*
```


## Dicas para Atualiza√ß√µes

#### Aumente a vers√£o em setup.py (version='0.1.1', por exemplo)

#### Apague a pasta dist/:

```bash
rm -rf dist/
```

#### Gere e envie novamente:

```bash
python setup.py sdist bdist_wheel
twine upload dist/*
```
