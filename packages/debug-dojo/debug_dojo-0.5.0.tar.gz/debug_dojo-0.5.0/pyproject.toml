[project]
    authors = [ { name = "bwrob", email = "bartosz.marcin.wroblewski@gmail.com" } ]
    classifiers = [
        "Intended Audience :: Developers",
        "Operating System :: OS Independent",
        "Programming Language :: Python :: 3.10",
        "Programming Language :: Python :: 3.11",
        "Programming Language :: Python :: 3.12",
        "Programming Language :: Python :: 3.13",
        "Topic :: Software Development :: Debuggers",
        "Topic :: Software Development :: Libraries :: Python Modules",
    ]
    dependencies = [
        "debugpy>=1.8.0",
        "ipdb>=0.13.0",
        "pudb>=2020.1",
        "pydantic>=2.11.7",
        "rich>=12.0.0",
        "tomlkit>=0.13.3",
        "typer>=0.15.0",
    ]
    description = "🏣 debug dojo, a place for zen debugging"
    keywords = [ "debugging", "inspection", "tools", "development" ]
    license = 'MIT'
    license-files = [ 'LICENSE' ]
    name = "debug-dojo"
    readme = "README.md"
    requires-python = ">=3.10,<3.14"
version = "0.5.0"

    [project.urls]
        Changelog     = "https://bwrob.github.io/debug-dojo/changelog/"
        Documentation = "https://bwrob.github.io/debug-dojo/"
        Homepage      = "https://bwrob.github.io/debug-dojo/"
        Source        = "https://github.com/bwrob/debug-dojo/"

    [project.scripts]
        "dojo" = "debug_dojo._cli:main"


[dependency-groups]

    dev = [
        "basedpyright>=1.31.2",
        "coverage>=7.10.4",
        "poethepoet>=0.37.0",
        "pytest>=8.4.1",
        "ruff>=0.12.9",
]
    docs = [
        "mkdocs>=1.6.1",
        "mkdocs-git-authors-plugin>=0.10.0",
        "mkdocs-git-committers-plugin-2>=2.5.0",
        "mkdocs-git-revision-date-localized-plugin>=1.4.7",
        "mkdocs-material>=9.6.17",
        "mkdocs-typer2>=0.1.5",
        "mkdocstrings-python>=1.17.0",
    ]


[tool.uv]
    default-groups   = "all"
    package          = true
    required-version = ">=0.8.0"


[tool.basedpyright]
    ignore           = [ "examples", "tests/assets" ]
    pythonVersion    = "3.10"
    strict           = [ "src/debug_dojo/*" ]
    typeCheckingMode = "all"


[tool.ruff]
    line-length    = 88
    target-version = "py310"

    [tool.ruff.lint]
        exclude = [ "examples" ]
        ignore  = [ "COM", "D203", "D211", "D213" ]
        select  = [ "ALL" ]

        [tool.ruff.lint.per-file-ignores]
            "examples/*"                    = [ "INP001" ]
            "examples/test_target.py"       = [ "F821" ]
            "src/debug_dojo/_installers.py" = [ "PLC0415", "T100" ]
            "tests/*"                       = [ "S101", "T201" ]
            "tests/assets/*"                = [ "T201", "INP001", "F821" ]

    [tool.ruff.format]
        docstring-code-format = true


[tool.poe.tasks]

    format     = { cmd = "ruff format --diff --config=pyproject.toml", help = "Check code formatting using ruff." }
    lint       = { cmd = "uv run ruff check --config=pyproject.toml", help = "Check code rules using ruff." }
    precommit  = { cmd = "pre-commit run --all-files", help = "Run all code quality checks." }
    test       = { cmd = "pytest --verbose --doctest-modules", help = "Run tests using pytest." }
    type-check = { cmd = "basedpyright", help = "Check static typing using basedpyright." }

    [tool.poe.tasks.code-quality]
        help        = "Run all code quality checks."
        ignore_fail = "return_non_zero"
        sequence    = [ "fix", "precommit", "format", "lint", "type-check" ]

    [tool.poe.tasks.fix]
        default_item_type = "cmd"
        help = "Code quality fixes using ruff."
        ignore_fail = "return_non_zero"
        sequence = [
            "ruff check --fix --unsafe-fixes --config=pyproject.toml",
            "ruff format --config=pyproject.toml",
        ]

    [tool.poe.tasks.publish]
        sequence = [
            "code-quality",
            { cmd = "rm -rf dist" },
            { cmd = "uv build" },
            { cmd = "uv publish" },
        ]

[tool.docformatter]
    black   = true
    non-cap = [ "dojo" ]
