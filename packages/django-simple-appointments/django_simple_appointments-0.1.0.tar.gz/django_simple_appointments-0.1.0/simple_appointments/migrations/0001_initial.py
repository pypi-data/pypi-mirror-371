# Generated by Django 5.2.4 on 2025-08-21 21:00

import datetime
import django.db.models.deletion
import simple_appointments.mixin_models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=7)),
                ('duration_time', models.DurationField(default=datetime.timedelta(seconds=3600))),
            ],
            options={
                'verbose_name': 'activity',
                'verbose_name_plural': 'activities',
            },
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(blank=True, choices=[('', 'Not specified'), ('pending', 'Pending'), ('confirmed_by_recipients', 'Confirmed by Recipients'), ('canceled_by_recipients', 'Canceled by Recipients'), ('canceled_by_providers', 'Canceled by Providers'), ('completed', 'Completed'), ('no_show', 'No-show')], default='pending', max_length=30)),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=7)),
                ('auto_price', models.BooleanField(default=True)),
                ('is_blocked', models.BooleanField(default=False)),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField(blank=True)),
                ('auto_end_time', models.BooleanField(default=True)),
                ('prevents_overlap', models.BooleanField(default=True)),
            ],
            bases=(models.Model, simple_appointments.mixin_models.AppointmentValidateMixin),
        ),
        migrations.CreateModel(
            name='AppointmentActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='simple_appointments.activity')),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='simple_appointments.appointment')),
            ],
            bases=(models.Model, simple_appointments.mixin_models.ActivityMixin),
        ),
        migrations.AddField(
            model_name='appointment',
            name='activities',
            field=models.ManyToManyField(related_name='appointments_as_activities', through='simple_appointments.AppointmentActivity', to='simple_appointments.activity'),
        ),
        migrations.CreateModel(
            name='AppointmentProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='simple_appointments.appointment')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            bases=(models.Model, simple_appointments.mixin_models.ProviderValidateMixin),
        ),
        migrations.AddField(
            model_name='appointment',
            name='providers',
            field=models.ManyToManyField(related_name='appointments_as_provider', through='simple_appointments.AppointmentProvider', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='AppointmentRecipient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='simple_appointments.appointment')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='appointment',
            name='recipients',
            field=models.ManyToManyField(related_name='appointments_as_recipient', through='simple_appointments.AppointmentRecipient', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='appointmentactivity',
            index=models.Index(fields=['activity', 'appointment'], name='simple_appo_activit_78cfe8_idx'),
        ),
        migrations.AddIndex(
            model_name='appointmentprovider',
            index=models.Index(fields=['provider', 'appointment'], name='simple_appo_provide_c3087d_idx'),
        ),
        migrations.AddConstraint(
            model_name='appointmentprovider',
            constraint=models.UniqueConstraint(fields=('appointment', 'provider'), name='unique_appointment_provider'),
        ),
        migrations.AddIndex(
            model_name='appointmentrecipient',
            index=models.Index(fields=['recipient', 'appointment'], name='simple_appo_recipie_c3990d_idx'),
        ),
        migrations.AddConstraint(
            model_name='appointmentrecipient',
            constraint=models.UniqueConstraint(fields=('appointment', 'recipient'), name='unique_appointment_recipient'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['date'], name='simple_appo_date_6a6e4d_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['status'], name='simple_appo_status_eb8066_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['is_blocked'], name='simple_appo_is_bloc_d773ac_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['date', 'start_time'], name='simple_appo_date_074480_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['date', 'end_time'], name='simple_appo_date_f471ee_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['date', 'start_time', 'end_time'], name='simple_appo_date_872c66_idx'),
        ),
    ]
