# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .task_response_kind import TaskResponseKind
from .task_response_results import TaskResponseResults
from .task_response_status import TaskResponseStatus


class TaskResponse(UncheckedBaseModel):
    id: str
    object: str
    kind: TaskResponseKind
    input: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None
    options: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None
    output: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None
    status: TaskResponseStatus
    progress: typing.Optional[int] = None
    error: typing.Optional[str] = None
    created_by: typing.Optional[str] = None
    created: dt.datetime
    updated: dt.datetime
    parent_id: typing.Optional[str] = None
    workflow: typing.Optional[typing.List[typing.Optional[typing.Any]]] = None
    results: typing.Optional[TaskResponseResults] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
