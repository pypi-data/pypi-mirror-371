from _typeshed import Incomplete
from shops_payment_processing.logging_config import logger as logger
from shops_payment_processing.models.order import OrderResponseModel as OrderResponseModel, UserBasketResponseModel as UserBasketResponseModel
from shops_payment_processing.services.base import BasePaymentsAPI as BasePaymentsAPI, CreateInvoiceRequest as CreateInvoiceRequest, CreateInvoiceResponse as CreateInvoiceResponse, PaymentStatusResponse as PaymentStatusResponse, RefundRequest as RefundRequest, RefundResponse as RefundResponse

def configure_description(basket: UserBasketResponseModel): ...

class LifePayAPI(BasePaymentsAPI):
    CALLBACK_BASE_URL: Incomplete
    login: Incomplete
    api_key: Incomplete
    def __init__(self, callback_base_url: str, **kwargs) -> None: ...
    async def create_sbp_invoice_legacy(self, shop_name: str, login: str, api_key: str, order: OrderResponseModel): ...
    async def create_invoice(self, req: CreateInvoiceRequest) -> CreateInvoiceResponse: ...
    async def get_payment_status(self, payment_id: str) -> PaymentStatusResponse: ...
    async def refund(self, req: RefundRequest) -> RefundResponse: ...
