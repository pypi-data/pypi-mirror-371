from _typeshed import Incomplete
from fastapi import HTTPException as HTTPException
from shops_payment_processing.logging_config import logger as logger
from shops_payment_processing.models.order import OrderResponseModel as OrderResponseModel
from shops_payment_processing.services.base import BasePaymentsAPI as BasePaymentsAPI, CreateInvoiceRequest as CreateInvoiceRequest, CreateInvoiceResponse as CreateInvoiceResponse, PaymentStatusResponse as PaymentStatusResponse, RefundRequest as RefundRequest, RefundResponse as RefundResponse

class YooKassaAPI(BasePaymentsAPI):
    account_id: Incomplete
    secret_key: Incomplete
    def __init__(self, account_id: str, secret_key: str, **kwargs) -> None: ...
    async def create_sbp_invoice_legacy(self, shop_name: str, order: OrderResponseModel, redirect_url: str, receipt_email: str): ...
    async def create_invoice(self, req: CreateInvoiceRequest) -> CreateInvoiceResponse: ...
    async def get_payment_status(self, payment_id: str) -> PaymentStatusResponse: ...
    async def refund(self, req: RefundRequest) -> RefundResponse: ...
