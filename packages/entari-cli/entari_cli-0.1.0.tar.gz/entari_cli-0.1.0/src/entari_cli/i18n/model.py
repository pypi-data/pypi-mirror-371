# This file is @generated by tarina.lang CLI tool
# It is not intended for manual editing.

from tarina.lang.model import LangItem, LangModel


class EntariCliCommandsInitOptions:
    python: LangItem = LangItem("entari_cli", "commands.init.options.python")
    pip_args: LangItem = LangItem("entari_cli", "commands.init.options.pip_args")


class EntariCliCommandsInitMessages:
    success: LangItem = LangItem("entari_cli", "commands.init.messages.success")
    initialized: LangItem = LangItem("entari_cli", "commands.init.messages.initialized")


class EntariCliCommandsInit:
    description: LangItem = LangItem("entari_cli", "commands.init.description")
    options = EntariCliCommandsInitOptions
    messages = EntariCliCommandsInitMessages


class EntariCliCommandsAddOptions:
    disabled: LangItem = LangItem("entari_cli", "commands.add.options.disabled")
    optional: LangItem = LangItem("entari_cli", "commands.add.options.optional")
    priority: LangItem = LangItem("entari_cli", "commands.add.options.priority")


class EntariCliCommandsAddPrompts:
    name: LangItem = LangItem("entari_cli", "commands.add.prompts.name")
    failed: LangItem = LangItem("entari_cli", "commands.add.prompts.failed")
    success: LangItem = LangItem("entari_cli", "commands.add.prompts.success")


class EntariCliCommandsAdd:
    description: LangItem = LangItem("entari_cli", "commands.add.description")
    options = EntariCliCommandsAddOptions
    prompts = EntariCliCommandsAddPrompts


class EntariCliCommandsNewOptions:
    static: LangItem = LangItem("entari_cli", "commands.new.options.static")
    application: LangItem = LangItem("entari_cli", "commands.new.options.application")
    file: LangItem = LangItem("entari_cli", "commands.new.options.file")
    disabled: LangItem = LangItem("entari_cli", "commands.new.options.disabled")
    optional: LangItem = LangItem("entari_cli", "commands.new.options.optional")
    priority: LangItem = LangItem("entari_cli", "commands.new.options.priority")
    python: LangItem = LangItem("entari_cli", "commands.new.options.python")
    pip_args: LangItem = LangItem("entari_cli", "commands.new.options.pip_args")


class EntariCliCommandsNewPrompts:
    is_plugin_project: LangItem = LangItem("entari_cli", "commands.new.prompts.is_plugin_project")
    plugin_name: LangItem = LangItem("entari_cli", "commands.new.prompts.plugin_name")
    plugin_version: LangItem = LangItem("entari_cli", "commands.new.prompts.plugin_version")
    plugin_description: LangItem = LangItem("entari_cli", "commands.new.prompts.plugin_description")
    plugin_author_name: LangItem = LangItem("entari_cli", "commands.new.prompts.plugin_author_name")
    plugin_author_email: LangItem = LangItem("entari_cli", "commands.new.prompts.plugin_author_email")
    python_requires: LangItem = LangItem("entari_cli", "commands.new.prompts.python_requires")
    license: LangItem = LangItem("entari_cli", "commands.new.prompts.license")
    is_single_file: LangItem = LangItem("entari_cli", "commands.new.prompts.is_single_file")
    is_disposable: LangItem = LangItem("entari_cli", "commands.new.prompts.is_disposable")


class EntariCliCommandsNewMessages:
    invalid: LangItem = LangItem("entari_cli", "commands.new.messages.invalid")
    corrected: LangItem = LangItem("entari_cli", "commands.new.messages.corrected")
    keep: LangItem = LangItem("entari_cli", "commands.new.messages.keep")
    installed: LangItem = LangItem("entari_cli", "commands.new.messages.installed")
    exists: LangItem = LangItem("entari_cli", "commands.new.messages.exists")
    created: LangItem = LangItem("entari_cli", "commands.new.messages.created")


class EntariCliCommandsNew:
    description: LangItem = LangItem("entari_cli", "commands.new.description")
    options = EntariCliCommandsNewOptions
    prompts = EntariCliCommandsNewPrompts
    messages = EntariCliCommandsNewMessages


class EntariCliCommandsRemovePrompts:
    name: LangItem = LangItem("entari_cli", "commands.remove.prompts.name")
    success: LangItem = LangItem("entari_cli", "commands.remove.prompts.success")


class EntariCliCommandsRemove:
    description: LangItem = LangItem("entari_cli", "commands.remove.description")
    prompts = EntariCliCommandsRemovePrompts


class EntariCliCommandsRunOptions:
    python: LangItem = LangItem("entari_cli", "commands.run.options.python")


class EntariCliCommandsRun:
    description: LangItem = LangItem("entari_cli", "commands.run.description")
    options = EntariCliCommandsRunOptions


class EntariCliCommandsGenerateMessages:
    generated: LangItem = LangItem("entari_cli", "commands.generate.messages.generated")


class EntariCliCommandsGenerate:
    description: LangItem = LangItem("entari_cli", "commands.generate.description")
    messages = EntariCliCommandsGenerateMessages


class EntariCliCommandsVersion:
    description: LangItem = LangItem("entari_cli", "commands.version.description")


class EntariCliCommandsConfigOptions:
    new: LangItem = LangItem("entari_cli", "commands.config.options.new")
    current: LangItem = LangItem("entari_cli", "commands.config.options.current")
    dev: LangItem = LangItem("entari_cli", "commands.config.options.dev")


class EntariCliCommandsConfigMessages:
    exist: LangItem = LangItem("entari_cli", "commands.config.messages.exist")
    created: LangItem = LangItem("entari_cli", "commands.config.messages.created")
    not_supported: LangItem = LangItem("entari_cli", "commands.config.messages.not_supported")
    current: LangItem = LangItem("entari_cli", "commands.config.messages.current")


class EntariCliCommandsConfig:
    path: LangItem = LangItem("entari_cli", "commands.config.path")
    description: LangItem = LangItem("entari_cli", "commands.config.description")
    options = EntariCliCommandsConfigOptions
    messages = EntariCliCommandsConfigMessages


class EntariCliCommands:
    init = EntariCliCommandsInit
    add = EntariCliCommandsAdd
    new = EntariCliCommandsNew
    remove = EntariCliCommandsRemove
    run = EntariCliCommandsRun
    generate = EntariCliCommandsGenerate
    version = EntariCliCommandsVersion
    config = EntariCliCommandsConfig


class EntariCliErrors:
    python_not_found: LangItem = LangItem("entari_cli", "errors.python_not_found")
    invalid_project_name: LangItem = LangItem("entari_cli", "errors.invalid_project_name")


class EntariCliConfig:
    ext_failed: LangItem = LangItem("entari_cli", "config.ext_failed")


class EntariCliProject:
    select_python: LangItem = LangItem("entari_cli", "project.select_python")
    please_select: LangItem = LangItem("entari_cli", "project.please_select")
    install_failed: LangItem = LangItem("entari_cli", "project.install_failed")
    no_python_found: LangItem = LangItem("entari_cli", "project.no_python_found")
    invalid_selection: LangItem = LangItem("entari_cli", "project.invalid_selection")


class EntariCliVenv:
    use: LangItem = LangItem("entari_cli", "venv.use")
    create: LangItem = LangItem("entari_cli", "venv.create")
    ask_create: LangItem = LangItem("entari_cli", "venv.ask_create")


class EntariCli:
    commands = EntariCliCommands
    errors = EntariCliErrors
    config = EntariCliConfig
    project = EntariCliProject
    venv = EntariCliVenv


class Lang(LangModel):
    entari_cli = EntariCli
