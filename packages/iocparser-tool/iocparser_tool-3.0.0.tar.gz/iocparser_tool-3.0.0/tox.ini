[tox]
envlist = py38,py39,py310,py311,py312,lint,security,type,docs
isolated_build = true
skip_missing_interpreters = true

[testenv]
deps =
    pytest>=7.0
    pytest-cov>=4.0
    pytest-benchmark>=4.0
commands =
    pytest tests/ -v --cov=iocparser --cov-report=term-missing --cov-report=xml

[testenv:lint]
deps =
    ruff>=0.1.9
    pylint>=3.0
commands =
    ruff check iocparser tests
    ruff format --check iocparser tests
    pylint iocparser

[testenv:security]
deps =
    bandit[toml]>=1.7.6
    safety>=2.3
    pip-audit
commands =
    bandit -r iocparser -ll
    safety check --json
    pip-audit

[testenv:type]
deps =
    mypy>=1.8.0
    types-requests
    types-setuptools
    types-colorama
    types-tqdm
commands =
    mypy iocparser --ignore-missing-imports

[testenv:docs]
deps =
    pdoc3
commands =
    pdoc --html --output-dir docs iocparser --force

[testenv:format]
deps =
    ruff>=0.1.9
commands =
    ruff check --fix iocparser tests
    ruff format iocparser tests

[testenv:benchmark]
deps =
    pytest>=7.0
    pytest-benchmark>=4.0
commands =
    pytest tests/test_performance.py -v --benchmark-only

[testenv:coverage]
deps =
    pytest>=7.0
    pytest-cov>=4.0
    coverage[toml]>=7.0
commands =
    coverage run -m pytest tests/
    coverage report
    coverage html
    coverage xml

[testenv:pre-commit]
deps =
    pre-commit
commands =
    pre-commit run --all-files

# Flake8 configuration (if needed for compatibility)
[flake8]
max-line-length = 100
extend-ignore = E203, W503, E501
exclude = 
    .git,
    __pycache__,
    .tox,
    .eggs,
    *.egg,
    build,
    dist,
    venv,
    .venv

# Coverage configuration
[coverage:run]
source = iocparser
omit = 
    */tests/*
    */test_*.py
    */__pycache__/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if __name__ == .__main__.:
    raise AssertionError
    raise NotImplementedError
    if TYPE_CHECKING:

# Pytest configuration
[pytest]
addopts = 
    -v
    --strict-markers
    --tb=short
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*