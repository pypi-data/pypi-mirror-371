"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .assetrefdto import AssetRefDto, AssetRefDtoTypedDict
from enum import Enum
import pydantic
from que_media.types import BaseModel
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict, deprecated


@deprecated(
    "warning: ** DEPRECATED ** - This will be removed in a future release, please migrate away from it as soon as possible."
)
class SignRequestMode(str, Enum):
    r"""The signing mode to use.
    * `server_measure`: The server will download the asset, calculate its hash, and embed the manifest. Requires `manifest_json`.
    * `client_hash`: The client provides the asset hash directly. (Not yet implemented).

    """

    SERVER_MEASURE = "server_measure"
    CLIENT_HASH = "client_hash"


class ManifestJSONTypedDict(TypedDict):
    r"""The C2PA manifest to embed in the asset. This is required when `mode` is `server_measure`."""


class ManifestJSON(BaseModel):
    r"""The C2PA manifest to embed in the asset. This is required when `mode` is `server_measure`."""


class SignRequestTypedDict(TypedDict):
    asset: AssetRefDtoTypedDict
    r"""A reference to a digital asset. The asset can be provided inline as Base64, via a public URL, or by referencing an S3 object."""
    mode: SignRequestMode
    r"""The signing mode to use.
    * `server_measure`: The server will download the asset, calculate its hash, and embed the manifest. Requires `manifest_json`.
    * `client_hash`: The client provides the asset hash directly. (Not yet implemented).

    """
    manifest_json: NotRequired[ManifestJSONTypedDict]
    r"""The C2PA manifest to embed in the asset. This is required when `mode` is `server_measure`."""


class SignRequest(BaseModel):
    asset: AssetRefDto
    r"""A reference to a digital asset. The asset can be provided inline as Base64, via a public URL, or by referencing an S3 object."""

    mode: Annotated[
        SignRequestMode,
        pydantic.Field(
            deprecated="warning: ** DEPRECATED ** - This will be removed in a future release, please migrate away from it as soon as possible."
        ),
    ]
    r"""The signing mode to use.
    * `server_measure`: The server will download the asset, calculate its hash, and embed the manifest. Requires `manifest_json`.
    * `client_hash`: The client provides the asset hash directly. (Not yet implemented).

    """

    manifest_json: Optional[ManifestJSON] = None
    r"""The C2PA manifest to embed in the asset. This is required when `mode` is `server_measure`."""
