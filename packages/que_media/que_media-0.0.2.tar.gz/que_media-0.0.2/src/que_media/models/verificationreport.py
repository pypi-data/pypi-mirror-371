"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import pydantic
from pydantic import ConfigDict
from que_media.types import BaseModel
from typing import Any, Dict, List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class ValidationStatusTypedDict(TypedDict):
    code: NotRequired[str]
    explanation: NotRequired[str]


class ValidationStatus(BaseModel):
    code: Optional[str] = None

    explanation: Optional[str] = None


class SummaryTypedDict(TypedDict):
    is_trusted: NotRequired[bool]
    signer: NotRequired[str]


class Summary(BaseModel):
    is_trusted: Annotated[Optional[bool], pydantic.Field(alias="isTrusted")] = None

    signer: Optional[str] = None


class VerificationReportTypedDict(TypedDict):
    validation_status: NotRequired[List[ValidationStatusTypedDict]]
    summary: NotRequired[SummaryTypedDict]


class VerificationReport(BaseModel):
    model_config = ConfigDict(
        populate_by_name=True, arbitrary_types_allowed=True, extra="allow"
    )
    __pydantic_extra__: Dict[str, Any] = pydantic.Field(init=False)

    validation_status: Annotated[
        Optional[List[ValidationStatus]], pydantic.Field(alias="validationStatus")
    ] = None

    summary: Optional[Summary] = None

    @property
    def additional_properties(self):
        return self.__pydantic_extra__

    @additional_properties.setter
    def additional_properties(self, value):
        self.__pydantic_extra__ = value  # pyright: ignore[reportIncompatibleVariableOverride]
