name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install ffmpeg
        run: sudo apt-get update && sudo apt-get install -y ffmpeg
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]
      - name: Lint
        run: flake8
      - name: Run tests
        run: pytest -qname: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
        pip install -e .
        python -m pip install types-tqdm
    - name: Run unit tests
      run: |
        pytest tests/test_downloader.py -v
    - name: Install ffmpeg for integration tests
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg
    - name: Run integration tests
      run: |
        pytest tests/test_integration.py -v
      env:
        # Skip actual download test if no URL provided
        INTEGRATION_TEST_URL: ${{ secrets.INTEGRATION_TEST_URL }}
    - name: Type check
      run: |
        mypy src/bt_recover
    - name: Style check
      run: |
        black --check src/bt_recover
        flake8 src/bt_recover

  docker:
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v4
    - name: Build Docker image
      run: docker build -t bt-recover .
    - name: Test Docker image
      run: |
        docker run --rm bt-recover --version 