[tox]
envlist = docs,linters
minversion = 3.18.0
ignore_basepython_conflict = True

[testenv]
usedevelop = True
basepython = python3
setenv =
   VIRTUAL_ENV={envdir}
   PYTHON=coverage run --source openstack_governance --parallel-mode
   OS_STDOUT_CAPTURE=1
   OS_STDERR_CAPTURE=1
   OS_DEBUG=1
   OS_LOG_CAPTURE=1
deps =
  -r{toxinidir}/requirements.txt
  -r{toxinidir}/test-requirements.txt
commands =
    stestr run '{posargs}'
    coverage combine
    coverage html -d cover
    coverage xml -o cover/coverage.xml
    coverage report --show-missing

[testenv:linters]
basepython = python3
allowlist_externals =
  bash
  {toxinidir}/tools/check_projects_yaml_alphabetized.sh
  {toxinidir}/tools/validate_repositories.py
commands =
  osg-check-schema
  bash -c "find {toxinidir}        \
            \( -name .tox -prune \)         \
            -o -type f -name '*.yaml'       \
            -print0 | xargs -0 yamllint"
           {toxinidir}/tools/check_projects_yaml_alphabetized.sh
  flake8
  whereto {toxinidir}/doc/source/_extra/.htaccess {toxinidir}/doc/test/redirect-tests.txt
  {toxinidir}/tools/validate_repositories.py

[testenv:validate-legacy]
envdir = {toxworkdir}/linters
allowlist_externals =
  {toxinidir}/tools/validate-legacy.py
commands =
  {toxinidir}/tools/validate-legacy.py

[testenv:validate_acs]
allowlist_externals =
  {toxinidir}/tools/validate_acs.py
commands = {toxinidir}/tools/validate_acs.py

[testenv:pep8]
commands =
  flake8

[testenv:venv]
commands = {posargs}

[testenv:docs]
deps = -c{env:TOX_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/master}
       -r{toxinidir}/doc/requirements.txt
allowlist_externals =
  find
  rm
commands =
  rm -Rf doc/build
  find reference/projects -name '*.rst' -a '!' -name index.rst -delete
  sphinx-build -W -b html doc/source doc/build/html

[testenv:check-review-status]
deps =
  requests
  prettytable
allowlist_externals =
  {toxinidir}/tools/check_review_status.py
commands = {toxinidir}/tools/check_review_status.py
