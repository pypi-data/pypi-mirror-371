[build-system]
requires = ["maturin>=1.0,<2.0"]
build-backend = "maturin"

[project]
name = "jsonschema_rs"
dynamic = ["version"]
description = "A high-performance JSON Schema validator for Python"
keywords = ["jsonschema", "validation", "rust"]
authors = [
    {name = "Dmitry Dygalo", email = "dmitry@dygalo.dev"}
]
maintainers = [
    {name = "Dmitry Dygalo", email = "dmitry@dygalo.dev"}
]
readme = "README.md"
license = { text = "MIT" }
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Rust",
    "Topic :: File Formats :: JSON :: JSON Schema",
]
requires-python = ">=3.8"

[project.optional-dependencies]
tests = [
    "flask>=2.2.5",
    "hypothesis>=6.79.4",
    "pytest>=7.4.4",
]
bench = [
    "fastjsonschema>=2.20.0",
    "jsonschema>=4.23.0",
    "pytest-benchmark>=4.0.0",
]

[project.urls]
Homepage = "https://github.com/Stranger6667/jsonschema/tree/master/crates/jsonschema-py"
Changelog = "https://github.com/Stranger6667/jsonschema/blob/master/crates/jsonschema-py/CHANGELOG.md"
"Bug Tracker" = "https://github.com/Stranger6667/jsonschema/issues"
Source = "https://github.com/Stranger6667/jsonschema"
Funding = 'https://github.com/sponsors/Stranger6667'

[tool.maturin]
python-source = "python"
strip = true
include = [{ path = "rust-toolchain.toml", format = ["sdist", "wheel"] }]
manifest-path = "crates/jsonschema-py/Cargo.toml"

[tool.ruff]
line-length = 120
target-version = "py38"

[tool.ruff.lint]
select = [
  "E", # pycodestyle errors
  "W", # pycodestyle warnings
  "F", # pyflakes
  "C", # flake8-comprehensions
  "B", # flake8-bugbear
  "D", # pydocstyle
]
ignore = [
  "E501", # Line too long
  "B008", # Do not perform function calls in argument defaults
  "C901", # Too complex
  "D100", # Missing docstring in public module
  "D101", # Missing docstring in public class
  "D102", # Missing docstring in public method
  "D103", # Missing docstring in public function
  "D104", # Missing docstring in public package
  "D105", # Missing docstring in magic method
  "D107", # Missing docstring in `__init__`
  "D203", # One blank line before class
  "D213", # Multiline summary second line
  "D401", # Imperative mood
]

[tool.ruff.lint.isort]
known-first-party = ["jsonschema_rs"]
known-third-party = ["hypothesis", "pytest", "jsonschema", "fastjsonschema"]

[tool.ruff.format]
skip-magic-trailing-comma = false
