{"version":3,"file":"JudQQAO9.js","sources":["../../../../../../src/lib/apis/files/index.ts"],"sourcesContent":["import { WEBUI_API_BASE_URL } from '$lib/constants';\nimport { splitStream } from '$lib/utils';\n\nexport const uploadFile = async (token: string, file: File, metadata?: object | null) => {\n\tconst data = new FormData();\n\tdata.append('file', file);\n\tif (metadata) {\n\t\tdata.append('metadata', JSON.stringify(metadata));\n\t}\n\n\tlet error = null;\n\n\tconst res = await fetch(`${WEBUI_API_BASE_URL}/files/`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\tauthorization: `Bearer ${token}`\n\t\t},\n\t\tbody: data\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.catch((err) => {\n\t\t\terror = err.detail;\n\t\t\tconsole.error(err);\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\tif (res) {\n\t\tconst status = await getFileProcessStatus(token, res.id);\n\n\t\tif (status && status.ok) {\n\t\t\tconst reader = status.body\n\t\t\t\t.pipeThrough(new TextDecoderStream())\n\t\t\t\t.pipeThrough(splitStream('\\n'))\n\t\t\t\t.getReader();\n\n\t\t\twhile (true) {\n\t\t\t\tconst { value, done } = await reader.read();\n\t\t\t\tif (done) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tlet lines = value.split('\\n');\n\n\t\t\t\t\tfor (const line of lines) {\n\t\t\t\t\t\tif (line !== '') {\n\t\t\t\t\t\t\tconsole.log(line);\n\t\t\t\t\t\t\tif (line === 'data: [DONE]') {\n\t\t\t\t\t\t\t\tconsole.log(line);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tlet data = JSON.parse(line.replace(/^data: /, ''));\n\t\t\t\t\t\t\t\tconsole.log(data);\n\n\t\t\t\t\t\t\t\tif (data?.error) {\n\t\t\t\t\t\t\t\t\tconsole.error(data.error);\n\t\t\t\t\t\t\t\t\tres.error = data.error;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\nexport const getFileProcessStatus = async (token: string, id: string) => {\n\tconst queryParams = new URLSearchParams();\n\tqueryParams.append('stream', 'true');\n\n\tlet error = null;\n\tconst res = await fetch(`${WEBUI_API_BASE_URL}/files/${id}/process/status?${queryParams}`, {\n\t\tmethod: 'GET',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\tauthorization: `Bearer ${token}`\n\t\t}\n\t}).catch((err) => {\n\t\terror = err.detail;\n\t\tconsole.error(err);\n\t\treturn null;\n\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\nexport const uploadDir = async (token: string) => {\n\tlet error = null;\n\n\tconst res = await fetch(`${WEBUI_API_BASE_URL}/files/upload/dir`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\tauthorization: `Bearer ${token}`\n\t\t}\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.catch((err) => {\n\t\t\terror = err.detail;\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\nexport const getFiles = async (token: string = '') => {\n\tlet error = null;\n\n\tconst res = await fetch(`${WEBUI_API_BASE_URL}/files/`, {\n\t\tmethod: 'GET',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t\tauthorization: `Bearer ${token}`\n\t\t}\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.then((json) => {\n\t\t\treturn json;\n\t\t})\n\t\t.catch((err) => {\n\t\t\terror = err.detail;\n\t\t\tconsole.error(err);\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\nexport const getFileById = async (token: string, id: string) => {\n\tlet error = null;\n\n\tconst res = await fetch(`${WEBUI_API_BASE_URL}/files/${id}`, {\n\t\tmethod: 'GET',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t\tauthorization: `Bearer ${token}`\n\t\t}\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.then((json) => {\n\t\t\treturn json;\n\t\t})\n\t\t.catch((err) => {\n\t\t\terror = err.detail;\n\t\t\tconsole.error(err);\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\nexport const updateFileDataContentById = async (token: string, id: string, content: string) => {\n\tlet error = null;\n\n\tconst res = await fetch(`${WEBUI_API_BASE_URL}/files/${id}/data/content/update`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t\tauthorization: `Bearer ${token}`\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\tcontent: content\n\t\t})\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.then((json) => {\n\t\t\treturn json;\n\t\t})\n\t\t.catch((err) => {\n\t\t\terror = err.detail;\n\t\t\tconsole.error(err);\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\nexport const getFileContentById = async (id: string) => {\n\tlet error = null;\n\n\tconst res = await fetch(`${WEBUI_API_BASE_URL}/files/${id}/content`, {\n\t\tmethod: 'GET',\n\t\theaders: {\n\t\t\tAccept: 'application/json'\n\t\t},\n\t\tcredentials: 'include'\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn await res.blob();\n\t\t})\n\t\t.catch((err) => {\n\t\t\terror = err.detail;\n\t\t\tconsole.error(err);\n\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\nexport const deleteFileById = async (token: string, id: string) => {\n\tlet error = null;\n\n\tconst res = await fetch(`${WEBUI_API_BASE_URL}/files/${id}`, {\n\t\tmethod: 'DELETE',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t\tauthorization: `Bearer ${token}`\n\t\t}\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.then((json) => {\n\t\t\treturn json;\n\t\t})\n\t\t.catch((err) => {\n\t\t\terror = err.detail;\n\t\t\tconsole.error(err);\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n\nexport const deleteAllFiles = async (token: string) => {\n\tlet error = null;\n\n\tconst res = await fetch(`${WEBUI_API_BASE_URL}/files/all`, {\n\t\tmethod: 'DELETE',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t\tauthorization: `Bearer ${token}`\n\t\t}\n\t})\n\t\t.then(async (res) => {\n\t\t\tif (!res.ok) throw await res.json();\n\t\t\treturn res.json();\n\t\t})\n\t\t.then((json) => {\n\t\t\treturn json;\n\t\t})\n\t\t.catch((err) => {\n\t\t\terror = err.detail;\n\t\t\tconsole.error(err);\n\t\t\treturn null;\n\t\t});\n\n\tif (error) {\n\t\tthrow error;\n\t}\n\n\treturn res;\n};\n"],"names":["uploadFile","token","file","metadata","data","error","res","WEBUI_API_BASE_URL","err","status","getFileProcessStatus","reader","splitStream","value","done","lines","line","id","queryParams","getFileById","json","updateFileDataContentById","content","deleteAllFiles"],"mappings":"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"}