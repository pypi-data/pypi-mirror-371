# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .article_entity import ArticleEntity


class ClusterEntity(UniversalBaseModel):
    """
    The data model representing a single cluster of articles.
    """

    cluster_id: str = pydantic.Field()
    """
    The unique identifier for the cluster.
    """

    cluster_size: int = pydantic.Field()
    """
    The number of articles in the cluster.
    """

    articles: typing.List[ArticleEntity] = pydantic.Field()
    """
    A list of articles in the cluster.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
