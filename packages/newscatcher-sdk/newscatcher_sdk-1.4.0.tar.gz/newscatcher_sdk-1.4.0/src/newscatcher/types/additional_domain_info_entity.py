# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class AdditionalDomainInfoEntity(UniversalBaseModel):
    """
    Additional information about the domain of the article.
    """

    is_news_domain: typing.Optional[bool] = pydantic.Field(default=None)
    """
    Indicates whether the domain is a news domain.
    """

    news_type: typing.Optional[str] = pydantic.Field(default=None)
    """
    The type of news content provided by the domain.
    """

    news_domain_type: typing.Optional[str] = pydantic.Field(default=None)
    """
    The type of news domain.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
