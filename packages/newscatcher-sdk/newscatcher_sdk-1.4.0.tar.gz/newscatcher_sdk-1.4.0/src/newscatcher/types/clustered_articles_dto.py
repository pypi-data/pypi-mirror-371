# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .cluster_entity import ClusterEntity


class ClusteredArticlesDto(UniversalBaseModel):
    clusters_count: int = pydantic.Field()
    """
    The number of clusters in the search results.
    """

    clusters: typing.List[ClusterEntity] = pydantic.Field()
    """
    A list of clusters found in the search results.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
