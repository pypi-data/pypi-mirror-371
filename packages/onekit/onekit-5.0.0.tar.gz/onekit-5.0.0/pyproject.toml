[project]
name = "onekit"
dynamic = ["version"]
description = "All-in-One Python Kit."
authors = [
    { name = "Eugen Stripling", email = "estripling042@gmail.com" },
]
license = "BSD 3-Clause"
readme = "README.md"
repository = "https://github.com/estripling/onekit"
documentation = "https://onekit.readthedocs.io/en/stable/"
keywords = ["onekit"]
packages = [
    { include = "onekit", from = "src" },
]
classifiers = [
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.11"
dependencies = []

[tool.poetry]
version = "5.0.0"

[project.optional-dependencies]
base = [
    "duckdb (>=1.3.1,<2.0.0)",
    "python-dateutil (>=2.9.0.post0,<3.0.0)",
    "toolz (>=1.0.0,<2.0.0)",
]
analytics = [
    "pandas[compression,computation,excel,output-formatting,parquet,performance,plot] (>=2.2.3,<3.0.0)",
    "scikit-learn (>=1.6.1,<2.0.0)",
    "tqdm (>=4.67.1,<5.0.0)",
]
pyspark = ["pyspark (==3.5.3)"]

[tool.poetry.group.dev.dependencies]
autoflake = "^2.3.1"
black = { extras = ["jupyter"], version = "^25.1.0" }
isort = "^6.0.1"
flake8 = "^7.1.2"
pre-commit = "^4.2.0"
pre-commit-hooks = "^5.0.0"
pytest = "^8.3.5"
pytest-cov = "^6.0.0"
pytest-skip-slow = "^0.0.5"
time-machine = "^2.16.0"

[tool.poetry.group.docs.dependencies]
furo = "^2023.9.10"
jupyterlab = "^4.0.8"
myst-parser = "^2.0.0"
nbsphinx = "^0.9.3"
sphinx-autoapi = "^3.0.0"
sphinx-copybutton = "^0.5.2"
time-machine = "^2.16.0"

[tool.poetry.group.packaging.dependencies]
python-semantic-release = "8.3.0"

[tool.black]
line-length = 88

[tool.isort]
py_version = "auto"
profile = "black"
atomic = true
skip_gitignore = true
line_length = 88
force_grid_wrap = 2
multi_line_output = 3

[tool.pytest.ini_options]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "serial",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::RuntimeWarning",
]

[tool.semantic_release]
branch = "main"
version_variables = ["pyproject.toml:version"]
changelog_file = "CHANGELOG.md"
build_command = "poetry build"
dist_path = "dist/"
upload_to_release = true
upload_to_pypi = true
remove_dist = false
patch_without_tag = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
