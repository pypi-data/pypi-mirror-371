[project]
name = "geodes-sentinel2"
version = "0.1.0"
description = "A Python package for searching, downloading, and processing Sentinel-2 satellite imagery from the GEODES portal"
readme = "README.md"
requires-python = ">=3.9"
license = { text = "MIT" }
authors = [
    { name = "Adam Serghini", email = "serghini.adam.84@gmail.com" }
]
keywords = ["sentinel-2", "satellite", "remote-sensing", "geodes", "earth-observation", "ndvi"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: GIS",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "requests>=2.31.0",
    "geopandas>=0.14.0",
    "rasterio>=1.3.0",
    "shapely>=2.0.0",
    "pandas>=2.0.0",
    "python-dotenv>=1.0.0",
    "click>=8.1.0",
    "tqdm>=4.66.0",
    "pydantic>=2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "pre-commit>=3.4.0",
]
viz = [
    "matplotlib>=3.7.0",
    "folium>=0.14.0",
    "plotly>=5.17.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]

[project.urls]
Homepage = "https://github.com/Adam-serghini/geodes-sentinel2"
Documentation = "https://geodes-sentinel2.readthedocs.io"
Repository = "https://github.com/Adam-serghini/geodes-sentinel2"
Issues = "https://github.com/Adam-serghini/geodes-sentinel2/issues"

[project.scripts]
geodes-sentinel2 = "geodes_sentinel2.cli:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["geodes_sentinel2"]

[tool.ruff]
line-length = 100
target-version = "py38"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]

[tool.black]
line-length = 100
target-version = ["py38"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
no_implicit_reexport = false
check_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-v --cov=geodes_sentinel2 --cov-report=term-missing"

[tool.coverage.run]
source = ["geodes_sentinel2"]
omit = ["*/tests/*", "*/test_*.py"]