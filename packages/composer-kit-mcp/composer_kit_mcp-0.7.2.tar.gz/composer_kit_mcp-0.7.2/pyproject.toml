[project]
name = "composer_kit_mcp"
version = "0.7.2"
description = "A Model Context Protocol (MCP) server for Composer Kit UI components and Celo Composer project creation"
readme = "README.md"
authors = [
    { name = "viral-sangani", email = "viral.sangani2011@gmail.com" }
]
requires-python = ">=3.11"
dependencies = [
    "mcp>=1.2.0",
    "pydantic>=2.0.0",
]
keywords = ["mcp", "composer-kit", "ui", "components", "react", "web3", "celo", "celo-composer", "dapp"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
]

[project.urls]
Homepage = "https://github.com/viral-sangani/composer-kit-mcp"
Repository = "https://github.com/viral-sangani/composer-kit-mcp"
Documentation = "https://github.com/viral-sangani/composer-kit-mcp#readme"
Issues = "https://github.com/viral-sangani/composer-kit-mcp/issues"

[project.scripts]
composer-kit-mcp = "composer_kit_mcp.server:main_sync"

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "black>=24.0.0",
    "ruff>=0.1.0",
    "mypy>=1.8.0",
    "pre-commit>=3.6.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.black]
line-length = 120
target-version = ['py311']

[tool.ruff]
target-version = "0.7.2"
line-length = 120

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W", "UP"]

[tool.mypy]
python_version = "0.7.2"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
testpaths = ["tests"] 