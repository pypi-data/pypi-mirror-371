# Generated by ariadne-codegen
# Source: /app/operations

from typing import Any, List, Optional

from .base_model import BaseModel


class CustomerLink(BaseModel):
    id: Any
    abbreviation: Optional[str]
    title: str


class UserLink(BaseModel):
    id: str
    fname: str
    lname: Optional[str]


class WorkSitesView(BaseModel):
    author: "WorkSitesViewAuthor"
    title: Any
    created_at: Any
    deleted_at: Optional[Any]
    updated_at: Any
    id: Any
    confirmed_at: Optional[Any]
    county: Optional[str]
    state: Optional[str]
    lat: Optional[Any]
    lng: Optional[Any]
    api: Optional[str]
    current_customer: Optional[List["WorkSitesViewCurrentCustomer"]]
    order_items_aggregate: "WorkSitesViewOrderItemsAggregate"


class WorkSitesViewAuthor(UserLink):
    id: str
    full_name: Optional[str]


class WorkSitesViewCurrentCustomer(BaseModel):
    accounting_id: Optional[str]
    customer: "WorkSitesViewCurrentCustomerCustomer"


class WorkSitesViewCurrentCustomerCustomer(CustomerLink):
    id: Any
    title: str
    abbreviation: Optional[str]


class WorkSitesViewOrderItemsAggregate(BaseModel):
    aggregate: Optional["WorkSitesViewOrderItemsAggregateAggregate"]


class WorkSitesViewOrderItemsAggregateAggregate(BaseModel):
    count: int


CustomerLink.model_rebuild()
UserLink.model_rebuild()
WorkSitesView.model_rebuild()
