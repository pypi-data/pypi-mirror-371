[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[project]
authors = [
  {name = "Justin Flannery", email = "juftin@juftin.com"}
]
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Development Status :: 5 - Production/Stable",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy"
]
dependencies = [
  "click>=8.0.1",
  "pydantic>=2,<3",
  "rich>=10.0.0",
  "httpx",
  "importlib_metadata>=3.6",
  "click-plugins>=1.1.1"
]
description = "A simple Python SDK around the Lunch Money Developer API"
version = "1.4.3"
keywords = ["lunchmoney", "python", "pydantic", "api-client"]
license = "MIT"
name = "lunchable"
readme = "README.md"
requires-python = ">=3.9,<4"

[project.optional-dependencies]
all = [
  "lunchable-primelunch",
  "lunchable-pushlunch",
  "lunchable-splitlunch"
]
plugins = [
  "lunchable-primelunch",
  "lunchable-pushlunch",
  "lunchable-splitlunch"
]
primelunch = ["lunchable-primelunch"]
pushlunch = ["lunchable-pushlunch"]
splitlunch = ["lunchable-splitlunch"]

[project.scripts]
lunchable = "lunchable._cli:cli"

[project.urls]
Changelog = "https://github.com/juftin/lunchable/releases"
Discussions = "https://github.com/juftin/lunchable/discussions"
Docker = "https://hub.docker.com/r/juftin/lunchable"
Documentation = "https://github.com/juftin/lunchable#readme"
Issues = "https://github.com/juftin/lunchable/issues"
Source = "https://github.com/juftin/lunchable"

[dependency-groups]
dev = [
  # Testing
  "pytest",
  "pytest-cov",
  "pytest-mock",
  "vcrpy~=5.1.0",
  # Linting
  "mypy>=1.6.1",
  "ruff~=0.1.7"
]
docs = [
  "markdown-callouts",
  "markdown-exec",
  "mkdocs",
  "mkdocs-autorefs",
  "mkdocs-click",
  "mkdocs-gen-files",
  "mkdocs-literate-nav",
  "mkdocs-material",
  "mkdocs-section-index",
  "mkdocstrings",
  "mkdocstrings-python",
  "pymdown-extensions",
  "griffe-fieldz"
]

[tool.coverage.paths]
lunchable = ["lunchable", "*/lunchable/lunchable"]
tests = ["tests", "*/lunchable/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:"
]

[tool.coverage.run]
branch = true
omit = [
  "lunchable/_version.py"
]
parallel = true
source_pkgs = ["lunchable", "tests"]

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_untyped_defs = true
follow_imports = "silent"
no_implicit_reexport = true
plugins = [
  "pydantic.mypy"
]
warn_redundant_casts = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = [
  "pytest.*"
]

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[tool.pytest.ini_options]
addopts = [
  "-v",
  "--cov=lunchable",
  "--cov-report=term-missing",
  "--cov-report=xml:coverage.xml",
  "--junitxml=pytest.xml"
]

[tool.ruff]
ignore = [
  "E501",  # line too long, handled by black
  "PLR0913",  # Too many arguments to function call
  "PLW2901",  # Outer for loop variable overwritten by inner assignment target
  "RUF001",  # String contains ambiguous unicode character `â€™`
  "PLR2004",  # Magic value used in comparison
  "RUF012"  # Mutable class attributes should be annotated with `typing.ClassVar`
]
select = [
  "E",  # pycodestyle errors
  "W",  # pycodestyle warnings
  "F",  # pyflakes
  "I",  # isort
  "C",  # flake8-comprehensions
  "Q",  # flake8-quotes
  "B",  # flake8-bugbear
  "PLE",  # pylint
  "PLR",  # pylint
  "PLW",  # pylint
  "RUF",  # ruff
  "C90"  # mccabe
]

[tool.ruff.per-file-ignores]
"tests/**" = [
  "PLR2004"  # Magic value used in comparison
]
