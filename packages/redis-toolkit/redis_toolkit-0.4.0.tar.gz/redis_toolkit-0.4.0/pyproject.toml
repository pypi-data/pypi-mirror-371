[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "redis-toolkit"
version = "0.4.0"
authors = [
  { name = "JonesHong", email = "latte831104@gmail.com" }
]
description = "Enhanced Redis wrapper with multi-type data support and pub/sub automation"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.7"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Database",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Distributed Computing",
    "Topic :: Multimedia :: Graphics",
    "Topic :: Multimedia :: Sound/Audio",
    "Topic :: Multimedia :: Video",
]
keywords = ["redis", "toolkit", "pubsub", "serialization", "buffer", "audio", "video", "image", "converter"]
dependencies = [
    "redis>=4.0.0",
    "pretty-loguru>=1.1.3",
]

[project.optional-dependencies]
# 開發依賴
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.910",
    "pre-commit>=2.15",
]

# 圖片處理依賴（包含 OpenCV）
cv2 = [
    "opencv-python>=4.5.0",
    "numpy>=1.19.0",
]

# 音頻處理依賴（基礎）
audio = [
    "numpy>=1.19.0",
    "scipy>=1.7.0",
]

# 音頻處理依賴（進階，包含 MP3 支援）
audio-full = [
    "numpy>=1.19.0",
    "scipy>=1.7.0",
    "soundfile>=0.10.0",
]

# 圖片處理依賴（包含 PIL）
image = [
    "opencv-python>=4.5.0",
    "numpy>=1.19.0",
    "Pillow>=8.0.0",
]

# 視頻處理依賴（使用 OpenCV）
video = [
    "opencv-python>=4.5.0",
    "numpy>=1.19.0",
]

# 媒體處理完整套件
media = [
    "opencv-python>=4.5.0",
    "numpy>=1.19.0",
    "scipy>=1.7.0",
    "soundfile>=0.10.0",
    "Pillow>=8.0.0",
]

# 所有可選依賴
all = [
    "opencv-python>=4.5.0",
    "numpy>=1.19.0",
    "scipy>=1.7.0",
    "soundfile>=0.10.0",
    "Pillow>=8.0.0",
]

[project.urls]
Homepage = "https://github.com/JonesHong/redis-toolkit"
# Documentation = "https://redis-toolkit.readthedocs.io/"
Repository = "https://github.com/JonesHong/redis-toolkit.git"
"Bug Reports" = "https://github.com/JonesHong/redis-toolkit/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["redis_toolkit*"]

[tool.black]
line-length = 88
target-version = ['py37', 'py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.7"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["redis_toolkit"]
omit = [
    "tests/*",
    "examples/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]