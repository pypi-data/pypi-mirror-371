# coding: utf-8

"""
Identity Provider - Admin API

Admin API endpoints (public tenant only)

The version of the OpenAPI document: 1.0.0
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501


import unittest

from binoauth.admin.models.pagination_result_client_response import (
    PaginationResultClientResponse,
)


class TestPaginationResultClientResponse(unittest.TestCase):
    """PaginationResultClientResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PaginationResultClientResponse:
        """Test PaginationResultClientResponse
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `PaginationResultClientResponse`
        """
        model = PaginationResultClientResponse()
        if include_optional:
            return PaginationResultClientResponse(
                data = [
                    binoauth.admin.models.client_response.ClientResponse(
                        id = '',
                        name = '',
                        client_id = '',
                        client_secret = '',
                        redirect_uris = [
                            ''
                            ],
                        allowed_scopes = [
                            ''
                            ],
                        client_type = '',
                        grant_types = [
                            ''
                            ],
                        client_config = binoauth.admin.models.in_line_client_config.InLineClientConfig(
                            auth_methods = [
                                'password'
                                ],
                            link = '',
                            logo_uri = '',
                            description = '',
                            include_in_dashboard = True, ), )
                    ],
                total = 56,
                page = 56,
                limit = 56,
                next = 56,
                prev = 56
            )
        else:
            return PaginationResultClientResponse(
                data = [
                    binoauth.admin.models.client_response.ClientResponse(
                        id = '',
                        name = '',
                        client_id = '',
                        client_secret = '',
                        redirect_uris = [
                            ''
                            ],
                        allowed_scopes = [
                            ''
                            ],
                        client_type = '',
                        grant_types = [
                            ''
                            ],
                        client_config = binoauth.admin.models.in_line_client_config.InLineClientConfig(
                            auth_methods = [
                                'password'
                                ],
                            link = '',
                            logo_uri = '',
                            description = '',
                            include_in_dashboard = True, ), )
                    ],
                total = 56,
                page = 56,
                limit = 56,
                next = 56,
                prev = 56,
        )
        """

    def testPaginationResultClientResponse(self):
        """Test PaginationResultClientResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
