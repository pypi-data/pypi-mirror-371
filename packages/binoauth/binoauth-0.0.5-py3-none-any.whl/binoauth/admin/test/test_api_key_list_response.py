# coding: utf-8

"""
Identity Provider - Admin API

Admin API endpoints (public tenant only)

The version of the OpenAPI document: 1.0.0
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501


import unittest

from binoauth.admin.models.api_key_list_response import ApiKeyListResponse


class TestApiKeyListResponse(unittest.TestCase):
    """ApiKeyListResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiKeyListResponse:
        """Test ApiKeyListResponse
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `ApiKeyListResponse`
        """
        model = ApiKeyListResponse()
        if include_optional:
            return ApiKeyListResponse(
                api_keys = [
                    binoauth.admin.models.api_key_response.ApiKeyResponse(
                        id = '',
                        name = '',
                        key_prefix = '',
                        user_id = '',
                        tenant_id = '',
                        scopes = binoauth.admin.models.scopes.Scopes(),
                        status = 'active',
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                        last_used_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                        expires_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                        usage_count = 56,
                        is_active = True,
                        is_expired = True, )
                    ],
                total = 56,
                page = 56,
                per_page = 56
            )
        else:
            return ApiKeyListResponse(
                api_keys = [
                    binoauth.admin.models.api_key_response.ApiKeyResponse(
                        id = '',
                        name = '',
                        key_prefix = '',
                        user_id = '',
                        tenant_id = '',
                        scopes = binoauth.admin.models.scopes.Scopes(),
                        status = 'active',
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                        last_used_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                        expires_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                        usage_count = 56,
                        is_active = True,
                        is_expired = True, )
                    ],
                total = 56,
                page = 56,
                per_page = 56,
        )
        """

    def testApiKeyListResponse(self):
        """Test ApiKeyListResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
