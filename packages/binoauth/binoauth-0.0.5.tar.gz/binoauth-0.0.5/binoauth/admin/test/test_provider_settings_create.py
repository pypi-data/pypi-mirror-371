# coding: utf-8

"""
Identity Provider - Admin API

Admin API endpoints (public tenant only)

The version of the OpenAPI document: 1.0.0
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501


import unittest

from binoauth.admin.models.provider_settings_create import ProviderSettingsCreate


class TestProviderSettingsCreate(unittest.TestCase):
    """ProviderSettingsCreate unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ProviderSettingsCreate:
        """Test ProviderSettingsCreate
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `ProviderSettingsCreate`
        """
        model = ProviderSettingsCreate()
        if include_optional:
            return ProviderSettingsCreate(
                provider = 'google',
                client_id = '',
                client_secret = '',
                is_enabled = True,
                scopes = [
                    ''
                    ],
                extra_settings = {
                    'key' : ''
                    },
                authorize_url = '',
                token_url = '',
                userinfo_url = ''
            )
        else:
            return ProviderSettingsCreate(
                provider = 'google',
                client_id = '',
                client_secret = '',
                authorize_url = '',
                token_url = '',
                userinfo_url = '',
        )
        """

    def testProviderSettingsCreate(self):
        """Test ProviderSettingsCreate"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
