# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/textplumber',
                'doc_host': 'https://geoffford.nz',
                'git_url': 'https://github.com/polsci/textplumber',
                'lib_path': 'textplumber'},
  'syms': { 'textplumber.chars': { 'textplumber.chars.CharNgramVectorizer': ('chars.html#charngramvectorizer', 'textplumber/chars.py'),
                                   'textplumber.chars.CharNgramVectorizer.__init__': ( 'chars.html#charngramvectorizer.__init__',
                                                                                       'textplumber/chars.py'),
                                   'textplumber.chars.CharNgramVectorizer.fit': ( 'chars.html#charngramvectorizer.fit',
                                                                                  'textplumber/chars.py'),
                                   'textplumber.chars.CharNgramVectorizer.get_feature_names_out': ( 'chars.html#charngramvectorizer.get_feature_names_out',
                                                                                                    'textplumber/chars.py'),
                                   'textplumber.chars.CharNgramVectorizer.transform': ( 'chars.html#charngramvectorizer.transform',
                                                                                        'textplumber/chars.py')},
            'textplumber.clean': { 'textplumber.clean.TextCleaner': ('clean.html#textcleaner', 'textplumber/clean.py'),
                                   'textplumber.clean.TextCleaner.__init__': ('clean.html#textcleaner.__init__', 'textplumber/clean.py'),
                                   'textplumber.clean.TextCleaner._character_replacement_translator': ( 'clean.html#textcleaner._character_replacement_translator',
                                                                                                        'textplumber/clean.py'),
                                   'textplumber.clean.TextCleaner._normalize_characters': ( 'clean.html#textcleaner._normalize_characters',
                                                                                            'textplumber/clean.py'),
                                   'textplumber.clean.TextCleaner._normalize_whitespace': ( 'clean.html#textcleaner._normalize_whitespace',
                                                                                            'textplumber/clean.py'),
                                   'textplumber.clean.TextCleaner._remove_html_from_string': ( 'clean.html#textcleaner._remove_html_from_string',
                                                                                               'textplumber/clean.py'),
                                   'textplumber.clean.TextCleaner._strip_whitespace': ( 'clean.html#textcleaner._strip_whitespace',
                                                                                        'textplumber/clean.py'),
                                   'textplumber.clean.TextCleaner.apply_transformations': ( 'clean.html#textcleaner.apply_transformations',
                                                                                            'textplumber/clean.py'),
                                   'textplumber.clean.TextCleaner.fit': ('clean.html#textcleaner.fit', 'textplumber/clean.py'),
                                   'textplumber.clean.TextCleaner.is_text_handler': ( 'clean.html#textcleaner.is_text_handler',
                                                                                      'textplumber/clean.py'),
                                   'textplumber.clean.TextCleaner.transform': ('clean.html#textcleaner.transform', 'textplumber/clean.py')},
            'textplumber.core': { 'textplumber.core._spacy_compatible_stop_words': ( 'core.html#_spacy_compatible_stop_words',
                                                                                     'textplumber/core.py'),
                                  'textplumber.core.get_example_data': ('core.html#get_example_data', 'textplumber/core.py'),
                                  'textplumber.core.get_stop_words': ('core.html#get_stop_words', 'textplumber/core.py'),
                                  'textplumber.core.pass_tokens': ('core.html#pass_tokens', 'textplumber/core.py')},
            'textplumber.embeddings': { 'textplumber.embeddings.Model2VecEmbedder': ( 'embeddings.html#model2vecembedder',
                                                                                      'textplumber/embeddings.py'),
                                        'textplumber.embeddings.Model2VecEmbedder.__init__': ( 'embeddings.html#model2vecembedder.__init__',
                                                                                               'textplumber/embeddings.py'),
                                        'textplumber.embeddings.Model2VecEmbedder.fit': ( 'embeddings.html#model2vecembedder.fit',
                                                                                          'textplumber/embeddings.py'),
                                        'textplumber.embeddings.Model2VecEmbedder.get_feature_names_out': ( 'embeddings.html#model2vecembedder.get_feature_names_out',
                                                                                                            'textplumber/embeddings.py'),
                                        'textplumber.embeddings.Model2VecEmbedder.transform': ( 'embeddings.html#model2vecembedder.transform',
                                                                                                'textplumber/embeddings.py')},
            'textplumber.lexicons': { 'textplumber.lexicons.LexiconCountVectorizer': ( 'lexicons.html#lexiconcountvectorizer',
                                                                                       'textplumber/lexicons.py'),
                                      'textplumber.lexicons.LexiconCountVectorizer.__init__': ( 'lexicons.html#lexiconcountvectorizer.__init__',
                                                                                                'textplumber/lexicons.py'),
                                      'textplumber.lexicons.LexiconCountVectorizer.fit': ( 'lexicons.html#lexiconcountvectorizer.fit',
                                                                                           'textplumber/lexicons.py'),
                                      'textplumber.lexicons.LexiconCountVectorizer.get_feature_names_out': ( 'lexicons.html#lexiconcountvectorizer.get_feature_names_out',
                                                                                                             'textplumber/lexicons.py'),
                                      'textplumber.lexicons.LexiconCountVectorizer.transform': ( 'lexicons.html#lexiconcountvectorizer.transform',
                                                                                                 'textplumber/lexicons.py'),
                                      'textplumber.lexicons.get_empath_lexicons': ( 'lexicons.html#get_empath_lexicons',
                                                                                    'textplumber/lexicons.py'),
                                      'textplumber.lexicons.get_sentiment_lexicons': ( 'lexicons.html#get_sentiment_lexicons',
                                                                                       'textplumber/lexicons.py')},
            'textplumber.pos': { 'textplumber.pos.POSVectorizer': ('pos.html#posvectorizer', 'textplumber/pos.py'),
                                 'textplumber.pos.POSVectorizer.__init__': ('pos.html#posvectorizer.__init__', 'textplumber/pos.py'),
                                 'textplumber.pos.POSVectorizer.fit': ('pos.html#posvectorizer.fit', 'textplumber/pos.py'),
                                 'textplumber.pos.POSVectorizer.get_feature_names_out': ( 'pos.html#posvectorizer.get_feature_names_out',
                                                                                          'textplumber/pos.py'),
                                 'textplumber.pos.POSVectorizer.transform': ('pos.html#posvectorizer.transform', 'textplumber/pos.py')},
            'textplumber.preprocess': { 'textplumber.preprocess.NLTKPreprocessor': ( 'preprocess.html#nltkpreprocessor',
                                                                                     'textplumber/preprocess.py'),
                                        'textplumber.preprocess.NLTKPreprocessor.__init__': ( 'preprocess.html#nltkpreprocessor.__init__',
                                                                                              'textplumber/preprocess.py'),
                                        'textplumber.preprocess.NLTKPreprocessor._fit_textstats': ( 'preprocess.html#nltkpreprocessor._fit_textstats',
                                                                                                    'textplumber/preprocess.py'),
                                        'textplumber.preprocess.NLTKPreprocessor._iterator': ( 'preprocess.html#nltkpreprocessor._iterator',
                                                                                               'textplumber/preprocess.py'),
                                        'textplumber.preprocess.NLTKPreprocessor._tokenize': ( 'preprocess.html#nltkpreprocessor._tokenize',
                                                                                               'textplumber/preprocess.py'),
                                        'textplumber.preprocess.NLTKPreprocessor.fit': ( 'preprocess.html#nltkpreprocessor.fit',
                                                                                         'textplumber/preprocess.py'),
                                        'textplumber.preprocess.NLTKPreprocessor.is_text_handler': ( 'preprocess.html#nltkpreprocessor.is_text_handler',
                                                                                                     'textplumber/preprocess.py'),
                                        'textplumber.preprocess.NLTKPreprocessor.transform': ( 'preprocess.html#nltkpreprocessor.transform',
                                                                                               'textplumber/preprocess.py'),
                                        'textplumber.preprocess.SpacyPreprocessor': ( 'preprocess.html#spacypreprocessor',
                                                                                      'textplumber/preprocess.py'),
                                        'textplumber.preprocess.SpacyPreprocessor.__init__': ( 'preprocess.html#spacypreprocessor.__init__',
                                                                                               'textplumber/preprocess.py'),
                                        'textplumber.preprocess.SpacyPreprocessor._fit_textstats': ( 'preprocess.html#spacypreprocessor._fit_textstats',
                                                                                                     'textplumber/preprocess.py'),
                                        'textplumber.preprocess.SpacyPreprocessor._iterator': ( 'preprocess.html#spacypreprocessor._iterator',
                                                                                                'textplumber/preprocess.py'),
                                        'textplumber.preprocess.SpacyPreprocessor._spacy_tokenize': ( 'preprocess.html#spacypreprocessor._spacy_tokenize',
                                                                                                      'textplumber/preprocess.py'),
                                        'textplumber.preprocess.SpacyPreprocessor.fit': ( 'preprocess.html#spacypreprocessor.fit',
                                                                                          'textplumber/preprocess.py'),
                                        'textplumber.preprocess.SpacyPreprocessor.is_text_handler': ( 'preprocess.html#spacypreprocessor.is_text_handler',
                                                                                                      'textplumber/preprocess.py'),
                                        'textplumber.preprocess.SpacyPreprocessor.transform': ( 'preprocess.html#spacypreprocessor.transform',
                                                                                                'textplumber/preprocess.py')},
            'textplumber.report': { 'textplumber.report._get_features_featureunion_markup': ( 'report.html#_get_features_featureunion_markup',
                                                                                              'textplumber/report.py'),
                                    'textplumber.report._get_features_pipeline_markup': ( 'report.html#_get_features_pipeline_markup',
                                                                                          'textplumber/report.py'),
                                    'textplumber.report._get_features_step': ('report.html#_get_features_step', 'textplumber/report.py'),
                                    'textplumber.report._get_features_step_markup': ( 'report.html#_get_features_step_markup',
                                                                                      'textplumber/report.py'),
                                    'textplumber.report._get_preview_css': ('report.html#_get_preview_css', 'textplumber/report.py'),
                                    'textplumber.report.cast_column_to_label': ( 'report.html#cast_column_to_label',
                                                                                 'textplumber/report.py'),
                                    'textplumber.report.get_classifier_feature_names_in': ( 'report.html#get_classifier_feature_names_in',
                                                                                            'textplumber/report.py'),
                                    'textplumber.report.get_label_names': ('report.html#get_label_names', 'textplumber/report.py'),
                                    'textplumber.report.get_selected_feature_names': ( 'report.html#get_selected_feature_names',
                                                                                       'textplumber/report.py'),
                                    'textplumber.report.plot_confusion_matrices': ( 'report.html#plot_confusion_matrices',
                                                                                    'textplumber/report.py'),
                                    'textplumber.report.plot_confusion_matrix': ( 'report.html#plot_confusion_matrix',
                                                                                  'textplumber/report.py'),
                                    'textplumber.report.plot_decision_tree_from_pipeline': ( 'report.html#plot_decision_tree_from_pipeline',
                                                                                             'textplumber/report.py'),
                                    'textplumber.report.plot_logistic_regression_features_from_pipeline': ( 'report.html#plot_logistic_regression_features_from_pipeline',
                                                                                                            'textplumber/report.py'),
                                    'textplumber.report.plt_svg': ('report.html#plt_svg', 'textplumber/report.py'),
                                    'textplumber.report.preview_dataset': ('report.html#preview_dataset', 'textplumber/report.py'),
                                    'textplumber.report.preview_label_counts': ( 'report.html#preview_label_counts',
                                                                                 'textplumber/report.py'),
                                    'textplumber.report.preview_pipeline_features': ( 'report.html#preview_pipeline_features',
                                                                                      'textplumber/report.py'),
                                    'textplumber.report.preview_row_text': ('report.html#preview_row_text', 'textplumber/report.py'),
                                    'textplumber.report.preview_selected_features': ( 'report.html#preview_selected_features',
                                                                                      'textplumber/report.py'),
                                    'textplumber.report.preview_split_by_label_column': ( 'report.html#preview_split_by_label_column',
                                                                                          'textplumber/report.py'),
                                    'textplumber.report.preview_splits': ('report.html#preview_splits', 'textplumber/report.py'),
                                    'textplumber.report.preview_text_field': ('report.html#preview_text_field', 'textplumber/report.py'),
                                    'textplumber.report.save_results': ('report.html#save_results', 'textplumber/report.py')},
            'textplumber.store': { 'textplumber.store.TextFeatureStore': ('store.html#textfeaturestore', 'textplumber/store.py'),
                                   'textplumber.store.TextFeatureStore.__init__': ( 'store.html#textfeaturestore.__init__',
                                                                                    'textplumber/store.py'),
                                   'textplumber.store.TextFeatureStore.buffered_update': ( 'store.html#textfeaturestore.buffered_update',
                                                                                           'textplumber/store.py'),
                                   'textplumber.store.TextFeatureStore.dump': ('store.html#textfeaturestore.dump', 'textplumber/store.py'),
                                   'textplumber.store.TextFeatureStore.empty': ( 'store.html#textfeaturestore.empty',
                                                                                 'textplumber/store.py'),
                                   'textplumber.store.TextFeatureStore.flush': ( 'store.html#textfeaturestore.flush',
                                                                                 'textplumber/store.py'),
                                   'textplumber.store.TextFeatureStore.get': ('store.html#textfeaturestore.get', 'textplumber/store.py'),
                                   'textplumber.store.TextFeatureStore.get_config': ( 'store.html#textfeaturestore.get_config',
                                                                                      'textplumber/store.py'),
                                   'textplumber.store.TextFeatureStore.get_embeddings_from_texts': ( 'store.html#textfeaturestore.get_embeddings_from_texts',
                                                                                                     'textplumber/store.py'),
                                   'textplumber.store.TextFeatureStore.get_features_from_texts_by_type': ( 'store.html#textfeaturestore.get_features_from_texts_by_type',
                                                                                                           'textplumber/store.py'),
                                   'textplumber.store.TextFeatureStore.get_lexicons_from_texts': ( 'store.html#textfeaturestore.get_lexicons_from_texts',
                                                                                                   'textplumber/store.py'),
                                   'textplumber.store.TextFeatureStore.get_pos_from_texts': ( 'store.html#textfeaturestore.get_pos_from_texts',
                                                                                              'textplumber/store.py'),
                                   'textplumber.store.TextFeatureStore.get_textstats_from_texts': ( 'store.html#textfeaturestore.get_textstats_from_texts',
                                                                                                    'textplumber/store.py'),
                                   'textplumber.store.TextFeatureStore.get_tokens_from_texts': ( 'store.html#textfeaturestore.get_tokens_from_texts',
                                                                                                 'textplumber/store.py'),
                                   'textplumber.store.TextFeatureStore.set_config': ( 'store.html#textfeaturestore.set_config',
                                                                                      'textplumber/store.py'),
                                   'textplumber.store.TextFeatureStore.update': ( 'store.html#textfeaturestore.update',
                                                                                  'textplumber/store.py'),
                                   'textplumber.store.TextFeatureStore.update_embeddings': ( 'store.html#textfeaturestore.update_embeddings',
                                                                                             'textplumber/store.py'),
                                   'textplumber.store.TextFeatureStore.update_lexicons': ( 'store.html#textfeaturestore.update_lexicons',
                                                                                           'textplumber/store.py')},
            'textplumber.textstats': { 'textplumber.textstats.TextstatsTransformer': ( 'textstats.html#textstatstransformer',
                                                                                       'textplumber/textstats.py'),
                                       'textplumber.textstats.TextstatsTransformer.__init__': ( 'textstats.html#textstatstransformer.__init__',
                                                                                                'textplumber/textstats.py'),
                                       'textplumber.textstats.TextstatsTransformer.fit': ( 'textstats.html#textstatstransformer.fit',
                                                                                           'textplumber/textstats.py'),
                                       'textplumber.textstats.TextstatsTransformer.get_feature_names_out': ( 'textstats.html#textstatstransformer.get_feature_names_out',
                                                                                                             'textplumber/textstats.py'),
                                       'textplumber.textstats.TextstatsTransformer.transform': ( 'textstats.html#textstatstransformer.transform',
                                                                                                 'textplumber/textstats.py')},
            'textplumber.tokens': { 'textplumber.tokens.TokensVectorizer': ('tokens.html#tokensvectorizer', 'textplumber/tokens.py'),
                                    'textplumber.tokens.TokensVectorizer.__init__': ( 'tokens.html#tokensvectorizer.__init__',
                                                                                      'textplumber/tokens.py'),
                                    'textplumber.tokens.TokensVectorizer._lemmatize': ( 'tokens.html#tokensvectorizer._lemmatize',
                                                                                        'textplumber/tokens.py'),
                                    'textplumber.tokens.TokensVectorizer._normalize': ( 'tokens.html#tokensvectorizer._normalize',
                                                                                        'textplumber/tokens.py'),
                                    'textplumber.tokens.TokensVectorizer.fit': ( 'tokens.html#tokensvectorizer.fit',
                                                                                 'textplumber/tokens.py'),
                                    'textplumber.tokens.TokensVectorizer.get_feature_names_out': ( 'tokens.html#tokensvectorizer.get_feature_names_out',
                                                                                                   'textplumber/tokens.py'),
                                    'textplumber.tokens.TokensVectorizer.transform': ( 'tokens.html#tokensvectorizer.transform',
                                                                                       'textplumber/tokens.py')},
            'textplumber.vader': { 'textplumber.vader.SentimentIntensityInterpreter': ( 'vader.html#sentimentintensityinterpreter',
                                                                                        'textplumber/vader.py'),
                                   'textplumber.vader.SentimentIntensityInterpreter.__init__': ( 'vader.html#sentimentintensityinterpreter.__init__',
                                                                                                 'textplumber/vader.py'),
                                   'textplumber.vader.SentimentIntensityInterpreter.explain': ( 'vader.html#sentimentintensityinterpreter.explain',
                                                                                                'textplumber/vader.py'),
                                   'textplumber.vader.SentimentIntensityInterpreter.polarity_scores': ( 'vader.html#sentimentintensityinterpreter.polarity_scores',
                                                                                                        'textplumber/vader.py'),
                                   'textplumber.vader.VaderSentimentEstimator': ( 'vader.html#vadersentimentestimator',
                                                                                  'textplumber/vader.py'),
                                   'textplumber.vader.VaderSentimentEstimator.__init__': ( 'vader.html#vadersentimentestimator.__init__',
                                                                                           'textplumber/vader.py'),
                                   'textplumber.vader.VaderSentimentEstimator.predict': ( 'vader.html#vadersentimentestimator.predict',
                                                                                          'textplumber/vader.py'),
                                   'textplumber.vader.VaderSentimentExtractor': ( 'vader.html#vadersentimentextractor',
                                                                                  'textplumber/vader.py'),
                                   'textplumber.vader.VaderSentimentExtractor.__init__': ( 'vader.html#vadersentimentextractor.__init__',
                                                                                           'textplumber/vader.py'),
                                   'textplumber.vader.VaderSentimentExtractor.convert_score_to_label': ( 'vader.html#vadersentimentextractor.convert_score_to_label',
                                                                                                         'textplumber/vader.py'),
                                   'textplumber.vader.VaderSentimentExtractor.convert_scores_to_labels': ( 'vader.html#vadersentimentextractor.convert_scores_to_labels',
                                                                                                           'textplumber/vader.py'),
                                   'textplumber.vader.VaderSentimentExtractor.fit': ( 'vader.html#vadersentimentextractor.fit',
                                                                                      'textplumber/vader.py'),
                                   'textplumber.vader.VaderSentimentExtractor.get_feature_names_out': ( 'vader.html#vadersentimentextractor.get_feature_names_out',
                                                                                                        'textplumber/vader.py'),
                                   'textplumber.vader.VaderSentimentExtractor.transform': ( 'vader.html#vadersentimentextractor.transform',
                                                                                            'textplumber/vader.py'),
                                   'textplumber.vader.VaderSentimentPOSNgramsExtractor': ( 'vader.html#vadersentimentposngramsextractor',
                                                                                           'textplumber/vader.py'),
                                   'textplumber.vader.VaderSentimentPOSNgramsExtractor.__init__': ( 'vader.html#vadersentimentposngramsextractor.__init__',
                                                                                                    'textplumber/vader.py'),
                                   'textplumber.vader.VaderSentimentPOSNgramsExtractor.convert_score_to_token_label': ( 'vader.html#vadersentimentposngramsextractor.convert_score_to_token_label',
                                                                                                                        'textplumber/vader.py'),
                                   'textplumber.vader.VaderSentimentPOSNgramsExtractor.fit': ( 'vader.html#vadersentimentposngramsextractor.fit',
                                                                                               'textplumber/vader.py'),
                                   'textplumber.vader.VaderSentimentPOSNgramsExtractor.get_feature_names_out': ( 'vader.html#vadersentimentposngramsextractor.get_feature_names_out',
                                                                                                                 'textplumber/vader.py'),
                                   'textplumber.vader.VaderSentimentPOSNgramsExtractor.get_sentiment_pos_ngrams': ( 'vader.html#vadersentimentposngramsextractor.get_sentiment_pos_ngrams',
                                                                                                                    'textplumber/vader.py'),
                                   'textplumber.vader.VaderSentimentPOSNgramsExtractor.transform': ( 'vader.html#vadersentimentposngramsextractor.transform',
                                                                                                     'textplumber/vader.py'),
                                   'textplumber.vader.VaderSentimentProfileExtractor': ( 'vader.html#vadersentimentprofileextractor',
                                                                                         'textplumber/vader.py'),
                                   'textplumber.vader.VaderSentimentProfileExtractor.__init__': ( 'vader.html#vadersentimentprofileextractor.__init__',
                                                                                                  'textplumber/vader.py'),
                                   'textplumber.vader.VaderSentimentProfileExtractor.fit': ( 'vader.html#vadersentimentprofileextractor.fit',
                                                                                             'textplumber/vader.py'),
                                   'textplumber.vader.VaderSentimentProfileExtractor.get_feature_names_out': ( 'vader.html#vadersentimentprofileextractor.get_feature_names_out',
                                                                                                               'textplumber/vader.py'),
                                   'textplumber.vader.VaderSentimentProfileExtractor.plot_sentiment_structure': ( 'vader.html#vadersentimentprofileextractor.plot_sentiment_structure',
                                                                                                                  'textplumber/vader.py'),
                                   'textplumber.vader.VaderSentimentProfileExtractor.profile': ( 'vader.html#vadersentimentprofileextractor.profile',
                                                                                                 'textplumber/vader.py'),
                                   'textplumber.vader.VaderSentimentProfileExtractor.section_profile': ( 'vader.html#vadersentimentprofileextractor.section_profile',
                                                                                                         'textplumber/vader.py'),
                                   'textplumber.vader.VaderSentimentProfileExtractor.transform': ( 'vader.html#vadersentimentprofileextractor.transform',
                                                                                                   'textplumber/vader.py'),
                                   'textplumber.vader._make_colorizer': ('vader.html#_make_colorizer', 'textplumber/vader.py'),
                                   'textplumber.vader.sentiment_wordcloud': ('vader.html#sentiment_wordcloud', 'textplumber/vader.py')}}}
