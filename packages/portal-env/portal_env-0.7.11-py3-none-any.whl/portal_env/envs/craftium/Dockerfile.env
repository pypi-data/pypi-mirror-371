FROM python:3.12-slim

# Always set non-interactive mode for Debian-based images
ENV DEBIAN_FRONTEND=noninteractive

# Install apt packages (e.g., git, build tools, system libs)
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    git \
    curl \
    libssl-dev \
    ca-certificates \
    python3 python3-venv python3-pip \
    xvfb

# Install uv (download latest binary from GitHub)
RUN curl -Ls https://astral.sh/uv/install.sh | bash

# Add uv to PATH
ENV PATH="/root/.cargo/bin:${PATH}"


WORKDIR /app

RUN apt update && apt install -y git
# RUN apt install python3 python3-pip -y
RUN git clone --recurse-submodules https://github.com/mikelma/craftium.git
WORKDIR /app/craftium
RUN apt install -y g++ make libc6-dev cmake libpng-dev libjpeg-dev libgl1-mesa-dev libsqlite3-dev \
libogg-dev libvorbis-dev libopenal-dev libcurl4-gnutls-dev libfreetype6-dev zlib1g-dev libgmp-dev \
libjsoncpp-dev libzstd-dev libluajit-5.1-dev gettext libsdl2-dev \
libpython3-dev \
minetest \ 
&& rm -rf /var/lib/apt/lists/*

# Install SDL from source
RUN cd /tmp \
    && git clone https://github.com/libsdl-org/SDL.git SDL2 \
    && cd SDL2 \
    && git checkout release-2.28.5 \
    && mkdir -p build \
    && cd build \
    && cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local \
    && make -j$(nproc) \
    && make install \
    && ldconfig \
    && cd /tmp \
    && rm -rf SDL2


COPY --from=ghcr.io/astral-sh/uv:latest /uv /uvx /bin/

# Clone and build LuaJIT from latest source
# RUN git clone https://github.com/LuaJIT/LuaJIT.git /tmp/luajit \
#     && cd /tmp/luajit \
#     && make -j$(nproc) \
#     && make install \
#     && ln -s /usr/local/bin/luajit /usr/local/bin/lua \
#     && rm -rf /tmp/luajit

# RUN uv venv --python 3.12

RUN pip install --upgrade pip
RUN pip install --upgrade setuptools

# RUN pip install cmake
# remove the wrong cmake path in the image
# RUN rm /usr/local/bin/cmake

RUN pip install .

RUN pip install portal loguru gymnasium

WORKDIR /app

COPY env_main.py .

CMD ["python", "env_main.py"]

