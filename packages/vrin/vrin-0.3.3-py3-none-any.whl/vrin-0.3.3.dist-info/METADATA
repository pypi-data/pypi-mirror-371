Metadata-Version: 2.4
Name: vrin
Version: 0.3.3
Summary: Enhanced Hybrid RAG SDK with multi-hop reasoning, cross-document synthesis, and expert-level analysis capabilities
Home-page: https://github.com/vrin-ai/vrin-sdk
Author: VRIN Team
Author-email: VRIN Team <vedant@vrin.cloud>
Maintainer-email: VRIN Team <vedant@vrin.cloud>
License-Expression: MIT
Project-URL: Homepage, https://github.com/vrin-ai/vrin-python
Project-URL: Documentation, https://docs.vrin.ai
Project-URL: Repository, https://github.com/vrin-ai/vrin-python
Project-URL: Bug Tracker, https://github.com/vrin-ai/vrin-python/issues
Keywords: ai,knowledge-graph,memory,orchestration,context,retrieval
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: requests>=2.25.0
Requires-Dist: typing-extensions>=3.7.4
Provides-Extra: dev
Requires-Dist: pytest>=6.0; extra == "dev"
Requires-Dist: pytest-cov>=2.0; extra == "dev"
Requires-Dist: black>=21.0; extra == "dev"
Requires-Dist: flake8>=3.8; extra == "dev"
Requires-Dist: mypy>=0.800; extra == "dev"
Dynamic: author
Dynamic: home-page
Dynamic: license-file
Dynamic: requires-python

# VRIN Hybrid RAG SDK v0.2.3

Optimized Hybrid RAG SDK with smart deduplication, enhanced fact extraction, and competitive performance.

## 🚀 New in v0.2.3 - Latest Optimizations

- 🎯 **Smart Deduplication** - Prevents duplicate facts and chunks, reduces storage by 40-60%
- ⚡ **Enhanced Performance** - Sub-3s queries with 7+ combined graph + vector results
- 🧠 **Improved Fact Quality** - 0.8+ confidence facts with self-updating system
- 💾 **Storage Optimization** - Only stores unique, fact-rich content with transparency
- 🔄 **Self-Improving** - Higher confidence facts automatically update existing ones
- 📊 **Competitive Edge** - Outperforms pure RAG and basic GraphRAG systems
- 🔧 **Updated Import** - Now use `from vrin import VRINClient`

## 🚀 Core Features

- ⚡ **Hybrid RAG Architecture** - Graph reasoning + Vector similarity search
- 🧠 **Intelligent Entity Matching** - AI-powered compound entity recognition
- 📊 **Advanced Fact Extraction** - High-confidence structured knowledge extraction
- 🔍 **Sub-3s Query Response** - Optimized retrieval with comprehensive coverage
- 🎯 **AI-Powered Summaries** - Natural language answers with cited sources
- 📈 **Enterprise-Ready** - User isolation, authentication, and production scaling

## 📦 Installation

```bash
pip install vrin==0.2.3
```

## 🔧 Quick Start

```python
from vrin import VRINClient

# Initialize with your API key
client = VRINClient(api_key="your_vrin_api_key")

# Insert knowledge with automatic fact extraction and optimization
result = client.insert(
    content="Python is a high-level programming language created by Guido van Rossum in 1991. It emphasizes code readability and supports multiple programming paradigms.",
    title="Python Programming Language",
    tags=["programming", "python", "language"]
)

print(f"✅ Extracted {result['facts_extracted']} facts")
print(f"📦 Chunk stored: {result['chunk_stored']}")
print(f"💾 Storage details: {result['storage_details']}")

# Query with intelligent hybrid search
response = client.query("Who created Python and when?")
print(f"📝 Answer: {response['summary']}")
print(f"⚡ Performance: {response['total_facts']} graph + {response['total_chunks']} vector = {response['combined_results']} results")
print(f"🔍 Query time: {response['search_time']}")
```

## 📊 Performance (v0.2.3 Optimized)

- **Fact Extraction**: 3-8 high-quality facts per insertion (0.8+ confidence)
- **Query Response**: Sub-3s with 7+ combined graph + vector results
- **Hybrid Coverage**: 2-5 graph facts + 3-5 vector chunks per query
- **Storage Efficiency**: 40-60% reduction through smart deduplication
- **Self-Improvement**: Facts automatically update with higher confidence versions
- **Competitive Advantage**: Outperforms single-method RAG systems

## 🏗️ Architecture

VRIN uses a sophisticated Hybrid RAG architecture:

1. **Smart Fact Extraction** - LLM-powered extraction with deduplication
2. **Graph Storage** - Facts stored as knowledge graph in Neptune  
3. **Vector Storage** - Semantic embeddings in OpenSearch with optimization
4. **Hybrid Retrieval** - Combines graph traversal + vector similarity
5. **Result Fusion** - Intelligent ranking and result combination
6. **AI Summarization** - Natural language response generation
7. **Storage Optimization** - Prevents duplicates and optimizes efficiency

## 🔐 Authentication & Setup

1. Sign up at [VRIN Console](https://console.vrin.ai) (when available)
2. Get your API key from account dashboard
3. Use the API key to initialize your client

```python
client = VRINClient(api_key="vrin_your_api_key_here")
```

## 📄 License

MIT License - see LICENSE file for details.

## 📈 Latest Updates (August 08, 2025)

- Smart Deduplication (40-60% storage reduction)
- Storage Transparency with detailed explanations
- Content similarity detection
- High-confidence fact extraction (0.8+)
- Sub-3s hybrid query performance
- Enhanced entity matching with compound entities

---

**Built with ❤️ by the VRIN Team**

*Last updated: August 08, 2025 (Auto-generated)*
