# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .agent_fhir_config import AgentFhirConfig
from .agent_provider import AgentProvider


class AgentTemplate(UniversalBaseModel):
    id: typing.Optional[str] = pydantic.Field(default=None)
    """
    Agent ID
    """

    name: typing.Optional[str] = pydantic.Field(default=None)
    """
    Agent name
    """

    description: typing.Optional[str] = pydantic.Field(default=None)
    """
    Agent description
    """

    prompts: typing.Optional[typing.List[str]] = pydantic.Field(default=None)
    """
    Array of prompt IDs used by this agent
    """

    tools: typing.Optional[typing.List[str]] = pydantic.Field(default=None)
    """
    Array of MCP server tool IDs used by this agent
    """

    is_active: typing.Optional[bool] = pydantic.Field(default=None)
    """
    Whether the agent is active
    """

    tags: typing.Optional[typing.List[str]] = pydantic.Field(default=None)
    """
    Tags for categorizing the agent
    """

    provider: typing.Optional[AgentProvider] = pydantic.Field(default=None)
    """
    FHIR provider type - can be a single provider or array of providers
    """

    meta: typing.Optional[AgentFhirConfig] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
