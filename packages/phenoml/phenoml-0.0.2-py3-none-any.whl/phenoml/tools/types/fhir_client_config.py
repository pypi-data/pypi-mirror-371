# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class FhirClientConfig(UniversalBaseModel):
    """
    Provider-specific configuration and metadata
    """

    fhir_store_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    FHIR store ID for Google Healthcare provider
    """

    on_behalf_of_email: typing.Optional[str] = pydantic.Field(default=None)
    """
    Email address to use for On-Behalf-Of requests (Medplum only). If provided, the request will be made on behalf of the Patient or Practitioner with this email address.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
