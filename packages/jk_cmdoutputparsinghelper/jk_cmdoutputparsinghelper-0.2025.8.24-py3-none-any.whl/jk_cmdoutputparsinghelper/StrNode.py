

import os
import typing

import jk_typing
import jk_prettyprintobj





StrNode = typing.NewType("StrNode", object)

class StrNode(jk_prettyprintobj.DumpMixin):

	################################################################################################################################
	## Constructor
	################################################################################################################################

	#
	# Constructor method.
	#
	@jk_typing.checkFunctionSignature()
	def __init__(self, nLevel:int, text:typing.Union[str,None]):
		assert isinstance(nLevel, int)
		if text is not None:
			assert isinstance(text, str)

		self.nLevel = nLevel
		self.text = text
		self.children:typing.List[StrNode] = []
	#

	################################################################################################################################
	## Public Properties
	################################################################################################################################

	################################################################################################################################
	## Helper Methods
	################################################################################################################################

	def _dumpVarNames(self) -> list:
		return [
			"nLevel",
			"text",
			"children",
		]
	#

	################################################################################################################################
	## Public Methods
	################################################################################################################################

#


