/* === Base surfaces & text (dark.xml tokens only) === */
/*QApplication {*/
/*  background: %%BG%%;*/
/*  color: %%FG%%;*/
/*  selection-color: %%FG%%;*/
/*  selection-background-color: %%PRIMARY_LIGHT%%;*/
/*}*/


/*QWidget {*/
/*  background: %%BG%%;*/
/*  color: %%FG%%;*/
/*  selection-color: %%FG%%;*/
/*  selection-background-color: %%PRIMARY%%;*/
/*}*/
/*QWidget:disabled {*/
/*  color: %%FG%%;*/
/*  selection-background-color: %%CARD_BG%%;*/
/*  selection-color: %%FG%%;*/
/*}*/
/*QWidget:focus { outline: none; }*/

/* --------------------------------------------------------------------- */
/* Top level widget ---------------------------------------------------- */
/* --------------------------------------------------------------------- */

/* QPushButton â€” modern, palette-first styling */
QPushButton {
  background: %%CARD_BG%%;
  color: %%FG%%;
  border: 1px solid %%BORDER%%;
  border-radius: %%RADIUS_SMALL%%;
  padding: 6px 12px;
}
QPushButton:hover { border-color: {{ PRIMARY_LIGHT }}; background: %%FIELD_BG%%; }
QPushButton:focus { border-color: {{ PRIMARY }}; }
QPushButton:pressed { background: %%FIELD_BG%%; }
QPushButton:disabled {
  color: %%FG%%;
  background: %%CARD_BG%%;
  border-color: %%BORDER%%;
}

/* Default and toggled states use PRIMARY */
QPushButton:default,
QPushButton:checked {
  background: {{ PRIMARY }};
  color: {{ ON_PRIMARY }};
  border: 1px solid {{ PRIMARY_DARK }};
}
QPushButton:default:hover,
QPushButton:checked:hover { background: {{ PRIMARY_LIGHT }}; }
QPushButton:default:pressed,
QPushButton:checked:pressed { background: {{ PRIMARY_DARK }}; }

/* Variants via dynamic property `variant` */
QPushButton[variant="primary"] {
  background: {{ PRIMARY }};
  color: {{ ON_PRIMARY }};
  border: 1px solid {{ PRIMARY_DARK }};
}
QPushButton[variant="primary"]:hover { background: {{ PRIMARY_LIGHT }}; }
QPushButton[variant="primary"]:pressed { background: {{ PRIMARY_DARK }}; }

QPushButton[variant="outline"] {
  background: transparent;
  color: %%FG%%;
  border: 1px solid %%BORDER%%;
}
QPushButton[variant="outline"]:hover { background: %%FIELD_BG%%; border-color: {{ PRIMARY }}; }
QPushButton[variant="outline"]:pressed { border-color: {{ PRIMARY_DARK }}; }

QPushButton[variant="ghost"] {
  background: transparent;
  color: {{ PRIMARY }};
  border: 1px solid transparent;
}
QPushButton[variant="ghost"]:hover { background: %%FIELD_BG%%; }

/* Semantic variants using accents */
QPushButton[variant="danger"] {
  background: {{ ACCENT_EMERGENCY }};
  color: {{ ON_PRIMARY }};
  border: 1px solid {{ ACCENT_EMERGENCY }};
}
QPushButton[variant="success"] {
  background: {{ ACCENT_SUCCESS }};
  color: {{ ON_PRIMARY }};
  border: 1px solid {{ ACCENT_SUCCESS }};
}

/* Modern ComboBox */
QComboBox {
  background: %%FIELD_BG%%;
  color: %%FG%%;
  border: 1px solid %%BORDER%%;
  border-radius: %%RADIUS_SMALL%%;
  padding: 6px 32px 6px 10px;
}
QComboBox:hover { border-color: {{ PRIMARY_LIGHT }}; }
QComboBox:focus { border-color: {{ PRIMARY }}; }
QComboBox:on    { border-color: {{ PRIMARY }}; }

/* Editable variant keeps inner editor clean */
QComboBox:editable { background: %%FIELD_BG%%; }
QComboBox:editable QLineEdit {
  background: transparent;
  border: none;
  padding: 0;
  margin: 0;
  color: %%FG%%;
  selection-background-color: {{ PRIMARY }};
  selection-color: {{ ON_PRIMARY }};
}

/* Drop-down button area */
QComboBox::drop-down {
  subcontrol-origin: padding;
  subcontrol-position: bottom right;
  width: 24px;
  border-left: 1px solid %%BORDER%%;
  margin: 2px 2px 2px 0;
  border-top-right-radius: %%RADIUS_SMALL%%;
  border-bottom-right-radius: %%RADIUS_SMALL%%;
  background: transparent;
}

/* Arrow icons (Material) */
QComboBox::down-arrow {
  image: {{ "arrow_drop_down" | material_icon_url(size="20,20", color=FG) }};
  width: 20px;
  height: 20px;
}
QComboBox::down-arrow:on {
  image: {{ "arrow_drop_up" | material_icon_url(size="20,20", color=FG) }};
}
QComboBox::down-arrow:hover{
  background: %%PRIMARY_LIGHT%%;
  border-radius: %%RADIUS_SMALL%%;
}
QComboBox::down-arrow:pressed {
  background: %%PRIMARY_DARK%%;
  border-radius: %%RADIUS_SMALL%%;
}
/* Disabled state */
QComboBox:disabled {
  color: %%FG%%;
  background: %%CARD_BG%%;
  border-color: %%BORDER%%;
}

/* Popup view styling */
QComboBox QAbstractItemView {
  background: %%FIELD_BG%%;
  color: %%FG%%;
  border: 1px solid %%BORDER%%;
  selection-background-color: {{ PRIMARY }};
  selection-color: {{ ON_PRIMARY }};
  outline: none;
}
QComboBox QAbstractItemView::item { padding: 6px 10px; }
QComboBox QAbstractItemView::item:hover    { background: %%CARD_BG%%; }
QComboBox QAbstractItemView::item:selected { background: {{ PRIMARY }}; color: {{ ON_PRIMARY }}; }


/* --------------------------------------------------------------------- */
/* Line edits & text edits --------------------------------------------- */
/* --------------------------------------------------------------------- */

/* QLineEdit */
QLineEdit {
  background: %%FIELD_BG%%;
  color: %%FG%%;
  border: 1px solid %%BORDER%%;
  border-radius: %%RADIUS_SMALL%%;
  padding: 6px 10px;
  selection-background-color: {{ PRIMARY }};
  selection-color: {{ ON_PRIMARY }};
}
QLineEdit:hover { border-color: {{ PRIMARY_LIGHT }}; }
QLineEdit:focus { border-color: {{ PRIMARY }}; }
QLineEdit:disabled {
  color: %%FG%%;
  background: %%CARD_BG%%;
  border-color: %%BORDER%%;
}
QLineEdit[readOnly="true"] {
  background: %%CARD_BG%%;
  color: %%FG%%;
  border-color: %%BORDER%%;
}

/* Clear button (shown only when clearButtonEnabled) */
QLineEdit { padding-right: 28px; }
QLineEdit::clear-button {
  subcontrol-origin: padding;
  subcontrol-position: right center;
  width: 18px; height: 18px;
  margin: 0 6px 0 4px;
  border-radius: 9px;
  background: transparent;
  image: {{ "close" | material_icon_url(size="16,16", color=FG) }};
}
QLineEdit::clear-button:hover { background: %%FIELD_BG%%; }

/* State accents via dynamic property */
QLineEdit[state="error"]   { border-color: {{ ACCENT_EMERGENCY }}; }
QLineEdit[state="warning"] { border-color: {{ ACCENT_WARNING }}; }
QLineEdit[state="success"] { border-color: {{ ACCENT_SUCCESS }}; }

/* QPlainTextEdit & QTextEdit */
QPlainTextEdit, QTextEdit {
  background: %%FIELD_BG%%;
  color: %%FG%%;
  border: 1px solid %%BORDER%%;
  border-radius: %%RADIUS_SMALL%%;
  padding: 6px 10px;
  selection-background-color: {{ PRIMARY }};
  selection-color: {{ ON_PRIMARY }};
}
QPlainTextEdit:hover, QTextEdit:hover { border-color: {{ PRIMARY_LIGHT }}; }
QPlainTextEdit:focus, QTextEdit:focus { border-color: {{ PRIMARY }}; }
QPlainTextEdit:disabled, QTextEdit:disabled {
  color: %%FG%%;
  background: %%CARD_BG%%;
  border-color: %%BORDER%%;
}
QPlainTextEdit[readOnly="true"], QTextEdit[readOnly="true"] {
  background: %%CARD_BG%%;
  color: %%FG%%;
  border-color: %%BORDER%%;
}
QPlainTextEdit[state="error"], QTextEdit[state="error"]     { border-color: {{ ACCENT_EMERGENCY }}; }
QPlainTextEdit[state="warning"], QTextEdit[state="warning"] { border-color: {{ ACCENT_WARNING }}; }
QPlainTextEdit[state="success"], QTextEdit[state="success"] { border-color: {{ ACCENT_SUCCESS }}; }

/* Completer & generic popup lists (QCompleter uses QListView/QTreeView) */
QListView, QTreeView {
  background: %%CARD_BG%%;
  color: %%FG%%;
  border: 1px solid %%BORDER%%;
  outline: none;
}
QListView::item, QTreeView::item { padding: 4px 8px; }
QListView::item:hover,  QTreeView::item:hover  { background: %%FIELD_BG%%; }

QListView::item:selected, QTreeView::item:selected { background: {{ PRIMARY }}; color: {{ ON_PRIMARY }}; }

/* --------------------------------------------------------------------- */
/* Spin boxes (QAbstractSpinBox base: QSpinBox, QDoubleSpinBox, Date/Time) */
/* --------------------------------------------------------------------- */
QAbstractSpinBox {
  background: %%FIELD_BG%%;
  color: %%FG%%;
  border: 1px solid %%BORDER%%;
  border-radius: %%RADIUS_SMALL%%;
  padding: 6px 28px 6px 10px;  /* reserve right gutter for step buttons */
  selection-background-color: {{ PRIMARY }};
  selection-color: {{ ON_PRIMARY }};
}
QAbstractSpinBox:hover { border-color: {{ PRIMARY_LIGHT }}; }
QAbstractSpinBox:focus { border-color: {{ PRIMARY }}; }
QAbstractSpinBox:disabled {
  color: %%FG%%;
  background: %%CARD_BG%%;
  border-color: %%BORDER%%;
}
QAbstractSpinBox[readOnly="true"] {
  background: %%CARD_BG%%;
  color: %%FG%%;
  border-color: %%BORDER%%;
}

/* Step buttons (right gutter, borderless like combobox; only separators) */
QAbstractSpinBox::up-button,
QAbstractSpinBox::down-button {
  width: 14px;
  background: transparent;
  margin: 2px 2px 2px 0;
  border: none;
}
QAbstractSpinBox::up-button:hover,
QAbstractSpinBox::down-button:hover { background: %%PRIMARY_LIGHT%%;border-radius:%%RADIUS_SMALL%%; }
QAbstractSpinBox::up-button:pressed,
QAbstractSpinBox::down-button:pressed { background: %%PRIMARY_DARK%%;border-radius:%%RADIUS_SMALL%%; }
QAbstractSpinBox::up-button:disabled,
QAbstractSpinBox::down-button:disabled { background: %%CARD_BG%%; }

/* Arrow glyphs */
QAbstractSpinBox::up-arrow   { image: {{ "keyboard_arrow_up"   | material_icon_url(size="12,12", color=FG) }};   width: 12px; height: 12px; }
QAbstractSpinBox::down-arrow { image: {{ "keyboard_arrow_down" | material_icon_url(size="12,12", color=FG) }};   width: 12px; height: 12px; }
QAbstractSpinBox::up-arrow:disabled,
QAbstractSpinBox::down-arrow:disabled { image: {{ "keyboard_arrow_down" | material_icon_url(size="12,12", color=FG) }}; }

/* Modern CheckBox */
QCheckBox {
  color: %%FG%%;
  spacing: 6px;
}
QCheckBox:disabled { color: %%FG%%; }

QCheckBox::indicator {
  width: 18px;
  height: 18px;
  border-radius: %%RADIUS_SMALL%%;
  border: 1px solid %%BORDER%%;
  background: %%FIELD_BG%%;
  margin-right: 6px;
}
QCheckBox::indicator:hover { border-color: {{ PRIMARY_LIGHT }}; }
QCheckBox::indicator:focus { border-color: {{ PRIMARY }}; }
QCheckBox::indicator:pressed { background: %%FIELD_BG%%; }

/* Checked */
QCheckBox::indicator:checked {
  background: {{ PRIMARY }};
  border-color: {{ PRIMARY_DARK }};
  image: {{ "check" | material_icon_url(size="14,14", color=ON_PRIMARY) }};
}
QCheckBox::indicator:checked:hover { background: {{ PRIMARY_LIGHT }}; }
QCheckBox::indicator:checked:pressed { background: {{ PRIMARY_DARK }}; }

/* Indeterminate */
QCheckBox::indicator:indeterminate {
  background: {{ PRIMARY }};
  border-color: {{ PRIMARY_DARK }};
  image: {{ "remove" | material_icon_url(size="14,14", color=ON_PRIMARY) }};
}
QCheckBox::indicator:indeterminate:hover { background: {{ PRIMARY_LIGHT }}; }
QCheckBox::indicator:indeterminate:pressed { background: {{ PRIMARY_DARK }}; }

/* Disabled indicator */
QCheckBox::indicator:disabled {
  background: %%CARD_BG%%;
  border-color: %%BORDER%%;
}
QCheckBox::indicator:disabled:checked {
  background: {{ PRIMARY }};
  border-color: {{ PRIMARY }};
  image: {{ "check" | material_icon_url(size="14,14", color=ON_PRIMARY) }};
}
QCheckBox::indicator:disabled:indeterminate {
  background: {{ PRIMARY }};
  border-color: {{ PRIMARY }};
  image: {{ "remove" | material_icon_url(size="14,14", color=ON_PRIMARY) }};
}

/* --------------------------------------------------------------------- */
/* Modern ToolButton (palette-first, toolbar-friendly) */
QToolButton {
  background: %%CARD_BG%%;
  color: %%FG%%;
  border: 1px solid %%BORDER%%;
  border-radius: %%RADIUS_SMALL%%;
  padding: 4px 4px;
  /* qproperty-iconSize: 16px 16px; */
}
/* Extra right gutter only for menu-bearing toolbuttons */
QToolButton[popupMode="1"],
QToolButton[popupMode="2"] {
  padding-right: 28px;
}
QToolButton:hover { border-color: {{ PRIMARY_LIGHT }}; background: %%FIELD_BG%%; }
QToolButton:focus { border-color: {{ PRIMARY }}; }
QToolButton:pressed { background: %%FIELD_BG%%; }
QToolButton:disabled {
  color: %%FG%%;
  background: %%CARD_BG%%;
  border-color: %%BORDER%%;
}

/* Checked / toggled behaves like primary */
QToolButton:checked {
  background: {{ PRIMARY }};
  color: {{ ON_PRIMARY }};
  border: 1px solid {{ PRIMARY_DARK }};
}
QToolButton:checked:hover { background: {{ PRIMARY_LIGHT }}; }
QToolButton:checked:pressed { background: {{ PRIMARY_DARK }}; }

/* Auto-raise (common on toolbars): flatter until hover/checked */
QToolButton[autoRaise="true"] {
  background: transparent;
  border-color: transparent;
}
QToolButton[autoRaise="true"]:hover { background: %%FIELD_BG%%; border-color: %%BORDER%%; }
QToolButton[autoRaise="true"]:checked { background: {{ PRIMARY }}; color: {{ ON_PRIMARY }}; border-color: {{ PRIMARY_DARK }}; }
QToolButton[autoRaise="true"][popupMode="1"],
QToolButton[autoRaise="true"][popupMode="2"] {
  padding-right: 28px;
}
/* Variants (match QPushButton) */
QToolButton[variant="primary"] { background: {{ PRIMARY }}; color: {{ ON_PRIMARY }}; border: 1px solid {{ PRIMARY_DARK }}; }
QToolButton[variant="primary"]:hover { background: {{ PRIMARY_LIGHT }}; }
QToolButton[variant="primary"]:pressed { background: {{ PRIMARY_DARK }}; }

QToolButton[variant="outline"] { background: transparent; color: %%FG%%; border: 1px solid %%BORDER%%; }
QToolButton[variant="outline"]:hover { background: %%FIELD_BG%%; border-color: {{ PRIMARY }}; }
QToolButton[variant="outline"]:pressed { border-color: {{ PRIMARY_DARK }}; }

QToolButton[variant="ghost"] { background: transparent; color: {{ PRIMARY }}; border: 1px solid transparent; }
QToolButton[variant="ghost"]:hover { background: %%FIELD_BG%%; }

QToolButton[variant="danger"] { background: {{ ACCENT_EMERGENCY }}; color: {{ ON_PRIMARY }}; border: 1px solid {{ ACCENT_EMERGENCY }}; }
QToolButton[variant="success"] { background: {{ ACCENT_SUCCESS }}; color: {{ ON_PRIMARY }}; border: 1px solid {{ ACCENT_SUCCESS }}; }

/* Size variants via dynamic property `size` */
QToolButton[size="sm"] { padding: 2px 6px; qproperty-iconSize: 14px 14px; }
QToolButton[size="lg"] { padding: 6px 12px; qproperty-iconSize: 20px 20px; }

/* Menu button and arrow for popup toolbuttons */
QToolButton::menu-button {
  subcontrol-origin: padding;  /* align with inner padding like QComboBox */
  subcontrol-position: right center;
  width: 20px;                 /* arrow gutter width */
  border-left: 1px solid %%BORDER%%;
  margin: 2px 2px 2px 0;
  border-top-right-radius: %%RADIUS_SMALL%%;
  border-bottom-right-radius: %%RADIUS_SMALL%%;
  background: transparent;
}
QToolButton::menu-button:hover { border-color: {{ PRIMARY_LIGHT }}; }
QToolButton::menu-arrow {
  image: {{ "arrow_drop_down" | material_icon_url(size="16,16", color=FG) }};
  width: 16px;
  height: 16px;
}
QToolButton::menu-arrow:open {
  image: {{ "arrow_drop_up" | material_icon_url(size="16,16", color=FG) }};
}
/* Modern RadioButton */
QRadioButton {
  color: %%FG%%;
  spacing: 6px; /* space between indicator and label */
}
QRadioButton:disabled { color: %%FG%%; }

QRadioButton::indicator {
  width: 14px;
  height: 14px;
  border-radius: 7px;  /* circular */
  border: 1px solid %%BORDER%%;
  background: %%FIELD_BG%%;
  margin-right: 6px;
  image: {{ "radio_button_unchecked" | material_icon_url(size="10,10", color=ON_PRIMARY) }};
}
QRadioButton::indicator:hover   { border-color: {{ PRIMARY_LIGHT }}; }
QRadioButton::indicator:focus   { border-color: {{ PRIMARY }}; }
QRadioButton::indicator:pressed { background: %%FIELD_BG%%; }

/* Checked */
QRadioButton::indicator:checked {
  background: {{ PRIMARY }};
  border-color: {{ PRIMARY_DARK }};
  image: {{ "radio_button_checked" | material_icon_url(size="10,10", color=ON_PRIMARY) }};
}
QRadioButton::indicator:checked:hover   { background: {{ PRIMARY_LIGHT }}; }
QRadioButton::indicator:checked:pressed { background: {{ PRIMARY_DARK }}; }

/* Disabled indicator */
QRadioButton::indicator:disabled {
  background: %%CARD_BG%%;
  border-color: %%BORDER%%;
}
QRadioButton::indicator:disabled:checked {
  background: {{ PRIMARY }};
  border-color: {{ PRIMARY }};
  image: {{ "lens" | material_icon_url(size="10,10", color=ON_PRIMARY) }};
}
/* --------------------------------------------------------------------- */
/* Contatiner widget ---------------------------------------------------- */
/* --------------------------------------------------------------------- */

/* TabWidget â€” JetBrains-like tabs (left aligned, underlined, gapped pane) */
QTabWidget { background: transparent; }

QTabWidget::pane {
  background: %%CARD_BG%%;
}

QTabWidget>QWidget#qt_tabwidget_stackedwidget {
  background: %%CARD_BG%%;
  border-bottom-left-radius: %%RADIUS_SMALL%%;
  border-bottom-right-radius: %%RADIUS_SMALL%%;
}

QTabBar {
  qproperty-expanding: true;
  qproperty-movable: false;
  qproperty-usesScrollButtons: true;
  qproperty-documentMode: true;
  background: %%CARD_BG%%;
  border-top-left-radius: %%RADIUS_MEDIUM%%;
  border-top-right-radius: %%RADIUS_MEDIUM%%;
  padding: 2px 6px;
  margin: 0 0 0 0;
}

QTabBar::tab {
  background: transparent;
  color: %%FG%%;
  border: none;
  border-bottom: 2px solid %%BORDER%%;
  padding: 8px 10px;
  margin-right: 12px;
}

QTabBar::tab:hover {
  color: %%FG%%;
  border-bottom-color: {{ PRIMARY_LIGHT }};
}
QTabBar::tab:selected {
  color: %%FG%%;
  border-bottom-color: {{ PRIMARY }};
}
QTabBar::tab:disabled {
  color: %%FG%%;
  border-bottom-color: transparent;
}

/* Other orientations (keeps underline logic if you ever use bottom tabs) */
QTabBar::tab:bottom { border-top: 2px solid transparent; border-bottom: none; }
QTabBar::tab:bottom:selected { border-top-color: {{ PRIMARY }}; }
QTabBar::tab:bottom:hover    { border-top-color: {{ PRIMARY_LIGHT }}; }

/* --------------------------------------------------------------------- */
/* GroupBox â€” simple, classic card ------------------------------------ */
/* --------------------------------------------------------------------- */
QGroupBox {
    font-weight: bold;
    margin-top: 8px;
    padding: 2px 1px 1px 1px;
}
QGroupBox::title {
    subcontrol-origin: margin;
    subcontrol-position: top left;
    left: 7px;
    margin: 0 2px 0 3px;
    background-color: transparent;
}
QGroupBox:flat {
    border-color: transparent;
}

QToolBox::tab {
  background: %%CARD_BG%%;
  color: %%FG%%;
  border: 1px solid %%BORDER%%;
  border-radius: %%RADIUS_SMALL%%;
  padding: 6px 15px;
  text-transform: uppercase;
}
QToolBox::tab:hover {
  border-color: {{ PRIMARY_LIGHT }};
}
QToolBox::tab:selected {
  background: %%FIELD_BG%%;
  color: %%FG%%;
  border-color: {{ PRIMARY }};
}

/* --------------------------------------------------------------------- */
/* ScrollArea & ScrollBars â€” modern minimal ---------------------------- */
/* --------------------------------------------------------------------- */

/* ScrollArea container THIS IS MESSING ELIDE ON ADS !!!!!!! */
/*QScrollArea {*/
/*  background: %%CARD_BG%%;*/
/*  color: %%FG%%;*/
/*  border: 1px solid %%BORDER%%;*/
/*  border-radius: %%RADIUS_SMALL%%;*/
/*}*/

/* Make the viewport transparent so content decides its own bg */
QScrollArea > QWidget#qt_scrollarea_viewport {
  background: transparent;
}

/* Optional frameless variant */
QScrollArea[frameless="true"] {
  background: transparent;
  border: none;
}

/* Scrollbars (shared across scroll areas, tables, editors) */
QScrollBar {
  background: transparent;
  border-radius: 1px;
}

QScrollBar:vertical {
  width: 10px;
  margin: 4px 2px 4px 2px;
  border-radius: 1px;
}
QScrollBar:horizontal {
  height: 10px;
  margin: 2px 4px 2px 4px;
  border-radius: 1px;
}

/* Hide the track (groove) entirely so only the handle is visible */
QScrollBar::groove:vertical,
QScrollBar::groove:horizontal {
  background: transparent;
  border: none;
}

/* Handles â€” rounded, subtle, colorize on hover/active */
QScrollBar::handle:vertical {
  background: %%BORDER%%;
  min-height: 24px;
  border-radius: 3px;
}
QScrollBar::handle:vertical:hover   { background: %%PRIMARY_LIGHT%%; }
QScrollBar::handle:vertical:pressed { background: %%PRIMARY%%; }

QScrollBar::handle:horizontal {
  background: %%BORDER%%;
  min-width: 24px;
  border-radius: 3px;
}
QScrollBar::handle:horizontal:hover   { background: %%PRIMARY_LIGHT%%; }
QScrollBar::handle:horizontal:pressed { background: %%PRIMARY%%; }

/* No arrows, no boxed buttons */
QScrollBar::add-line, QScrollBar::sub-line {
  background: transparent;
  border: none;
  width: 0; height: 0;
}

/* Track pages are transparent so only handle is visible */
QScrollBar::add-page, QScrollBar::sub-page {
  background: transparent;
}

/* Corner where both scrollbars meet */
QAbstractScrollArea::corner {
  background: transparent;
  border: none;
  border-bottom-right-radius: 0;
}

/* --------------------------------------------------------------------- */
/* Addon widget ---------------------------------------------------- */
/* --------------------------------------------------------------------- */

QToolBar {
    background-color: %%BG%%;
    color: %%FG%%;
    border: 1px solid %%BORDER%%;
    border-radius: %%RADIUS_SMALL%%;
}

/* --------------------------------------------------------------------- */
/* Native Qt Dock Widgets (QDockWidget) â€” modern rounded design */
/* --------------------------------------------------------------------- */
QDockWidget {
    background: %%CARD_BG%%;
    color: %%FG%%;
    border: 1px solid %%BORDER%%;
    border-radius: %%RADIUS_SMALL%%;
    titlebar-close-icon: {{ "close" | material_icon_url(size="14,14", color=FG) }};
    titlebar-normal-icon: {{ "ad_group" | material_icon_url(size="14,14", color=FG) }};
}
CDockWidget[index="0"] {
    border:none;
}
QDockWidget::widget {
    background: %%PRIMARY%%;
    color: %%FG%%;
    padding: 8px;
    border: none;
}
QScrollArea#dockWidgetScrollArea {
    padding: 0px;
    border: none;
}
QDockWidget::title {
    background: %%BG%%;
    color: %%FG%%;
    padding: 4px 8px;
    border-bottom: 1px solid %%BORDER%%;
}
QDockWidget::title:hover {
    background: %%FIELD_BG%%;
    border-color: {{ PRIMARY_LIGHT }};
}
/* Close and Float buttons with Material icons */
QDockWidget::close-button,
QDockWidget::float-button {
    width: 18px;
    height: 18px;
    padding: 2px;
    margin: 2px;
    border: none;
    border-radius: %%RADIUS_SMALL%%;
    background: transparent;
}
QDockWidget::close-button:hover {
    background: {{ PRIMARY }};
}
QDockWidget::float-button:hover {
    background: {{ PRIMARY }};
}

/* Dock separators (between dock areas) */
QMainWindow::separator {
    background: %%BORDER%%;
    width: 1px;
}
QMainWindow::separator:hover {
    background: {{ PRIMARY }};
}

/* --------------------------------------------------------------------- */
/* Advanced Docking System (ADS, PySide6QtAds) â€” modern rounded design */
/* --------------------------------------------------------------------- */

/******************************************************************************/
/* * CDockManager*/
/* *****************************************************************************/
ads--CDockManager
{
	background: transparent;
	border:none;
}



/******************************************************************************/
/* * CDockContainerWidget*/
/* *****************************************************************************/
ads--CDockContainerWidget {
	background: %%BG%%;
	padding: 2px;
	border-radius: %%RADIUS_MEDIUM%%;
	border:none;
}


/******************************************************************************/
/* * CDockAreaWidget*/
/* *****************************************************************************/
ads--CDockAreaWidget {
	background: %%CARD_BG%%;
	padding: 2px;
	border-radius: %%RADIUS_MEDIUM%%;
}


ads--CDockAreaTitleBar {
	background: %%BG%%;
	padding-bottom: 0px;
}


ads--CTitleBarButton {
	padding: 0px 0px;
	background: transparent;
	border: none;
}
ads--CTitleBarButton[focused=true] {
	padding: 0px 0px;
	background: %%PRIMARY%%;
	border: none;
}

ads--CTitleBarButton:hover {
	background: rgba(0, 0, 0, 24);
}

/*ads--CTitleBarButton:pressed {*/
/*	background: rgba(0, 0, 0, 48);*/
/*}*/

/*QScrollArea#dockWidgetScrollArea {*/
/*	padding: 0px;*/
/*	border: none;*/
/*}*/

/*#tabsMenuButton::menu-indicator {*/
/*	image: none;*/
/*}*/


#dockAreaCloseButton {
	qproperty-icon: {{ "close" | material_icon_url(size="16,16", color=FG) }},
       {{ "close" | material_icon_url(size="16,16", color=BORDER) }} disabled;
	qproperty-iconSize: 16px;
}

#detachGroupButton {
	qproperty-icon: {{ "ad_group" | material_icon_url(size="16,16", color=FG) }},
       {{ "ad_group" | material_icon_url(size="16,16", color=BORDER) }} disabled;
	qproperty-iconSize: 16px;
}
#tabsMenuButton {
    qproperty-icon: {{ "arrow_drop_down" | material_icon_url(size="16,16", color=FG) }},
       {{ "menu" | material_icon_url(size="16,16", color=BORDER) }} disabled;
    qproperty-iconSize: 16px;
    padding-right: 0px;
    }
/*Getting rid of tear button under the tabs menu button*/
#tabsMenuButton::menu-indicator,
#tabsMenuButton::tear {
    image: none;
    width: 0; height: 0;
    margin: 0; padding: 0;
}
#dockSettingsAction {
    padding-right: 0px;
}
ads--CDockAreaWidget[focused="true"] ads--CDockAreaTitleBar {
	border-bottom: none;
}


/******************************************************************************/
/* * CDockWidgetTab*/
/* *****************************************************************************/
/*ads--CDockWidgetTab[activeTab="true"] {*/
/*	background: rgb(204, 204, 204);*/
/*}*/


/* ADS custom tab widget to match QTabWidget appearance */
ads--CDockWidgetTab {
	background: transparent;
	border: none;
	border-bottom: 2px solid %%BORDER%%;
	padding-bottom: 2px;
	margin-bottom: 4px;
	margin-right: 12px;
	qproperty-iconSize: 16px 16px;
}
ads--CDockWidgetTab:hover {
	border-bottom-color: {{ PRIMARY_LIGHT }};
}
ads--CDockWidgetTab[activeTab="true"] {
	border-bottom-color: {{ PRIMARY }};
}
ads--CDockWidgetTab QLabel {
	color: %%FG%%;
}


#tabCloseButton {
	margin-top: 2px;
	background: none;
	border: none;
	padding: 0px 0px;
	qproperty-icon: {{ "close" | material_icon_url(size="16,16", color=FG) }},
       {{ "close" | material_icon_url(size="16,16", color=BORDER) }} disabled;
	qproperty-iconSize: 16px;
}

#tabCloseButton:hover {
	background: %%PRIMARY%%;
}

#tabCloseButton:pressed {
	background: %%PRIMARY_DARK%%;
}



/******************************************************************************/
/* * CDockWidget*/
/* *****************************************************************************/
ads--CDockWidget {
    background: %%CARD_BG%%;
    border: 1px solid %%BORDER%%;
    border-radius: %%RADIUS_MEDIUM%%;
}



/******************************************************************************/
/* **/
/* * Styling of auto hide functionality*/
/* **/
/* *****************************************************************************/


/******************************************************************************/
/* * CAutoHideTab*/
/* *****************************************************************************/
/*ads--CAutoHideTab {*/
/*	qproperty-iconSize: 16px 16px;*//* this is optional in case you would like to change icon size*/
/*	background: none;*/
/*	border: none;*/
/*	padding-left: 2px;*/
/*	padding-right: 0px;*/
/*	text-align: center;*/
/*	min-height: 20px;*/
/*	padding-bottom: 2px;*/
/*}*/


/*ads--CAutoHideTab:hover*/
/*{*/
/*	color: palette(highlight);*/
/*}*/


/*ads--CAutoHideTab[iconOnly="false"][sideBarLocation="0"],*/
/*ads--CAutoHideTab[iconOnly="false"][sideBarLocation="2"]  {*/
/*	border-top: 6px solid rgba(0, 0, 0, 48);*/
/*}*/


/*ads--CAutoHideTab[iconOnly="false"][sideBarLocation="1"],*/
/*ads--CAutoHideTab[iconOnly="false"][sideBarLocation="3"] {*/
/*	border-bottom: 6px solid rgba(0, 0, 0, 48);*/
/*}*/



/*ads--CAutoHideTab:hover[iconOnly="false"][sideBarLocation="0"],*/
/*ads--CAutoHideTab:hover[iconOnly="false"][sideBarLocation="2"],*/
/*ads--CAutoHideTab[iconOnly="false"][sideBarLocation="0"][activeTab="true"],*/
/*ads--CAutoHideTab[iconOnly="false"][sideBarLocation="2"][activeTab="true"]  {*/
/*	border-top: 6px solid palette(highlight);*/
/*}*/


/*ads--CAutoHideTab:hover[iconOnly="false"][sideBarLocation="1"],*/
/*ads--CAutoHideTab:hover[iconOnly="false"][sideBarLocation="3"],*/
/*ads--CAutoHideTab[iconOnly="false"][sideBarLocation="1"][activeTab="true"],*/
/*ads--CAutoHideTab[iconOnly="false"][sideBarLocation="3"][activeTab="true"] {*/
/*	border-bottom: 6px solid palette(highlight);*/
/*}*/


/***/
/* * Auto hide tabs with icon only*/
/* */
/*ads--CAutoHideTab[iconOnly="true"][sideBarLocation="0"] {*/
/*	border-top: 6px solid rgba(0, 0, 0, 48);*/
/*}*/

/*ads--CAutoHideTab[iconOnly="true"][sideBarLocation="1"] {*/
/*	border-left: 6px solid rgba(0, 0, 0, 48);*/
/*}*/

/*ads--CAutoHideTab[iconOnly="true"][sideBarLocation="2"] {*/
/*	border-right: 6px solid rgba(0, 0, 0, 48);*/
/*}*/

/*ads--CAutoHideTab[iconOnly="true"][sideBarLocation="3"] {*/
/*	border-bottom: 6px solid rgba(0, 0, 0, 48);*/
/*}*/


/***/
/* * Auto hide tabs with icon only hover*/
/* */
/*ads--CAutoHideTab:hover[iconOnly="true"][sideBarLocation="0"],*/
/*ads--CAutoHideTab[iconOnly="true"][sideBarLocation="0"][activeTab="true"] {*/
/*	border-top: 6px solid palette(highlight);*/
/*}*/

/*ads--CAutoHideTab:hover[iconOnly="true"][sideBarLocation="1"],*/
/*ads--CAutoHideTab[iconOnly="true"][sideBarLocation="1"][activeTab="true"] {*/
/*	border-left: 6px solid palette(highlight);*/
/*}*/

/*ads--CAutoHideTab:hover[iconOnly="true"][sideBarLocation="2"],*/
/*ads--CAutoHideTab[iconOnly="true"][sideBarLocation="2"][activeTab="true"] {*/
/*	border-right: 6px solid palette(highlight);*/
/*}*/

/*ads--CAutoHideTab:hover[iconOnly="true"][sideBarLocation="3"],*/
/*ads--CAutoHideTab[iconOnly="true"][sideBarLocation="3"][activeTab="true"] {*/
/*	border-bottom: 6px solid palette(highlight);*/
/*}*/



/******************************************************************************/
/* * CAutoHideSideBar*/
/* *****************************************************************************/
/*ads--CAutoHideSideBar{*/
/*	background: %%BG%%;*/
/*	border: none;*/
/*	qproperty-spacing: 12;*/
/*}*/

/*#sideTabsContainerWidget {*/
/*	background: transparent;*/
/*}*/


/*ads--CAutoHideSideBar[sideBarLocation="0"] {*/
/*	border-bottom: 1px solid palette(dark);*/
/*}*/

/*ads--CAutoHideSideBar[sideBarLocation="1"] {*/
/*	border-right: 1px solid palette(dark);*/
/*}*/

/*ads--CAutoHideSideBar[sideBarLocation="2"] {*/
/*	border-left: 1px solid palette(dark);*/
/*}*/

/*ads--CAutoHideSideBar[sideBarLocation="3"] {*/
/*	border-top: 1px solid palette(dark);*/
/*}*/


/******************************************************************************/
/* * CAutoHideDockContainer*/
/* *****************************************************************************/
/*ads--CAutoHideDockContainer {*/
/*	background: %%BG%%;*/
/*}*/


/*ads--CAutoHideDockContainer ads--CDockAreaTitleBar {*/
/*	background: palette(highlight);*/
/*	padding: 0px;*/
/*	border: none;*/
/*}*/


/**/
/* * This is required because the ads--CDockAreaWidget[focused="true"] will*/
/* * overwrite the ads--CAutoHideDockContainer ads--CDockAreaTitleBar rule*/
/* */
/*ads--CAutoHideDockContainer ads--CDockAreaWidget[focused="true"] ads--CDockAreaTitleBar {*/
/*	background: %%PRIMARY%%;*/
/*	padding: 0px;*/
/*	border: none;*/
/*}*/


/*#autoHideTitleLabel {*/
/*	padding-left: 4px;*/
/*	color: palette(light);*/
/*}*/


/******************************************************************************/
/* * CAutoHideDockContainer titlebar buttons*/
/* *****************************************************************************/
/*#dockAreaAutoHideButton {*/
/*	qproperty-icon: url(:/ads/images/vs-pin-button.svg);*/
/*	qproperty-iconSize: 16px;*/
/*}*/

/*ads--CAutoHideDockContainer #dockAreaAutoHideButton {*/
/*	qproperty-icon: url(:/ads/images/vs-pin-button-pinned-focused.svg);*/
/*	qproperty-iconSize: 16px;*/
/*}*/


/*ads--CAutoHideDockContainer #dockAreaCloseButton{*/
/*	qproperty-icon: url(:/ads/images/close-button-focused.svg)*/
/*}*/


/*ads--CAutoHideDockContainer ads--CTitleBarButton:hover {*/
/*	background: rgba(255, 255, 255, 48);*/
/*}*/

/*ads--CAutoHideDockContainer ads--CTitleBarButton:pressed {*/
/*	background: rgba(255, 255, 255, 96);*/
/*}*/

/******************************************************************************/
/* * CAutoHideDockContainer Titlebar and Buttons*/
/* *****************************************************************************/


/******************************************************************************/
/******************************************************************************/
/* * CResizeHandle and Splitters (minimal handle-only appearance)             */
/******************************************************************************/

/* --------------------------------------------------------------------- */
/* Splitters â€” modern elongated pill handle (ADS + QSplitter internals)  */
/* --------------------------------------------------------------------- */

/* Make ADS splitter handle transparent by default; size comes from :h/:v */
ads--CDockContainerWidget ads--CDockSplitter::handle {
    background: transparent;
    border: none;
    margin: 0;
}

/* ADS dedicated resize handle â€” this is the one to stylize */
ads--CResizeHandle {
    background: transparent; /* let the pill be drawn via image for crispness */
    border: none;
    margin: 0; /* base reset; orientation rules add breathing room */
}

/* Horizontal handle (between top/bottom panes) */
ads--CResizeHandle:horizontal {
    height: 14px;                /* accessible hit area */
    margin: 6px 0;               /* subtle gap between tiles */
    image: {{ "horizontal_rule" | material_icon_url(size="48,4", color=BORDER) }};
    cursor: split-v;
}
ads--CResizeHandle:horizontal:hover   { image: {{ "horizontal_rule" | material_icon_url(size="48,4", color=PRIMARY_LIGHT) }}; }
ads--CResizeHandle:horizontal:pressed { image: {{ "horizontal_rule" | material_icon_url(size="48,4", color=PRIMARY) }}; }

/* Vertical handle (between left/right panes) */
ads--CResizeHandle:vertical {
    width: 14px;                 /* accessible hit area */
    margin: 0 6px;               /* subtle gap between tiles */
    image: {{ "more_vert" | material_icon_url(size="4,48", color=BORDER) }};
    cursor: split-h;
}
ads--CResizeHandle:vertical:hover   { image: {{ "more_vert" | material_icon_url(size="4,48", color=PRIMARY_LIGHT) }}; }
ads--CResizeHandle:vertical:pressed { image: {{ "more_vert" | material_icon_url(size="4,48", color=PRIMARY) }}; }

/* Optional: also style the QSplitter handle within ADS containers for consistency */
ads--CDockContainerWidget QSplitter::handle:horizontal {
    background: transparent;
    height: 14px;
    margin: 6px 0;
    image: {{ "horizontal_rule" | material_icon_url(size="48,4", color=BORDER) }};
}
ads--CDockContainerWidget QSplitter::handle:horizontal:hover   { image: {{ "horizontal_rule" | material_icon_url(size="48,4", color=PRIMARY_LIGHT) }}; }
ads--CDockContainerWidget QSplitter::handle:horizontal:pressed { image: {{ "horizontal_rule" | material_icon_url(size="48,4", color=PRIMARY) }}; }

ads--CDockContainerWidget QSplitter::handle:vertical {
    background: transparent;
    width: 14px;
    margin: 0 6px;
    image: {{ "more_vert" | material_icon_url(size="4,48", color=BORDER) }};
}
ads--CDockContainerWidget QSplitter::handle:vertical:hover   { image: {{ "more_vert" | material_icon_url(size="4,48", color=PRIMARY_LIGHT) }}; }
ads--CDockContainerWidget QSplitter::handle:vertical:pressed { image: {{ "more_vert" | material_icon_url(size="4,48", color=PRIMARY) }}; }

ScanControl[dockWidgetContent="true"] {

    background: %%PRIMARY%%;
    color: %%FG%%;
    border: 1px solid %%BORDER%%;
    border-radius: %%RADIUS_SMALL%%;
    padding: 8px;
}