name: PR checks (ruff, mypy, pytest)

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    paths:
      - "**/*.py"
      - "pyproject.toml"
      - "mypy.ini"
      - "pytest.ini"
      - "requirements*.txt"
      - ".github/workflows/pr-checks.yml"

# Cancel older runs of the same PR if a new commit is pushed
concurrency:
  group: pr-checks-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

# Reusable snippet for Python setup on self-hosted
env:
  PYTHON_VERSION: "3.11"

jobs:
  ruff:
    name: ruff
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4

      # If your self-hosted runner doesn't have multiple Pythons,
      # you can skip setup-python and just use system python3.
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Create venv + install ruff
        run: |
          python -m venv .venv
          . .venv/bin/activate
          python -m pip install --upgrade pip
          pip install ruff

      - name: Ruff check
        run: . .venv/bin/activate && ruff check .

  mypy:
    name: mypy
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Create venv + install deps
        run: |
          python -m venv .venv
          . .venv/bin/activate
          python -m pip install --upgrade pip
          # install your package and mypy; adjust extras as needed
          pip install -e . || true
          pip install mypy

      - name: Type check
        # point to your source dir; adjust flags/config to your project
        run: . .venv/bin/activate && mypy src

  pytest:
    name: pytest
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Create venv + install test deps
        run: |
          python -m venv .venv
          . .venv/bin/activate
          python -m pip install --upgrade pip
          # install your package and test deps; tweak to match your project
          pip install -e . || true
          pip install -r requirements.txt || true
          pip install pytest

      - name: Run tests
        run: . .venv/bin/activate && pytest -q
