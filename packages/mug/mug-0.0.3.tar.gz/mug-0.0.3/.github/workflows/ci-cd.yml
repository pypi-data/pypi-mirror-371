name: CI-CD Pipeline

on:
  push:
    branches: [ main ]          # trigger on main
    tags:
      - 'v*.*.*'                # trigger on semantic tags

permissions:
  contents: write               # needed for release/publishing

jobs:
  test:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install project + test deps
        run: |
          python -m pip install -U pip
          pip install -e .
          pip install ruff mypy pytest pytest-cov pytest-mock
      - name: Run tests (use pytest.ini addopts)
        run: python -m pytest -q
      - name: Upload HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: htmlcov
          path: htmlcov
          if-no-files-found: ignore

  build:
    needs: test
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Build sdist + wheel
        run: |
          python -m pip install -U pip build
          python -m build --sdist --wheel
      - name: Upload dist artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*

  smoke:
    needs: build
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Download dist artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - name: Offline install from dist
        run: |
          ls -lah dist
          python -m pip install --no-index --no-deps dist/*.whl
      - name: Smoke test
        run: python -c "import mug; print(mug.__version__)"

  deploy:
    needs: [build, smoke]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Download dist artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - name: Validate pyproject.toml version matches tag
        run: |
          TAG_VERSION="${GITHUB_REF##*/}"
          PY_VERSION=$(python -c "import tomllib; print(tomllib.load(open('pyproject.toml','rb'))['project']['version'])")
          if [ "v$PY_VERSION" != "$TAG_VERSION" ]; then
            echo "Version mismatch: pyproject.toml ($PY_VERSION) != tag (${TAG_VERSION#v})"
            exit 1
          fi
      - name: Install publish deps
        run: |
          python -m pip install -U pip twine
      - name: Upload to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: python -m twine upload dist/*
