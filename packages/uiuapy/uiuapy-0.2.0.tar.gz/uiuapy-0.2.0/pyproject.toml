
[project]
name = "uiuapy"
version = "0.2.0"
description = "Use the Uiua array programming language from Python"
readme = "README.md"
requires-python = ">=3.9"
keywords = ["uiuapy", "uiua", "apl", "J", "kdb", "numpy", "pyo3", "array", "programming", "language", "vectorized"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: MacOS",
    "Programming Language :: Rust",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: CPython",
    "License :: OSI Approved :: MIT License",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Compilers",
    "Topic :: Software Development :: Interpreters",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Financial and Insurance Industry",
]
dependencies = [
    "numpy>=1.21.0",
]

[dependency-groups]
dev = [
    "pytest>=8.4.1",
    "ruff>=0.12.9",
]

[project.urls]
Homepage = "https://github.com/bergkvist/uiuapy"
Repository = "https://github.com/bergkvist/uiuapy"

[tool.ruff.format]
quote-style = "single"

[tool.ruff.lint]
select = [
    "A",        # detect shadowed builtins
    "B",        # detect common errors (flake8-bugbear)
    "N",        # enforce naming conventions, e.g. ClassName vs function_name
    "F",        # Pyflakes rules
    "W",        # PyCodeStyle warnings
    "E",        # PyCodeStyle errors
    "I",        # Sort imports properly
    "UP",       # Warn if certain things can changed due to newer Python versions
    "C4",       # Catch incorrect use of comprehensions, dict, list, etc
    "FA",       # Enforce from __future__ import annotations
    "ISC",      # Good use of string concatenation
    "ICN",      # Use common import conventions
    "RET",      # Good return practices
    "SIM",      # Common simplification rules
    "TID",      # Some good import practices
    "TC",       # Enforce importing certain types in a TYPE_CHECKING block
    "PTH",      # Use pathlib instead of os.path
    "NPY",      # Some numpy-specific things
    "BLE",      # disallow catch-all exceptions
    "DTZ",      # require strict timezone manipulation with datetime
    "RUF",      # ruff-specific rules
]

[build-system]
requires = ["setuptools", "setuptools-rust"]
build-backend = "setuptools.build_meta"

[tool.uv]
package = true
cache-keys = [{ file = "pyproject.toml"}, { file = "Cargo.toml" }, { file = "Cargo.lock" }, { file = "src/*.rs" }]

[[tool.uv.index]]
name = "testpypi"
url = "https://test.pypi.org/simple/"
publish-url = "https://test.pypi.org/legacy/"
explicit = true

[[tool.setuptools-rust.ext-modules]]
target = "uiua"
path = "Cargo.toml"
