name: Publish
on:
  push:
    tags:
      - "v*.*.*"
jobs:
  build:
    name: Build distribution üì¶
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install pypa/build
      run: python3 -m pip install build --user
    - name: Build a binary wheel and a source tarball
      run: python3 -m build
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions-${{ matrix.python-version }}
        path: dist/

  publish-to-testpypi:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    name: Publish Python üêç distribution üì¶ to TestPyPI
    needs:
      - build
    runs-on: ubuntu-latest

    environment:
      name: testpypi
      url: https://test.pypi.org/p/xopr

    permissions:
      id-token: write

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        pattern: python-package-distributions-*
        path: dist/
        merge-multiple: true
    - name: Publish distribution üì¶ to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/

  publish-to-pypi:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    name: Publish Python üêç distribution üì¶ to PyPI
    needs:
      - publish-to-testpypi
    runs-on: ubuntu-latest
    
    environment:
      name: pypi
      url: https://pypi.org/p/xopr
      
    permissions:
      id-token: write

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        pattern: python-package-distributions-*
        path: dist/
        merge-multiple: true
    - name: Publish distribution üì¶ to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

  github-release:
    name: Create GitHub Release with source code
    needs:
      - publish-to-pypi
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Create release with basic notes (will be updated by changelog workflow)
        gh release create '${{ github.ref_name }}' \
          --repo '${{ github.repository }}' \
          --title "Release ${{ github.ref_name }}" \
          --notes "Release ${{ github.ref_name }} - See CHANGELOG.md for details"
