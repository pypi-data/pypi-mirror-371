[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pyscheduler-fox"
authors = [
    {name = "Fox", email = "donfackarthur750@gmail.com"},
]
description = "A powerful yet simple Python task scheduler"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.7"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Monitoring",
    "Topic :: System :: Systems Administration",
    "Topic :: Utilities",
    "Environment :: Console",
    "Framework :: AsyncIO",
]
keywords = [
    "scheduler", "task", "cron", "async", "threading", "automation", 
    "jobs", "background", "periodic", "interval", "daemon", "service"
]
dependencies = []
dynamic = ["version"]

[project.optional-dependencies]
full = [
    "pyyaml>=5.1.0",
    "pytz>=2021.1",
    "croniter>=1.0.0"
]
yaml = ["pyyaml>=5.1.0"]
timezone = ["pytz>=2021.1"]
cron = ["croniter>=1.0.0"]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.20.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "build>=0.8.0",
    "twine>=4.0.0"
]

[project.urls]
Homepage = "https://github.com/Tiger-Foxx/PyScheduler"
Documentation = "https://github.com/Tiger-Foxx/PyScheduler/blob/main/docs/"
Repository = "https://github.com/Tiger-Foxx/PyScheduler"
Issues = "https://github.com/Tiger-Foxx/PyScheduler/issues"
Changelog = "https://github.com/Tiger-Foxx/PyScheduler/blob/main/docs/changelog.md"
Examples = "https://github.com/Tiger-Foxx/PyScheduler/tree/main/examples"

# CLI entry point (coming soon)
# [project.scripts]
# pyscheduler = "pyscheduler.cli.main:main"

[tool.setuptools.dynamic]
version = {attr = "pyscheduler.__version__"}

[tool.setuptools.packages.find]
exclude = ["tests*", "scripts*"]

[tool.black]
line-length = 100
target-version = ['py37']
include = '\.pyi?$'
extend-exclude = '''
/(
  \.eggs
  | \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3

[tool.mypy]
python_version = "3.7"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false  # Relax√© pour la v1.0
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
show_error_codes = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --cov=pyscheduler --cov-report=term-missing"
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["pyscheduler"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]