name: Publish Docker Images

on:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  # Run E2E tests first
  test-images:
    uses: ./.github/workflows/docker-e2e-tests.yml

  # Build and publish images after tests pass
  build-and-publish:
    needs: test-images
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' || github.event_name == 'release' }}
    permissions:
      contents: read
      packages: write
    outputs:
      version: ${{ steps.get_version.outputs.VERSION }}

    strategy:
      max-parallel: 2
      matrix:
        include:
          - name: core
            extras: ""
            tag_suffix: ""
          - name: easyocr
            extras: "easyocr"
            tag_suffix: "-easyocr"
          - name: paddle
            extras: "paddleocr"
            tag_suffix: "-paddle"
          - name: gmft
            extras: "gmft"
            tag_suffix: "-gmft"
          - name: all
            extras: "all"
            tag_suffix: "-all"

    steps:
      - name: Free up disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo docker system prune -af
          df -h

      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          ref: ${{ github.ref }}

      - name: Get release version
        id: get_version
        run: |
          if [ "${{ github.event_name }}" = "release" ]; then
            VERSION="${{ github.event.release.tag_name }}"
          else
            git fetch --tags
            VERSION=$(git tag --sort=-version:refname | head -n1)
          fi
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Using version: $VERSION"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: goldziher/kreuzberg
          tags: |
            type=raw,value=${{ steps.get_version.outputs.VERSION }}${{ matrix.tag_suffix }}
            type=raw,value=latest${{ matrix.tag_suffix }}

      - name: Build and push Docker image to Docker Hub
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./.docker/Dockerfile
          platforms: ${{ matrix.name == 'all' && 'linux/amd64' || 'linux/amd64,linux/arm64' }}
          push: true
          build-args: |
            EXTRAS=${{ matrix.extras }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Update Docker Hub README
        uses: peter-evans/dockerhub-description@v4
        if: matrix.name == 'core'
        continue-on-error: true
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: goldziher/kreuzberg
          readme-filepath: ./.docker/README.md
