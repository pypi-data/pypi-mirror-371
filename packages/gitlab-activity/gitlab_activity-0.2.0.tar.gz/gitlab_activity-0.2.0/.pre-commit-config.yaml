# pre-commit is a tool to perform a predefined set of tasks manually and/or
# automatically before git commits are made.
#
# Config reference: https://pre-commit.com/#pre-commit-configyaml---top-level
#
# Common tasks
#
# - Run on all files:   pre-commit run --all-files
# - Register git hooks: pre-commit install --install-hooks
#
# Exclude CHANGELOG.md as it can "sometimes" block release process
# exclude: "CHANGELOG.md"
repos:
  # Autoformat: Python code
  - repo: https://github.com/ambv/black
    rev: 25.1.0
    hooks:
      - id: black

  # Autoformat: markdown, yaml
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.1.0
    hooks:
      - id: prettier
        exclude: tests/.*

  # Autoformat: https://github.com/asottile/reorder_python_imports
  - repo: https://github.com/asottile/reorder_python_imports
    rev: v3.14.0
    hooks:
      - id: reorder-python-imports

  # Misc...
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      # Autoformat: Makes sure files end in a newline and only a newline.
      - id: end-of-file-fixer
        exclude: tests/.*

      # Autoformat: Sorts entries in requirements.txt.
      - id: requirements-txt-fixer

      # Lint: Check for files with names that would conflict on a
      # case-insensitive filesystem like MacOS HFS+ or Windows FAT.
      - id: check-case-conflict

      # Lint: Checks that non-binary executables have a proper shebang.
      - id: check-executables-have-shebangs

      # Lint: JSON files
      - id: check-json

      # Lint: YAML files
      - id: check-yaml

  # Lint: Python code
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.9.9
    hooks:
      - id: ruff
        args: ["--fix", "--show-fixes"]
