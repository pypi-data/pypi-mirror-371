# =============================================================================
# Genie Consultation Container - All-in-One PostgreSQL + FastAPI
# =============================================================================
#
# Unified container architecture for wish fulfillment orchestration:
# - PostgreSQL database with pgvector extension (internal port 5432)
# - FastAPI application with Genie consultation API (external port 45886)
# - Supervisord process management for multi-service coordination
# - Complete isolation from main workspace
#
# Usage:
#   docker-compose -f docker-compose-genie.yml up -d
#   docker-compose -f docker-compose-genie.yml logs -f
#   docker-compose -f docker-compose-genie.yml down
#
# Integration:
#   uvx automagik-hive --genie-serve    # Start Genie container
#   uvx automagik-hive --genie-logs     # View Genie logs
#   uvx automagik-hive --genie-stop     # Stop Genie container
#
# =============================================================================

# Shared build arguments for Genie container
x-genie-build-args: &genie-build-args
  BUILD_VERSION: ${BUILD_VERSION:-latest}
  BUILD_DATE: ${BUILD_DATE:-$(date -u +%Y-%m-%dT%H:%M:%SZ)}
  GIT_SHA: ${GIT_SHA:-$(git rev-parse HEAD 2>/dev/null || echo "unknown")}
  API_PORT: 45886
  CONTAINER_TYPE: genie

services:
  # Standalone PostgreSQL for Genie Development
  postgres-genie:
    image: agnohq/pgvector:16
    container_name: hive-postgres-genie
    restart: unless-stopped
    ports:
      - "45532:5432"  # Genie PostgreSQL port
    env_file:
      - ../../.env
    environment:
      # Genie-specific postgres overrides
      - POSTGRES_USER=genie_user
      - POSTGRES_PASSWORD=genie_secure_pass
      - POSTGRES_DB=hive_genie
      - PGDATA=/var/lib/postgresql/data/pgdata
    # Note: No volume mapping = ephemeral storage
    # Each container restart creates a fresh database
    networks:
      - genie_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Genie FastAPI Service (connects to postgres-genie)
  genie-server:
    build:
      context: ../../
      dockerfile: docker/genie/Dockerfile.api
      args:
        <<: *genie-build-args
      platforms:
        - linux/amd64
    container_name: hive-genie-server
    restart: unless-stopped
    user: "1000:1000"
    ports:
      - "45886:45886"  # Genie consultation API
    env_file:
      - ../../.env
    environment:
      # Genie-specific overrides only
      - HIVE_API_PORT=45886
      - HIVE_DATABASE_URL=postgresql+psycopg://genie_user:genie_secure_pass@postgres-genie:5432/hive_genie
      - HIVE_API_KEY=genie-test-key-12345
      - HIVE_CORS_ORIGINS=http://localhost:3000,http://localhost:45886
      - POSTGRES_USER=genie_user
      - POSTGRES_PASSWORD=genie_secure_pass
      - POSTGRES_DB=hive_genie
    volumes:
      - genie_app_logs:/app/logs                        # Application logs
      - genie_app_data:/app/data                        # Application data
    depends_on:
      postgres-genie:
        condition: service_healthy
    networks:
      - genie_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:45886/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

# Genie network configuration
networks:
  genie_network:
    driver: bridge
    name: hive_genie_network

# Genie persistent volumes
volumes:
  genie_app_logs:
    driver: local
    name: hive_genie_app_logs
  genie_app_data:
    driver: local
    name: hive_genie_app_data