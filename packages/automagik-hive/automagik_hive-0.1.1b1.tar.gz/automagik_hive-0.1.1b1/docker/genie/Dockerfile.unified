# ===========================================================================
# Automagik Hive Genie All-in-One Container
# PostgreSQL + FastAPI unified in single container with supervisord
# External Port: 45886, Internal PostgreSQL: 5432
# ===========================================================================

# Stage 1: Python Dependencies Builder
FROM python:3.12-slim as builder

# Install UV package manager
RUN pip install uv

# Copy dependency and build files
COPY pyproject.toml uv.lock README.md ./

# Install dependencies with UV
RUN uv sync --frozen --no-dev

# Stage 2: Unified Production Container
FROM ubuntu:22.04 as genie-production

# Set timezone and disable interactive prompts
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=UTC

# Install system dependencies with required repositories
RUN apt-get update && apt-get install -y software-properties-common wget gnupg && \
    # Add PostgreSQL 16 repository
    wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - && \
    echo "deb http://apt.postgresql.org/pub/repos/apt/ jammy-pgdg main" > /etc/apt/sources.list.d/pgdg.list && \
    # Add Python 3.12 repository (deadsnakes PPA)  
    add-apt-repository ppa:deadsnakes/ppa -y && \
    apt-get update && \
    apt-get install -y \
    python3.12 \
    python3.12-venv \
    python3.12-dev \
    python3-pip \
    postgresql-16 \
    postgresql-contrib-16 \
    postgresql-16-pgvector \
    supervisor \
    curl \
    sudo \
    gosu \
    && rm -rf /var/lib/apt/lists/*

# Create application user (non-root)
RUN useradd -m -u 1000 -s /bin/bash hive && \
    usermod -aG sudo hive && \
    echo 'hive ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers

# Set up PostgreSQL directories with proper permissions
RUN mkdir -p /var/lib/postgresql/data/pgdata && \
    chown -R 1000:1000 /var/lib/postgresql && \
    chmod 750 /var/lib/postgresql/data

# Copy Python dependencies from builder
COPY --from=builder --chown=1000:1000 /usr/local/lib/python3.12/site-packages /usr/local/lib/python3.12/site-packages
COPY --from=builder --chown=1000:1000 /usr/local/bin /usr/local/bin

# Copy application code
COPY --chown=1000:1000 . /app
WORKDIR /app

# Configure PostgreSQL
COPY --chown=1000:1000 docker/genie/postgresql.conf /etc/postgresql/16/main/
COPY --chown=1000:1000 docker/genie/pg_hba.conf /etc/postgresql/16/main/

# Configure supervisord
COPY --chown=1000:1000 docker/genie/supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# Create log directories
RUN mkdir -p /var/log/supervisor /var/log/postgresql /var/log/hive && \
    chown -R 1000:1000 /var/log/supervisor /var/log/postgresql /var/log/hive

# Create entrypoint script for initialization
COPY --chown=1000:1000 docker/genie/entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

# Expose Genie API port
EXPOSE 45886

# Health check for both PostgreSQL and FastAPI
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:45886/api/v1/health && \
        pg_isready -h localhost -p 5432 -U hive -d hive_genie

# Switch to application user and start
USER 1000:1000

# Start supervisord (manages PostgreSQL + FastAPI)
ENTRYPOINT ["/entrypoint.sh"]
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]