[project]
name = "apihub-python-client"
dynamic = ["version"]
description = "A dynamic, extensible Python client for the APIHUB service supporting any APIs following the extract → status → retrieve pattern"
readme = "README.md"
requires-python = ">=3.12"
authors = [{ name = "Unstract Team", email = "support@unstract.com" }]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
]
dependencies = [
    "requests>=2.28.0",
    "pydantic>=2.0.0",
    "typing-extensions>=4.0.0",
    "tenacity>=8.0.0",
    "httpx>=0.24.0",
    "python-dotenv",
]

[project.optional-dependencies]
async = ["aiohttp>=3.8.0", "aiofiles>=22.0.0"]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "python-dotenv>=1.0.0",
]
test = [
    "python-dotenv>=1.0.0",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
]
docs = [
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "sphinx-autodoc-typehints>=1.19.0",
    "myst-parser>=0.18.0",
]


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/apihub_client"]

[tool.hatch.version]
path = "src/apihub_client/__init__.py"

[tool.ruff]
line-length = 88
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.black]
line-length = 88
target-version = ["py312"]

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "test.*"
disallow_untyped_defs = false
ignore_errors = true

[tool.pytest.ini_options]
testpaths = ["test"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["src/apihub_client", "apihub_client"]
omit = ["*/test/*", "*/test_*.py", "*/__pycache__/*", "*/venv/*", "*/.venv/*"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["test", "tests", ".venv", "venv"]
skips = ["B101", "B601", "B113"]

[dependency-groups]
dev = [
    "bandit[toml]>=1.8.6",
    "pytest>=8.4.1",
    "pytest-benchmark>=5.1.0",
    "pytest-cov>=6.2.1",
    "pytest-mock>=3.14.1",
    "requests-mock>=1.12.1",
    "safety>=3.2.3",
    "tox>=4.28.0",
]

[project.urls]
Homepage = "https://github.com/Zipstack/apihub-python-client"
Documentation = "https://github.com/Zipstack/apihub-python-clien"
Repository = "https://github.com/Zipstack/apihub-python-client"
"Bug Tracker" = "https://github.com/Zipstack/apihub-python-client/issues"
