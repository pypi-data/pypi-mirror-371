[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "kgrv"
dynamic = ["version"]
description = "Python пакет для экспериментов и обучения"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "kogriv", email = "kogriv@github.com"}
]
maintainers = [
    {name = "kogriv", email = "kogrv@github.com"}
]
keywords = ["python", "package", "tutorial", "learning", "example"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers", 
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8", 
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
]
requires-python = ">=3.7"
dependencies = [
    "click>=8.0.0",
    "colorama>=0.4.0",
    "requests>=2.25.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0.0",
    "pytest-cov>=2.10.0", 
    "black>=21.0.0",
    "flake8>=3.8.0",
    "mypy>=0.910",
    "twine>=3.4.0",
    "build>=0.7.0",
]
docs = [
    "mkdocs>=1.2.0",
    "mkdocs-material>=7.0.0", 
    "mkdocstrings>=0.15.0",
]

[project.urls]
Homepage = "https://github.com/kogriv/kgrv"
Repository = "https://github.com/kogriv/kgrv.git"
Documentation = "https://github.com/kogriv/kgrv/tree/master/docs"
"Bug Reports" = "https://github.com/kogriv/kgrv/issues"

[project.scripts]
kgrv = "kgrv.cli_click:cli"

[tool.setuptools]
packages = ["kgrv"]

[tool.setuptools.dynamic]
version = {attr = "kgrv.__version__"}

[tool.setuptools.package-data]
kgrv = ["*.md", "*.txt"]

# Конфигурация для black (форматирование кода)
[tool.black]
line-length = 88
target-version = ['py37', 'py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# Конфигурация для pytest
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--tb=short",
    "--cov=kgrv",
    "--cov-report=term-missing",
    "--cov-report=html",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

# Конфигурация для mypy (типизация)
[tool.mypy]
python_version = "3.7"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

# Конфигурация для coverage
[tool.coverage.run]
source = ["kgrv"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
