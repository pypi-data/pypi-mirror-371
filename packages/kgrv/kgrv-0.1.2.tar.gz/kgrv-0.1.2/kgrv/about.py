"""
–ú–æ–¥—É–ª—å About –¥–ª—è –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–µ –∏ –ø—Ä–æ–µ–∫—Ç–µ.

–≠—Ç–æ—Ç –º–æ–¥—É–ª—å —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–ª–∞—Å—Å About, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç
–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–µ, –µ–≥–æ –Ω–∞–≤—ã–∫–∞—Ö –∏ –ø—Ä–æ–µ–∫—Ç–∞—Ö.
"""

from typing import List, Dict, Any
import datetime
import requests
from colorama import init, Fore, Style

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è colorama –¥–ª—è Windows
init()


class About:
    """
    –ö–ª–∞—Å—Å –¥–ª—è –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–µ.
    
    Attributes:
        name (str): –ò–º—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞
        github (str): GitHub –ø—Ä–æ—Ñ–∏–ª—å
        skills (List[str]): –°–ø–∏—Å–æ–∫ –Ω–∞–≤—ã–∫–æ–≤
        projects (List[str]): –°–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤
    """
    
    def __init__(self, name: str = "kogriv"):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—ä–µ–∫—Ç–∞ About.
        
        Args:
            name (str): –ò–º—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é "kogriv"
        """
        self.name = name
        self.github = f"https://github.com/{name}"
        self.skills = [
            "Python",
            "JavaScript", 
            "Git",
            "Docker",
            "SQL",
            "MQL5"
        ]
        self.projects = [
            "kgrv - Python –ø–∞–∫–µ—Ç –¥–ª—è —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤",
            "–†–∞–∑–ª–∏—á–Ω—ã–µ —Å–∫—Ä–∏–ø—Ç—ã –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏",
            "–¢–æ—Ä–≥–æ–≤—ã–µ —Ä–æ–±–æ—Ç—ã –Ω–∞ MQL5"
        ]
        self.created_at = datetime.datetime.now()
    
    def get_info(self) -> Dict[str, Any]:
        """
        –ü–æ–ª—É—á–∏—Ç—å –ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–µ.
        
        Returns:
            Dict[str, Any]: –°–ª–æ–≤–∞—Ä—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–µ
        """
        return {
            "name": self.name,
            "github": self.github,
            "skills": self.skills,
            "projects": self.projects,
            "created_at": self.created_at.strftime("%Y-%m-%d %H:%M:%S")
        }
    
    def get_skills(self) -> List[str]:
        """
        –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –Ω–∞–≤—ã–∫–æ–≤.
        
        Returns:
            List[str]: –°–ø–∏—Å–æ–∫ –Ω–∞–≤—ã–∫–æ–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞
        """
        return self.skills.copy()
    
    def add_skill(self, skill: str) -> None:
        """
        –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –Ω–∞–≤—ã–∫.
        
        Args:
            skill (str): –ù–æ–≤—ã–π –Ω–∞–≤—ã–∫ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
        """
        if skill not in self.skills:
            self.skills.append(skill)
    
    def get_projects(self) -> List[str]:
        """
        –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤.
        
        Returns:
            List[str]: –°–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞
        """
        return self.projects.copy()
    
    def add_project(self, project: str) -> None:
        """
        –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç.
        
        Args:
            project (str): –ù–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
        """
        if project not in self.projects:
            self.projects.append(project)
    
    def print_info(self) -> None:
        """
        –í—ã–≤–µ—Å—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–µ –≤ –∫–æ–Ω—Å–æ–ª—å.
        """
        print(f"üë®‚Äçüíª –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: {self.name}")
        print(f"üîó GitHub: {self.github}")
        print(f"üìÖ –°–æ–∑–¥–∞–Ω–æ: {self.created_at.strftime('%Y-%m-%d %H:%M:%S')}")
        print("\nüõ†Ô∏è –ù–∞–≤—ã–∫–∏:")
        for skill in self.skills:
            print(f"  ‚Ä¢ {skill}")
        
        print("\nüìÇ –ü—Ä–æ–µ–∫—Ç—ã:")
        for project in self.projects:
            print(f"  ‚Ä¢ {project}")
    
    def __str__(self) -> str:
        """
        –°—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞.
        
        Returns:
            str: –°—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–µ
        """
        return f"About({self.name}): {len(self.skills)} –Ω–∞–≤—ã–∫–æ–≤, {len(self.projects)} –ø—Ä–æ–µ–∫—Ç–æ–≤"
    
    def __repr__(self) -> str:
        """
        –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏.
        
        Returns:
            str: –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        """
        return f"About(name='{self.name}', skills={len(self.skills)}, projects={len(self.projects)})"
    
    def print_info_colored(self) -> None:
        """
        –í—ã–≤–µ—Å—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–µ –≤ –∫–æ–Ω—Å–æ–ª—å —Å —Ü–≤–µ—Ç–∞–º–∏.
        """
        print(f"{Fore.CYAN}üë®‚Äçüíª –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: {Fore.WHITE}{self.name}")
        print(f"{Fore.BLUE}üîó GitHub: {Fore.WHITE}{self.github}")
        print(f"{Fore.YELLOW}üìÖ –°–æ–∑–¥–∞–Ω–æ: {Fore.WHITE}{self.created_at.strftime('%Y-%m-%d %H:%M:%S')}")
        
        print(f"\n{Fore.GREEN}üõ†Ô∏è –ù–∞–≤—ã–∫–∏:")
        for skill in self.skills:
            print(f"  {Fore.GREEN}‚Ä¢ {Fore.WHITE}{skill}")
        
        print(f"\n{Fore.MAGENTA}üìÇ –ü—Ä–æ–µ–∫—Ç—ã:")
        for project in self.projects:
            print(f"  {Fore.MAGENTA}‚Ä¢ {Fore.WHITE}{project}")
    
    def validate_github(self) -> bool:
        """
        –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è GitHub –ø—Ä–æ—Ñ–∏–ª—è.
        
        Returns:
            bool: True –µ—Å–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, False –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ
        """
        try:
            response = requests.get(self.github, timeout=5)
            return response.status_code == 200
        except requests.RequestException:
            return False
    
    def get_profile_validation(self) -> Dict[str, Any]:
        """
        –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è.
        
        Returns:
            Dict[str, Any]: –°–ª–æ–≤–∞—Ä—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
        """
        github_exists = self.validate_github()
        profile_age_days = (datetime.datetime.now() - self.created_at).days
        
        return {
            "github_exists": github_exists,
            "profile_age_days": profile_age_days,
            "skills_count": len(self.skills),
            "projects_count": len(self.projects),
            "github_url": self.github
        }
    
    def print_validation_info(self) -> None:
        """
        –í—ã–≤–µ—Å—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è —Å —Ü–≤–µ—Ç–∞–º–∏.
        """
        validation = self.get_profile_validation()
        
        print(f"{Fore.CYAN}üîç –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ—Ñ–∏–ª—è {Fore.WHITE}{self.name}:")
        print(f"  {Fore.BLUE}GitHub –ø—Ä–æ—Ñ–∏–ª—å: {Fore.WHITE}{validation['github_url']}")
        
        if validation['github_exists']:
            print(f"  {Fore.GREEN}‚úÖ GitHub –ø—Ä–æ—Ñ–∏–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        else:
            print(f"  {Fore.RED}‚ùå GitHub –ø—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        print(f"  {Fore.YELLOW}üìä –í–æ–∑—Ä–∞—Å—Ç –ø—Ä–æ—Ñ–∏–ª—è: {Fore.WHITE}{validation['profile_age_days']} –¥–Ω–µ–π")
        print(f"  {Fore.GREEN}üõ†Ô∏è –ù–∞–≤—ã–∫–æ–≤: {Fore.WHITE}{validation['skills_count']}")
        print(f"  {Fore.MAGENTA}üìÇ –ü—Ä–æ–µ–∫—Ç–æ–≤: {Fore.WHITE}{validation['projects_count']}")
