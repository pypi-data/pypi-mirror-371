[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "cleanengine"
version = "0.1.1"
description = "The Ultimate Data Cleaning & Analysis Toolkit"
readme = "README.md"
license = "MIT"
authors = [
    {name = "CleanEngine Community", email = "contact@cleanengine.com"}
]
maintainers = [
    {name = "CleanEngine Community", email = "contact@cleanengine.com"}
]
keywords = [
    "data-cleaning",
    "data-analysis", 
    "data-profiling",
    "machine-learning",
    "data-science",
    "pandas",
    "scikit-learn",
    "data-validation",
    "rule-engine",
    "cli-tool",
    "data-quality",
    "outlier-detection",
    "clustering",
    "anomaly-detection",
    "correlation-analysis",
    "feature-importance",
    "data-visualization",
    "streamlit",
    "yaml-config",
    "automation"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Filters",
    "Topic :: Database",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Visualization",
]
requires-python = ">=3.9"
dependencies = [
    "pandas>=1.5.0",
    "numpy>=1.21.0",
    "scikit-learn>=1.1.0",
    "scipy>=1.9.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "plotly>=5.0.0",
    "kaleido>=0.2.1",
    "pyyaml>=6.0",
    "pyarrow>=8.0.0",
    "fastparquet>=0.8.0",
    "openpyxl>=3.0.0",
    "xlrd>=2.0.0",
    "psutil>=5.8.0",
    "rich>=12.0.0",
    "typer[all]>=0.7.0",
    "questionary>=1.10.0",
    "watchdog>=2.1.0",
    "streamlit>=1.20.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0", 
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "tox>=4.0.0"
]
docs = [
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "myst-parser>=1.0.0",
    "sphinx-autodoc-typehints>=1.23.0"
]
full = [
    "jupyter>=1.0.0",
    "ipython>=8.0.0",
    "notebook>=6.5.0"
]

[project.urls]
Homepage = "https://github.com/I-invincib1e/CleanEngine"
Documentation = "https://github.com/I-invincib1e/CleanEngine#readme"
Repository = "https://github.com/I-invincib1e/CleanEngine"
"Bug Tracker" = "https://github.com/I-invincib1e/CleanEngine/issues"
Changelog = "https://github.com/I-invincib1e/CleanEngine/blob/main/CHANGELOG.md"

[project.scripts]
cleanengine = "dataset_cleaner.cli:main"
ce = "dataset_cleaner.cli:main"

[project.gui-scripts]
cleanengine-gui = "dataset_cleaner.interfaces.streamlit_app:launch_streamlit"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"dataset_cleaner" = ["config/*.yaml", "config/*.yml", "*.py"]

[tool.setuptools.exclude-package-data]
"*" = ["*.pyc", "*.pyo", "*.pyd", "__pycache__", "*.so", "*.dll", "*.dylib"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src.dataset_cleaner"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]
