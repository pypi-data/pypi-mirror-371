<?xml version="1.0"?>
<mavlink>
  <include>common.xml</include>
  <version>1</version>
  <enums>
    <enum name="LEAF_INSPECTION_OPTION">
      <entry value="0" name="LEAF_INSPECTION_OPTION_BOTH">
        <description>Inspect both north and south</description>
      </entry>
      <entry value="1" name="LEAF_INSPECTION_OPTION_NORTH">
        <description>Inspect only the north</description>
      </entry>
      <entry value="2" name="LEAF_INSPECTION_OPTION_SOUTH">
        <description>Inspect only the south</description>
      </entry>
    </enum>
    <enum name="LEAF_MODE">
      <entry value="0" name="LEAF_MODE_RC_Stabilized">
        <description>Remote control stabilized mode</description>
      </entry>
      <entry value="1" name="LEAF_MODE_RC_POSITION">
        <description>Remote control position mode</description>
      </entry>
      <entry value="2" name="LEAF_MODE_WAYPOINT_MISSION">
        <description>Waypoint mission mode</description>
      </entry>
      <entry value="3" name="LEAF_MODE_LEARNING_INNER">
        <description>Learning inner loops mode</description>
      </entry>
      <entry value="4" name="LEAF_MODE_LEARNING_OUTER">
        <description>Learning outer loops mode</description>
      </entry>
      <entry value="5" name="LEAF_MODE_LEARNING_FULL">
        <description>Learning all loops mode</description>
      </entry>
      <entry value="6" name="LEAF_MODE_INSPECTION">
        <description>Inspection mode</description>
      </entry>
      <entry value="7" name="LEAF_MODE_REFINED_TUNING_ONLINE">
        <description>Refined tuning online mode</description>
      </entry>
      <entry value="8" name="LEAF_MODE_REFINED_TUNING_OFFLINE">
        <description>Refined tuning offline mode</description>
      </entry>
      <entry value="9" name="LEAF_MODE_REFINED_TUNING_OUTER">
        <description>Refined tuning outer mode</description>
      </entry>
      <entry value="10" name="LEAF_MODE_MISSION">
        <description>LeafSDK mission mode</description>
      </entry>
    </enum>
    <enum name="LEAF_STATUS">
      <entry value="0" name="LEAF_STATUS_READY_TO_LEARN">
        <description>Leaf is ready to learn</description>
      </entry>
      <entry value="1" name="LEAF_STATUS_LEARNING">
        <description>Leaf is learning</description>
      </entry>
      <entry value="2" name="LEAF_STATUS_READY_TO_FLY">
        <description>Leaf is ready to fly</description>
      </entry>
      <entry value="3" name="LEAF_STATUS_TAKING_OFF">
        <description>Leaf is taking off</description>
      </entry>
      <entry value="4" name="LEAF_STATUS_FLYING">
        <description>Leaf is flying</description>
      </entry>
      <entry value="5" name="LEAF_STATUS_LANDING">
        <description>Leaf is landing</description>
      </entry>
      <entry value="6" name="LEAF_STATUS_LANDED">
        <description>Leaf has landed</description>
      </entry>
      <entry value="7" name="LEAF_STATUS_ARMED_IDLE">
        <description>Leaf is in idle mode</description>
      </entry>
      <entry value="8" name="LEAF_STATUS_ARMED">
        <description>Leaf is armed</description>
      </entry>
      <entry value="9" name="LEAF_STATUS_DISARMED">
        <description>Leaf is disarmed</description>
      </entry>
      <entry value="10" name="LEAF_STATUS_NOT_READY">
        <description>Leaf is not ready to fly yet</description>
      </entry>
      <entry value="11" name="LEAF_STATUS_INSPECTION_READY">
        <description>Leaf is ready to perform inspection</description>
      </entry>
      <entry value="12" name="LEAF_STATUS_GOING_TO_NORTH_FACE">
        <description>Leaf is heading to north face</description>
      </entry>
      <entry value="13" name="LEAF_STATUS_GOING_TO_SOUTH_FACE">
        <description>Leaf is heading to south face</description>
      </entry>
      <entry value="14" name="LEAF_STATUS_INSPECTING_NORTH_FACE">
        <description>Leaf is performing inspection on north face</description>
      </entry>
      <entry value="15" name="LEAF_STATUS_INSPECTING_SOUTH_FACE">
        <description>Leaf is performing inspection on south face</description>
      </entry>
      <entry value="16" name="LEAF_STATUS_INSPECTION_NORTH_FACE_FINISHED">
        <description>Leaf has finished inspection on north face</description>
      </entry>
      <entry value="17" name="LEAF_STATUS_INSPECTION_SOUTH_FACE_FINISHED">
        <description>Leaf has finished inspection on south face</description>
      </entry>
      <entry value="18" name="LEAF_STATUS_INSPECTION_FINISHED">
        <description>Leaf has finished inspection</description>
      </entry>
      <entry value="19" name="LEAF_STATUS_INSPECTION_ABORTED">
        <description>Leaf has aborted inspection</description>
      </entry>
      <entry value="20" name="LEAF_STATUS_MISSION_PAUSED">
        <description>Leaf has paused the mission</description>
      </entry>
      <entry value="21" name="LEAF_STATUS_RETURNING_TO_BASE">
        <description>Leaf is heading to base</description>
      </entry>
    </enum>
    <enum name="LEAF_CONTROL_COMMAND">
      <entry value="0" name="LEAF_CONTROL_PAUSE">
        <description>Pause the exection of the current mission</description>
      </entry>
      <entry value="1" name="LEAF_CONTROL_RESUME">
        <description>Resume the exection of the current mission</description>
      </entry>
      <entry value="2" name="LEAF_CONTROL_ABORT">
        <description>Abort the exection of the current mission</description>
      </entry>
    </enum>
  </enums>
  <messages>
    <message id="77000" name="LEAF_MODE">
      <description>The system mode, as defined by enum LEAF_MODE</description>
      <field type="uint8_t" name="mode" enum="LEAF_MODE">The new leaf mode.</field>
    </message>
    <message id="77001" name="LEAF_SET_MODE">
      <description>Set the system mode, as defined by enum LEAF_MODE. There is no target component id as the mode is by definition for the overall aircraft, not only for one component.</description>
      <field type="uint8_t" name="target_system">The system setting the mode</field>
      <field type="uint8_t" name="mode" enum="LEAF_MODE">The new leaf mode.</field>
    </message>
    <message id="77002" name="LEAF_STATUS">
      <description>The system status, as defined by enum LEAF_STATUS</description>
      <field type="uint8_t" name="status" enum="LEAF_STATUS">The new leaf status.</field>
    </message>
    <message id="77003" name="LEAF_DO_ARM">
      <description>Arms the leaf</description>
      <field type="uint8_t" name="target_system">The system needs to be armed</field>
      <field type="uint8_t" name="arm">1 to arm, 0 to disarm</field>
    </message>
    <message id="77005" name="LEAF_DO_TAKEOFF">
      <description>Commands the leaf to takeoff</description>
      <field type="uint8_t" name="target_system">The system needs to takeoff</field>
      <field type="float" name="altitude">The altitude to takeoff to</field>
    </message>
    <message id="77006" name="LEAF_DO_LAND">
      <description>Commands the leaf to land</description>
      <field type="uint8_t" name="target_system">The system needs to land</field>
    </message>
    <message id="77007" name="LEAF_DO_REGISTER_POS_OFFSET_FROM_EST_POS">
      <description>Commands the leaf to go into emergency mode</description>
      <field type="uint8_t" name="target_system">The system needs to go into emergency mode</field>
      <field type="uint8_t" name="reg">1 to register, 0 to unregister</field>
    </message>
    <message id="77008" name="LEAF_DO_QUEUE_TRAJ_FROM_BUFFER_BY_ID">
      <description>Commands the leaf to queue a trajectory from the buffer by id</description>
      <field type="uint8_t" name="target_system">The system needs to queue a trajectory</field>
      <field type="char[64]" name="traj_id">The id of the trajectory to queue</field>
    </message>
    <message id="77009" name="LEAF_DO_SWITCH_MRFT_ROLL">
      <description>Commands the leaf to switch to MRFT roll controller</description>
      <field type="uint8_t" name="target_system">The system needs to switch to MRFT roll controller</field>
      <field type="uint8_t" name="enable">1 to switch on, 0 to switch back off</field>
    </message>
    <message id="77010" name="LEAF_DO_SWITCH_MRFT_PITCH">
      <description>Commands the leaf to switch to MRFT pitch controller</description>
      <field type="uint8_t" name="target_system">The system needs to switch to MRFT pitch controller</field>
      <field type="uint8_t" name="enable">1 to switch on, 0 to switch back off</field>
    </message>
    <message id="77011" name="LEAF_DO_SWITCH_MRFT_ALT">
      <description>Commands the leaf to switch to MRFT altitude controller</description>
      <field type="uint8_t" name="target_system">The system needs to switch to MRFT altitude controller</field>
      <field type="uint8_t" name="enable">1 to switch on, 0 to switch back off</field>
    </message>
    <message id="77012" name="LEAF_DO_SWITCH_MRFT_X">
      <description>Commands the leaf to switch to MRFT x controller</description>
      <field type="uint8_t" name="target_system">The system needs to switch to MRFT x controller</field>
      <field type="uint8_t" name="enable">1 to switch on, 0 to switch back off</field>
    </message>
    <message id="77013" name="LEAF_DO_SWITCH_MRFT_Y">
      <description>Commands the leaf to switch to MRFT y controller</description>
      <field type="uint8_t" name="target_system">The system needs to switch to MRFT y controller</field>
      <field type="uint8_t" name="enable">1 to switch on, 0 to switch back off</field>
    </message>
    <message id="77014" name="LEAF_DO_INSPECT">
      <description>Commands the leaf to perform inspection</description>
      <field type="uint8_t" name="target_system">The system needs to perform inspection</field>
      <field type="uint8_t" name="slap">The slap to inspect, 1 or 2 or 0 for both</field>
    </message>
    <message id="77015" name="LEAF_CONTROL_CMD">
      <description>Commands the leaf to execute a control command</description>
      <field type="uint8_t" name="target_system">The system needs to execute a control command</field>
      <field type="uint8_t" name="cmd" enum="LEAF_CONTROL_COMMAND">The control command to execute</field>
    </message>
    <message id="77016" name="LEAF_SAY_TO_QGC">
      <description>Commands the leaf to say something to QGC</description>
      <field type="uint8_t" name="target_system">The system needs to say something to QGC</field>
      <field type="char[64]" name="content">The message to say</field>
    </message>
    <message id="77017" name="LEAF_DO_ARM_IDLE">
      <description>Commands the leaf to switch to MRFT y controller</description>
      <field type="uint8_t" name="target_system">The system needs to idle</field>
      <field type="uint8_t" name="enable">1 to idle, 0 to disarm</field>
    </message>
    <message id="77018" name="LEAF_CLIENT_TAGNAME">
      <description>The client tag name</description>
      <field type="char[64]" name="tagname">The tag name of the client</field>
    </message>
    <message id="77019" name="LEAF_MRFT_STATUS">
      <description>The MRFT status</description>
      <field type="uint8_t" name="roll">The roll MRFT status</field>
      <field type="uint8_t" name="pitch">The pitch MRFT status</field>
      <field type="uint8_t" name="alt">The altitude MRFT status</field>
      <field type="uint8_t" name="x">The x MRFT status</field>
      <field type="uint8_t" name="y">The y MRFT status</field>
    </message>
    <message id="77020" name="LEAF_INSPECTION_OPTION">
      <description>The inspection option, as defined by enum LEAF_INSPECTION_OPTION</description>
      <field type="uint8_t" name="option" enum="LEAF_INSPECTION_OPTION">The new leaf inspection option.</field>
    </message>
    <message id="77021" name="LEAF_SET_INSPECTION_OPTION">
      <description>Set the inspection option, as defined by enum LEAF_INSPECTION_OPTION.</description>
      <field type="uint8_t" name="target_system">The system setting the mode</field>
      <field type="uint8_t" name="option" enum="LEAF_INSPECTION_OPTION">The new leaf inspection option.</field>
    </message>
    <message id="77022" name="LEAF_HEARTBEAT">
      <description>The heartbeat message</description>
      <field type="uint8_t" name="status" enum="LEAF_STATUS">The status of the system</field>
      <field type="uint8_t" name="mode" enum="LEAF_MODE">The mode of the system</field>
      <field type="char[64]" name="profile">The profile of the system</field>
      <field type="char[64]" name="version">The version of the system</field>
    </message>
    <message id="77023" name="LEAF_DO_QUEUE_EXTERNAL_TRAJECTORY">
      <description>Commands the leaf to queue the external trajectory primitive.</description>
      <field type="uint8_t" name="target_system">The system needs to queue the trajectory</field>
      <field type="uint8_t" name="queue">1 to queue, 0 to not</field>
      <field type="uint8_t" name="traj_id">0 for pos, 1 for ori</field>
    </message>
    <message id="77024" name="LEAF_ACK_QUEUE_EXTERNAL_TRAJECTORY_POS">
      <description>Acknowledges that the external trajectory primitive is queued.</description>
      <field type="uint8_t" name="target_system">The system needs to queue the trajectory</field>
      <field type="uint8_t" name="status">1 for ack, 0 for nack</field>
      <field type="uint8_t" name="traj_id">0 for pos, 1 for ori</field>
    </message>
    <message id="77025" name="LEAF_ACK_QUEUE_EXTERNAL_TRAJECTORY_ORI">
      <description>Acknowledges that the external trajectory primitive is queued.</description>
      <field type="uint8_t" name="target_system">The system needs to queue the trajectory</field>
      <field type="uint8_t" name="status">1 for ack, 0 for nack</field>
      <field type="uint8_t" name="traj_id">0 for pos, 1 for ori</field>
    </message>
    <message id="77026" name="LEAF_EXTERNAL_TRAJECTORY_SETPOINT_ENU">
      <description>Reports the leaf vehicle position, velocity, and acceleration as specified by the external trajectory.</description>
      <field type="float" name="x" units="m">X Position in ENU frame</field>
      <field type="float" name="y" units="m">Y Position in ENU frame</field>
      <field type="float" name="z" units="m">Z Position in ENU frame</field>
      <field type="float" name="vx" units="m/s">X velocity in ENU frame</field>
      <field type="float" name="vy" units="m/s">Y velocity in ENU frame</field>
      <field type="float" name="vz" units="m/s">Z velocity in ENU frame</field>
      <field type="float" name="afx" units="m/s/s">X acceleration or force in ENU frame in meter / s^2 or N</field>
      <field type="float" name="afy" units="m/s/s">Y acceleration or force in ENU frame in meter / s^2 or N</field>
      <field type="float" name="afz" units="m/s/s">Z acceleration or force in ENU frame in meter / s^2 or N</field>
      <field type="float" name="yaw" units="rad">yaw setpoint</field>
      <field type="float" name="yaw_rate" units="rad/s">yaw rate setpoint</field>
    </message>
    <message id="77027" name="LEAF_DO_TERMINATE_EXTERNAL_TRAJECTORY">
      <description>Terminates the external trajectory is completed.</description>
      <field type="uint8_t" name="target_system">The system needs to queue the trajectory</field>
      <field type="uint8_t" name="status">1 for terminate, 0 for not</field>
      <field type="uint8_t" name="traj_id">0 for pos, 1 for ori</field>
    </message>
    <message id="77028" name="LEAF_ACK_TERMINATE_EXTERNAL_TRAJECTORY_POS">
      <description>Acknowledges that the external trajectory is completed.</description>
      <field type="uint8_t" name="target_system">The system needs to queue the trajectory</field>
      <field type="uint8_t" name="status">1 for ack, 0 for nack</field>
      <field type="uint8_t" name="traj_id">0 for pos, 1 for ori</field>
    </message>
    <message id="77029" name="LEAF_ACK_TERMINATE_EXTERNAL_TRAJECTORY_ORI">
      <description>Acknowledges that the external trajectory is completed.</description>
      <field type="uint8_t" name="target_system">The system needs to queue the trajectory</field>
      <field type="uint8_t" name="status">1 for ack, 0 for nack</field>
      <field type="uint8_t" name="traj_id">0 for pos, 1 for ori</field>
    </message>
    <message id="77030" name="LEAF_EXTERNAL_TRAJECTORY_OFFSET_ENU_POS">
      <description>Stores the last positional offset value in ENU frame.</description>
      <field type="float" name="x" units="m">X Position in ENU frame</field>
      <field type="float" name="y" units="m">Y Position in ENU frame</field>
      <field type="float" name="z" units="m">Z Position in ENU frame</field>
    </message>
    <message id="77031" name="LEAF_EXTERNAL_TRAJECTORY_OFFSET_ENU_ORI">
      <description>Stores the last orientational offset value in ENU frame.</description>
      <field type="float" name="x" units="rad">X orientation in rad</field>
      <field type="float" name="y" units="rad">Y orientation in rad</field>
      <field type="float" name="z" units="rad">Z orientation in rad</field>
    </message>
    <message id="77032" name="LEAF_DO_MISSION_RUN">
      <description>Commands the leaf to run a mission.</description>
      <field type="uint8_t" name="target_system">The system needs to run the mission</field>
      <field type="char[64]" name="mission_id">The id of the mission to run</field>
    </message>
    <message id="77033" name="LEAF_ACK_MISSION_RUN">
      <description>Acknowledges that the mission run command has been received.</description>
      <field type="uint8_t" name="target_system">The system that received the mission run command</field>
      <field type="uint8_t" name="status">1 for ack, 0 for nack</field>
      <field type="char[64]" name="mission_id">The id of the mission</field>
    </message>
  </messages>
</mavlink>
