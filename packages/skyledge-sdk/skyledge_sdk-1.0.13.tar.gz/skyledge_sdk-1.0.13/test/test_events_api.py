# coding: utf-8

"""
    Skyledge API

    Sky Ledge is an operational insights platform that gives you the visibility and control you need to minimise inefficiencies, oversight, theft, and ultimately, unnecessary costs associated with your operations.

    The version of the OpenAPI document: 1.0.2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from skyledge_sdk.api.events_api import EventsApi


class TestEventsApi(unittest.TestCase):
    """EventsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = EventsApi()

    def tearDown(self) -> None:
        pass

    def test_clear_events(self) -> None:
        """Test case for clear_events

        """
        pass

    def test_create_event(self) -> None:
        """Test case for create_event

        """
        pass

    def test_create_event_by_identifier(self) -> None:
        """Test case for create_event_by_identifier

        """
        pass

    def test_get_control_room_event_summary(self) -> None:
        """Test case for get_control_room_event_summary

        """
        pass

    def test_get_event(self) -> None:
        """Test case for get_event

        """
        pass

    def test_list_control_room_event_changes(self) -> None:
        """Test case for list_control_room_event_changes

        """
        pass

    def test_list_control_room_events(self) -> None:
        """Test case for list_control_room_events

        """
        pass

    def test_retrieve_latest100_active_events(self) -> None:
        """Test case for retrieve_latest100_active_events

        """
        pass

    def test_search_events(self) -> None:
        """Test case for search_events

        """
        pass

    def test_search_events_within_control_room(self) -> None:
        """Test case for search_events_within_control_room

        """
        pass

    def test_update_event(self) -> None:
        """Test case for update_event

        """
        pass


if __name__ == '__main__':
    unittest.main()
