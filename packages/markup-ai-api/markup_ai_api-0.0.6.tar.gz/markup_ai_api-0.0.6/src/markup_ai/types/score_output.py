# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .clarity_score import ClarityScore
from .grammar_score import GrammarScore
from .quality_score import QualityScore
from .style_guide_score import StyleGuideScore
from .terminology_score import TerminologyScore
from .tone_score import ToneScore


class ScoreOutput(UniversalBaseModel):
    quality: typing.Optional[QualityScore] = None
    clarity: typing.Optional[ClarityScore] = None
    grammar: typing.Optional[GrammarScore] = None
    style_guide: typing.Optional[StyleGuideScore] = None
    tone: typing.Optional[ToneScore] = None
    terminology: typing.Optional[TerminologyScore] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
