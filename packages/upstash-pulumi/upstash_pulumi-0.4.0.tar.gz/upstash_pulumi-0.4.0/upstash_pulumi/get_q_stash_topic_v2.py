# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetQStashTopicV2Result',
    'AwaitableGetQStashTopicV2Result',
    'get_q_stash_topic_v2',
    'get_q_stash_topic_v2_output',
]

@pulumi.output_type
class GetQStashTopicV2Result:
    """
    A collection of values returned by getQStashTopicV2.
    """
    def __init__(__self__, created_at=None, endpoints=None, id=None, name=None, updated_at=None):
        if created_at and not isinstance(created_at, int):
            raise TypeError("Expected argument 'created_at' to be a int")
        pulumi.set(__self__, "created_at", created_at)
        if endpoints and not isinstance(endpoints, list):
            raise TypeError("Expected argument 'endpoints' to be a list")
        pulumi.set(__self__, "endpoints", endpoints)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if updated_at and not isinstance(updated_at, int):
            raise TypeError("Expected argument 'updated_at' to be a int")
        pulumi.set(__self__, "updated_at", updated_at)

    @property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> int:
        return pulumi.get(self, "created_at")

    @property
    @pulumi.getter
    def endpoints(self) -> Sequence[str]:
        return pulumi.get(self, "endpoints")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> int:
        return pulumi.get(self, "updated_at")


class AwaitableGetQStashTopicV2Result(GetQStashTopicV2Result):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetQStashTopicV2Result(
            created_at=self.created_at,
            endpoints=self.endpoints,
            id=self.id,
            name=self.name,
            updated_at=self.updated_at)


def get_q_stash_topic_v2(name: Optional[str] = None,
                         opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetQStashTopicV2Result:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['name'] = name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
        if opts.plugin_download_url is None:
            opts.plugin_download_url = _utilities.get_plugin_download_url()
    __ret__ = pulumi.runtime.invoke('upstash:index/getQStashTopicV2:getQStashTopicV2', __args__, opts=opts, typ=GetQStashTopicV2Result).value

    return AwaitableGetQStashTopicV2Result(
        created_at=__ret__.created_at,
        endpoints=__ret__.endpoints,
        id=__ret__.id,
        name=__ret__.name,
        updated_at=__ret__.updated_at)


@_utilities.lift_output_func(get_q_stash_topic_v2)
def get_q_stash_topic_v2_output(name: Optional[pulumi.Input[str]] = None,
                                opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetQStashTopicV2Result]:
    """
    Use this data source to access information about an existing resource.
    """
    ...
