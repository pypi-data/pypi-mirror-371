Metadata-Version: 2.4
Name: mcp-sqlserver-filesystem
Version: 0.1.1
Summary: Enhanced MCP server for SQL Server and filesystem access with dual interface support (Web UI and Desktop Application)
Project-URL: Homepage, https://github.com/ppengit/mcp-sqlserver-filesystem
Project-URL: Repository, https://github.com/ppengit/mcp-sqlserver-filesystem
Project-URL: Issues, https://github.com/ppengit/mcp-sqlserver-filesystem/issues
Author-email: penjay <peng.it@qq.com>
License: MIT
License-File: LICENSE
Keywords: cross-platform,database,desktop-app,dual-interface,filesystem,interactive,mcp,sqlserver,tauri,web-ui
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: MacOS X
Classifier: Environment :: Web Environment
Classifier: Environment :: Win32 (MS Windows)
Classifier: Environment :: X11 Applications
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Database
Classifier: Topic :: Desktop Environment
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Software Development :: User Interfaces
Classifier: Topic :: System :: Filesystems
Requires-Python: >=3.11
Requires-Dist: aiofiles>=23.0.0
Requires-Dist: aiohttp>=3.8.0
Requires-Dist: fastapi>=0.115.0
Requires-Dist: fastmcp>=2.0.0
Requires-Dist: jinja2>=3.1.0
Requires-Dist: mcp>=1.9.3
Requires-Dist: psutil>=7.0.0
Requires-Dist: pydantic>=2.0.0
Requires-Dist: pyodbc>=5.0.0
Requires-Dist: python-dotenv>=1.0.0
Requires-Dist: sqlalchemy>=2.0.0
Requires-Dist: uvicorn>=0.30.0
Requires-Dist: websockets>=13.0.0
Provides-Extra: dev
Requires-Dist: black>=23.0.0; extra == 'dev'
Requires-Dist: bump2version>=1.0.1; extra == 'dev'
Requires-Dist: flake8>=6.0.0; extra == 'dev'
Requires-Dist: isort>=5.12.0; extra == 'dev'
Requires-Dist: maturin>=1.8.7; extra == 'dev'
Requires-Dist: mypy>=1.0.0; extra == 'dev'
Requires-Dist: pillow>=11.2.1; extra == 'dev'
Requires-Dist: pre-commit>=3.0.0; extra == 'dev'
Requires-Dist: pytest-asyncio>=0.21.0; extra == 'dev'
Requires-Dist: pytest-cov>=4.0.0; extra == 'dev'
Requires-Dist: pytest-timeout>=2.1.0; extra == 'dev'
Requires-Dist: pytest>=7.0.0; extra == 'dev'
Requires-Dist: ruff>=0.11.0; extra == 'dev'
Requires-Dist: setuptools-rust>=1.11.1; extra == 'dev'
Requires-Dist: twine>=6.1.0; extra == 'dev'
Description-Content-Type: text/markdown

Ôªø# MCP SQL Server Filesystem

üöÄ **Enhanced MCP server** for SQL Server database and filesystem access with dual interface support.

*Read this in other languages: [‰∏≠Êñá](README_zh.md)*

## ‚ú® Features

- **Complete SQL Server Support** - Execute all SQL commands with enhanced connection parameters
- **Full Filesystem Access** - Read/write files with confirmation dialogs  
- **Web UI Interface** - Real-time query results display
- **Desktop Application** - Cross-platform native desktop app (v0.1.1 new feature)
- **Smart Environment Detection** - Auto-adapts to SSH Remote, WSL, Local environments
- **Enhanced Connection Parameters** - Built-in support for `TrustServerCertificate=true`, `Encrypt=false`, `MultipleActiveResultSets=true`

## üöÄ Quick Start

### üì¶ Simple Installation

```bash
# Install uv (if not already installed)
pip install uv

# Run directly (no need to clone repository)
uvx mcp-sqlserver-filesystem@latest
```

### üß™ Installation & Testing

```bash
# Test Web UI
uvx mcp-sqlserver-filesystem@latest --test-web

# Test desktop application (v0.1.1 new feature)
uvx mcp-sqlserver-filesystem@latest --test-desktop

# Or use traditional way
uvx mcp-sqlserver-filesystem@latest test --web
uvx mcp-sqlserver-filesystem@latest test --desktop
```

### üìã System Requirements

**Windows 11 users please ensure you have:**

1. **Python 3.11+** 
   ```bash
   python --version  # Check version
   # If not installed: winget install Python.Python.3.12
   ```

2. **ODBC Driver for SQL Server** ‚≠ê **Important!**
   ```bash
   # Check drivers: python -c "import pyodbc; print([d for d in pyodbc.drivers() if 'SQL Server' in d])"
   # If none: winget install Microsoft.ODBCDriverforSQLServer
   ```

## üîß Augment Code Configuration

Add to your Augment Code MCP settings:

```json
{
  "mcpServers": {
    "mcp-sqlserver-filesystem": {
      "command": "uvx",
      "args": ["mcp-sqlserver-filesystem@latest"],
      "timeout": 600,
      "env": {
        "DB_SERVER": "localhost",
        "DB_DATABASE": "master",
        "DB_USE_WINDOWS_AUTH": "true",
        "DB_TRUST_SERVER_CERTIFICATE": "true",
        "DB_ENCRYPT": "false",
        "DB_MULTIPLE_ACTIVE_RESULT_SETS": "true"
      },
      "autoApprove": [
        "sql_query",
        "sql_execute",
        "list_tables",
        "get_table_schema",
        "read_file",
        "write_file",
        "list_directory"
      ]
    }
  }
}
```

## üõ†Ô∏è Available Tools

### Database Tools
- `sql_query` - Execute SQL queries with UI display
- `sql_execute` - Execute INSERT/UPDATE/DELETE operations
- `get_table_schema` - Get table structure information
- `list_tables` - List all database tables

### Filesystem Tools
- `read_file` - Read file contents
- `write_file` - Write file contents with confirmation
- `list_directory` - List directory contents

## üìù Usage Examples

In Augment Code, try:

```
"Execute SQL query: SELECT TOP 10 * FROM Users"
"Show me the schema of the Users table"
"List all tables in the database"
"Read the file config.json"
"Write configuration to settings.json"
```

## üîí Configuration Options

Set environment variables or create `.env` file:

```env
# SQL Server Configuration
DB_SERVER=localhost
DB_DATABASE=master
DB_USE_WINDOWS_AUTH=true

# Enhanced Connection Parameters
DB_TRUST_SERVER_CERTIFICATE=true
DB_ENCRYPT=false
DB_MULTIPLE_ACTIVE_RESULT_SETS=true

# Web UI Configuration
MCP_WEB_HOST=127.0.0.1
MCP_WEB_PORT=8765
```

## üÜï v0.1.1 New Features

- ‚úÖ **Desktop Application Support** - Cross-platform native desktop app
- ‚úÖ **Quick Test Commands** - `--test-web` and `--test-desktop`
- ‚úÖ **Enhanced Connection Parameters** - Full SQL Server connection options support
- ‚úÖ **Full Access Mode** - Default allow all SQL commands and file operations

## üìã System Requirements

- Python 3.11+
- ODBC Driver for SQL Server
- Windows/macOS/Linux support

## ü§ù Contributing

Issues and Pull Requests are welcome!

## üìÑ License

MIT License - see [LICENSE](LICENSE) file.

---

**üéâ Enjoy powerful SQL Server and filesystem access in Augment Code!**
