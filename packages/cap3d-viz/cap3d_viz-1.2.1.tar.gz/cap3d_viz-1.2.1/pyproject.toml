[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "cap3d-viz"
version = "1.2.1"
description = "High-Performance 3D Visualization for CAP3D Files"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Ahmed Ali", email = "ali.a@aucegypt.edu"}
]
maintainers = [
    {name = "Ahmed Ali", email = "ali.a@aucegypt.edu"}
]
keywords = [
    "3D visualization",
    "CAP3D", 
    "capacitance",
    "integrated circuits",
    "EDA",
    "scientific computing",
    "plotly",
    "parsing",
    "state machine"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Visualization",
    "Topic :: Scientific/Engineering :: Electronic Design Automation (EDA)",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.19.0",
    "plotly>=5.0.0", 
    "matplotlib>=3.3.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov",
    "black",
    "flake8",
    "mypy",
    "pre-commit",
]
docs = [
    "sphinx>=4.0",
    "sphinx-rtd-theme", 
    "sphinx-autodoc-typehints",
    "myst-parser",
]
performance = [
    "scipy>=1.7.0",
    "pandas>=1.3.0",
    "numba>=0.56.0",
]
all = [
    "cap3d-viz[dev,docs,performance]"
]

[project.urls]
Homepage = "https://github.com/andykofman/RWCap_view"
Documentation = "https://cap3d-viz.readthedocs.io/"
Repository = "https://github.com/andykofman/RWCap_view"
Issues = "https://github.com/andykofman/RWCap_view/issues"


[project.scripts]
cap3d-viz = "cap3d_viz.cli:main"

[tool.setuptools.packages.find]
include = ["cap3d_viz*"]
exclude = ["tests*", "docs*", "examples*", "archive_legacy*"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | archive_legacy
)/
'''

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
norecursedirs = ["archive_legacy", "archive_legacy/*"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.coverage.run]
source = ["cap3d_viz"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]
