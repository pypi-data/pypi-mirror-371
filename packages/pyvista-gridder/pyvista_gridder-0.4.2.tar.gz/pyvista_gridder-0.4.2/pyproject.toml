[build-system]
requires = ["setuptools >= 77.0"]
build-backend = "setuptools.build_meta"

[project]
name = "pyvista-gridder"
dynamic = ["version"]
description = "Mesh generation using PyVista"
readme = {file = "README.md", content-type = "text/markdown"}
requires-python = ">=3.9"
license = "BSD-3-Clause"
license-files = ["LICENSE"]
authors = [
    {name = "Keurfon Luu", email = "kluu@intera.com"}
]
keywords = [
    "mesh generation",
    "numerical modeling",
    "pyvista",
]
classifiers = [
    "Operating System :: OS Independent",
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Natural Language :: English",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering",
]
dependencies = [
    "numpy >= 1.13.0",
    "pyrequire",
    "pyvista >= 0.45",
    "scipy >= 0.9",
    "vtk >= 9.4",
]

[project.optional-dependencies]
full = [
    "gmsh",
    "shapely >= 2.0",
]

[project.urls]
Homepage = "https://github.com/INTERA-Inc/pyvista-gridder"
Code = "https://github.com/INTERA-Inc/pyvista-gridder"
Issues = "https://github.com/INTERA-Inc/pyvista-gridder/issues"

[tool.setuptools.packages.find]
include = ["pvgridder*"]

[tool.setuptools.dynamic]
version = {attr = "pvgridder.__about__.__version__"}

[tool.ruff]
line-length = 88
target-version = "py39"

exclude = [
    "pvgridder/__about__.py"
]

[tool.ruff.lint]
select = [
    # docformatter, see <https://github.com/astral-sh/ruff/issues/1335>
    "D104",
    "D106",
    "D200",
    "D204",
    "D206",
    "D207",
    "D208",
    "D209",
    "D210",
    "D211",
    "D213",
    "D214",
    "D215",
    "D300",
    "D301",
    "D400",
    "D403",
    "D404",
    "D405",
    "D406",
    "D407",
    "D408",
    "D409",
    "D410",
    "D411",
    "D412",
    "D413",
    "D414",
    "D415",
    "D418",
    "D419",
    # isort
    "I",
]

[tool.ruff.lint.isort]
force-wrap-aliases = true
combine-as-imports = true
from-first = false
lines-after-imports = 2
relative-imports-order = "closest-to-furthest"

[tool.coverage.report]
exclude_also = [
    "def __repr__",
    "except ModuleNotFoundError",
    "raise ModuleNotFoundError",
    "raise NotImplementedError",
    "raise TypeError",
    "raise ValueError",
    "@(abc\\.)?abstractmethod",
]
