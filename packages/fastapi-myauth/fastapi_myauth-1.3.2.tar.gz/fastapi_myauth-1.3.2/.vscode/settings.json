{
  "files.exclude": {
    "**/.ruff_cache": true,
    "**/__pycache__": true,
    "**/.pytest_cache": true
  },
  "files.watcherExclude": {
    "**/.git/**": true,
    "**/node_modules/**": true,
    "**/.nuxt/**": true,
    "**/.hg/store/**": true,
    "**/.venv/**": true
  },
  "editor.formatOnSave": true,
  "files.autoSave": "onFocusChange",

  // Python
  "python.defaultInterpreterPath": "${workspaceFolder}/.venv/bin/python3",
  "python.analysis.typeCheckingMode": "standard",
  "python.analysis.diagnosticSeverityOverrides": {
    "reportUnknownMemberType": "none",
    "reportIncompatibleVariableOverride": "none",
    "reportIncompatibleMethodOverride": "none"
  },
  "python.analysis.autoImportCompletions": true,
  "python.analysis.exclude": [
    "**/alembic",
    "**/node_modules",
    ".git",
    "**/__pycache__",
    "**/.venv"
  ],
  "python.analysis.diagnosticMode": "workspace",
  "python.envFile": "",
  "[python]": {
    "editor.defaultFormatter": "charliermarsh.ruff",
    // vedere se tenere o no
    "editor.codeActionsOnSave": {
      "source.fixAll": "explicit",
      "source.organizeImports": "explicit"
    }
  },

  // Prettier
  "[vue]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[yaml]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[dockercompose]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[makefile]": {
    "editor.insertSpaces": false,
    "editor.detectIndentation": false
  },

  // Copilot
  "github.copilot.chat.commitMessageGeneration.instructions": [
    {
      "text": "Use conventional commit message format. `feat`: A new feature; `fix`: A bug fix; `docs`: Documentation only changes; `style`: Changes that do not affect the meaning of the code (white-space, formatting, missing semicolons, etc); `refactor`: A code change that neither fixes a bug nor adds a feature; `perf`: A code change that improves performance; `test`: Adding missing tests or correcting existing tests; `build`: Changes that affect the build system or external dependencies; `chore`: Other changes that don't modify src or test files."
    }
  ],

  // Conventional Commits Extension
  "commit-message-editor.view.defaultView": "form"
}
