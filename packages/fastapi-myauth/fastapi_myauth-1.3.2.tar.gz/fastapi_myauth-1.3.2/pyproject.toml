[project]
name = "fastapi_myauth"
version = "1.3.2"
description = "A flexible and secure authentication library for FastAPI."
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.13"
dependencies = [
  "fastapi[standard]==0.116.*",
  "passlib[bcrypt]>=1.7.4",
  "emails>=0.6.0",
  "sqlmodel==0.0.24",
  "python-multipart<1.0.0,>=0.0.7",
  "email-validator<3.0.0.0,>=2.1.1",
  "pyjwt>=2.10.0",
  "argon2_cffi",
  "pydantic_settings",
  "cryptography>=44.0.2",
]

[dependency-groups]
dev = [
  "ruff>=0.11.5",
  "pyyaml",
  "pytest<8.0.0,>=7.4.3",
  "coverage<8.0.0,>=7.4.3",
  "freezegun>=1.5.1",
  "pre-commit<4.0.0,>=3.6.2",
]

[tool.ruff]
target-version = "py313"
exclude = ["alembic"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.semantic_release]
commit_parser = "conventional"
tag_format = "v{version}"
version_toml = ["pyproject.toml:project.version"]