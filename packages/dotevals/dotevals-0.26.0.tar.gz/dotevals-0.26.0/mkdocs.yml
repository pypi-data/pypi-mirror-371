# Site information
site_name: dotevals

site_author: dottxt
site_description: >-
   Large Language Model evaluations library


# Repository
repo_name: dottxt-ai/dotevals
repo_url: https://github.com/dottxt-ai/dotevals

# Copyright
copyright: Copyright &copy; 2024- The dotevals Developers

# Configuration
theme:
  name: material
  palette:
    - scheme: default
      primary: white
  logo: assets/images/dotevals.svg
  favicon: assets/images/dotevals.svg
  icon:
    repo: fontawesome/brands/github
  features:
    - content.code.copy
    - navigation.expand
    - navigation.tabs
    - navigation.sections
    - header.autohide
    - announce.dismiss
  font:
    text: Inter
    code: Source Code Pro

# Additional configuration
extra:
  social:
    - icon: fontawesome/brands/github
      link: https://github.com/dottxt-ai/dotevals
    - icon: fontawesome/brands/twitter
      link: https://x.com/dottxtai
  generator: false

extra_css:
    - stylesheets/extra.css

# Extensions
markdown_extensions:
  - admonition
  - def_list
  - attr_list
  - md_in_html
  - pymdownx.highlight:
      anchor_linenums: true
      line_spans: __span
      pygments_lang_class: true
      noclasses: True
      pygments_style: nord
      use_pygments: true
      pygments_style: nord
  - pymdownx.superfences:
      custom_fences:
        - name: mermaid
          class: mermaid
          format: !!python/name:mermaid2.fence_mermaid_custom
  - pymdownx.tabbed:
      alternate_style: true
  - pymdownx.inlinehilite
  - pymdownx.details
  - pymdownx.emoji:
      emoji_index: !!python/name:material.extensions.emoji.twemoji
      emoji_generator: !!python/name:material.extensions.emoji.to_svg

plugins:
  - mkdocstrings:
      default_handler: python
      handlers:
        python:
          paths: [src]
          options:
            show_submodules: true
  - search
  - section-index
  - mermaid2

nav:
  - Home: index.md
  - Getting Started:
      - Welcome to dotevals: welcome.md
      - Installation: installation.md
      - Quickstart: quickstart.md
      - Core Terminology: concepts/core-terminology.md
  - Tutorials:
      - Get Started in 10 Minutes: tutorials/01-your-first-evaluation.md
      - Use APIs and Local Models: tutorials/02-using-real-models.md
      - Evaluate on HF Datasets: tutorials/03-working-with-real-datasets.md
      - Create an LLM Judge Evaluator: tutorials/04-building-custom-evaluators.md
      - Run Evaluations in Parallel: tutorials/05-scale-with-async-evaluation.md
      - For pytest Users:
          - Share Expensive Resources: tutorials/06-pytest-fixtures-and-resource-pooling.md
          - Comparing Models: tutorials/07-comparing-multiple-models.md
          - Set Up Continuous Evaluation: tutorials/08-build-production-evaluation-pipeline.md
  - How-To Guides:
      - how-to/index.md
      - Run Batch Inference with Local Models: how-to/batch-inference-local-models.md
      - Plugins:
          - Create a Dataset Plugin: how-to/plugins/create-dataset-plugin.md
          - Create a Model Provider Plugin: how-to/plugins/create-model-provider-plugin.md
          - Create a Storage Plugin: how-to/plugins/create-storage-plugin.md
          - Create an Evaluator Plugin: how-to/plugins/create-evaluator-plugin.md
          - Create a Metrics Plugin: how-to/plugins/create-metrics-plugin.md
  - Explanation:
      - explanation/index.md
      - Design Principles: explanation/design-principles.md
      - Control Plane Architecture: explanation/control-plane-architecture.md
      - Plugin Architecture: explanation/plugin-architecture.md
      - Model Provider Pattern: how-to/model-provider-pattern.md
  - Reference:
      - reference/index.md
      - Running Evaluations:
          - Interactive Mode: reference/interactive.md
          - Pytest Mode: reference/pytest-mode.md
      - Core Components:
          - "@foreach Decorator": reference/foreach.md
          - "@batch Decorator": reference/batch.md
          - Evaluators: reference/evaluators.md
          - Metrics: reference/metrics.md
          - Datasets: reference/datasets.md
          - Concurrency Strategies: reference/concurrency.md
      - Storage & State:
          - Experiments: reference/experiments.md
          - Storage Backends: reference/storage.md
      - Tools & Integration:
          - CLI: reference/cli.md
          - Pytest Integration: reference/pytest.md
      - Plugins:
          - Available Plugins: reference/plugins.md
          - Plugin Entry Points: reference/plugin-entry-points.md
  - API Reference:
      - api/index.md
      - Core: api/core.md
      - Interactive: api/interactive.md
      - Models: api/models.md
      - Evaluators: api/evaluators.md
      - Metrics: api/metrics.md
      - Datasets: api/datasets.md
      - Storage: api/storage.md
      - Sessions: api/sessions.md
      - CLI: api/cli.md
      - Plugin: api/plugin.md
      - Providers: api/providers.md
      - Model Providers: api/model-providers.md
      - Runners: api/runners.md
