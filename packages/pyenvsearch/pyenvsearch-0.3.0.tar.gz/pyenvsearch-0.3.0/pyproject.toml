[project]
name = "pyenvsearch"
version = "0.3.0"
description = "Python library navigation and AI-powered analysis tool for developers and AI agents. Combines traditional code search with LLM-powered package insights."
readme = "README.md"
requires-python = ">=3.12"
license = { text = "MIT" }
authors = [
    { name = "Michael Bommarito" , email = "michael.bommarito@gmail.com" },
]
keywords = [
    "python", "packages", "search", "development", "ai", "llm", 
    "uv", "uvx", "virtual-environment", "navigation", "documentation"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Documentation",
    "Topic :: Utilities",
]

dependencies = [
    # No hard dependencies - uses standard library only
    # Optional performance tools (ast-grep, ripgrep) are detected at runtime
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-asyncio>=0.21",
    "pytest-cov>=4.0",
]
performance = [
    "ast-grep-cli>=0.39.4",
    "ripgrep>=14.1.0",
]
all = [
    "ast-grep-cli>=0.39.4",
    "ripgrep>=14.1.0",
]

[project.scripts]
pyenvsearch = "pyenvsearch.main:main"

[project.urls]
Homepage = "https://github.com/mjbommar/pyenvsearch"
Repository = "https://github.com/mjbommar/pyenvsearch.git"
Issues = "https://github.com/mjbommar/pyenvsearch/issues"
Documentation = "https://github.com/mjbommar/pyenvsearch#readme"
Changelog = "https://github.com/mjbommar/pyenvsearch/releases"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/pyenvsearch"]

[tool.hatch.build.targets.sdist]
exclude = [
    "CLAUDE.md",
    ".claude/",
]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --cov=src --cov-report=html"
testpaths = ["tests"]
python_files = "test_*.py *_test.py"
asyncio_mode = "auto"

[tool.ruff]
line-length = 100
target-version = "py313"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true

[dependency-groups]
dev = [
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.2.1",
]
