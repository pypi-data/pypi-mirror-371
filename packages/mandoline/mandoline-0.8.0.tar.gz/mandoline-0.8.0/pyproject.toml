[project]
name = "mandoline"
dynamic = ["version"]
description = "Official Python client for the Mandoline API"
readme = "README.md"
authors = [
    {name = "Mandoline AI", email = "support@mandoline.ai"},
]
license = {text = "Apache-2.0"}
dependencies = [
    "httpx>=0.23.0, <1",
    "pydantic>=1.9.0, <3",
]
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12"
]
keywords = ["mandoline", "ai", "metrics", "evaluation", "api"]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.2",
    "pytest-asyncio>=0.21.0",
    "hatch>=1.12.0",
    "ruff>=0.7.0",
]

[project.urls]
Homepage = "https://github.com/mandoline-ai/mandoline-python#readme"
Repository = "https://github.com/mandoline-ai/mandoline-python.git"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.version]
path = "mandoline/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["mandoline"]

[tool.hatch.build.targets.sdist]
include = [
    "/mandoline",
]

[tool.hatch.build.targets.wheel.force-include]
"mandoline/py.typed" = "mandoline/py.typed"

[tool.ruff]
line-length = 88
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings  
    "F",   # Pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = []

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["E501"]  # Allow longer lines in tests
"mandoline/__init__.py" = ["F401"]  # Allow unused imports in __init__.py

[tool.ruff.format]
quote-style = "double"