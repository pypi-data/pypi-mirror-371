---
name: 🚀 Publish Release
on:
  release:
    types: [published]
permissions:
  contents: read
  id-token: write # Needed for PyPI trusted publishing
concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true
jobs:
  publish:
    name: 📦 Publish ${{ matrix.package }}
    runs-on: ubuntu-latest
    env:
      ACTIONS_STEP_DEBUG: ${{ secrets.ACTIONS_DEBUG || 'false' }}
    strategy:
      matrix:
        package:
          - haive-core
          - haive-agents
          - haive-games
          - haive-tools
          - haive-prebuilt
          - haive-dataflow
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
        with:
          submodules: true
          token: ${{ secrets.GH_TOKEN }}
      - name: 📦 Get Package Poetry Info
        id: poetry
        uses: ./.github/actions/get-package-poetry-info
        with:
          package: ${{ matrix.package }}
      - name: 🧾 Echo Package Metadata
        run: |
          echo "📦 Name:        ${{ steps.poetry.outputs.name }}"
          echo "🔖 Version:     ${{ steps.poetry.outputs.version }}"
          echo "🧑 Authors:     ${{ steps.poetry.outputs.authors || 'N/A' }}"
          echo "📄 License:     ${{ steps.poetry.outputs.license || 'N/A' }}"
          echo "📝 Description: ${{ steps.poetry.outputs.description || 'N/A' }}"
          echo "🌐 Homepage:    ${{ steps.poetry.outputs.homepage || 'N/A' }}"
          echo "🔗 Repository:  ${{ steps.poetry.outputs.repository || 'N/A' }}"
          echo "📚 Docs:        ${{ steps.poetry.outputs.documentation || 'N/A' }}"
          echo "🏷 Classifiers: ${{ steps.poetry.outputs.classifiers || 'N/A' }}"
      - name: 🐍 Set up Python ${{ steps.poetry.outputs.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ steps.poetry.outputs.python }}
          cache: poetry
      - name: 🛠 Install Poetry
        run: pipx install poetry==2.1.0
      - name: 🔐 Configure PyPI Credentials
        run: poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}
      - name: 📦 Build Package (No Publish)
        run: |
          cd packages/${{ matrix.package }}
          poetry build --format wheel
      - name: 📤 Upload Package as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.package }}-dist
          path: packages/${{ matrix.package }}/dist/
