---
name: 🔒 Security Scan
on:
  schedule:
    - cron: 0 3 * * 1 # Weekly on Mondays at 3 AM UTC
  push:
    branches: [main]
  pull_request:
    branches: [main]
permissions:
  contents: read
  security-events: write
jobs:
  setup:
    name: ⚙️ Setup
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.find-packages.outputs.packages }}
      package_count: ${{ steps.find-packages.outputs.package_count }}
      resource-paths: ${{ steps.gitignore.outputs.resource-paths }}
      paths-ignore: ${{ steps.gitignore.outputs.paths-ignore }}
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
        with:
          submodules: true
          token: ${{ secrets.GH_TOKEN }}
      - name: 🔍 Parse Gitignore
        id: gitignore
        uses: ./.github/actions/parse-gitignore
      - name: 🔍 Find Packages
        id: find-packages
        uses: ./.github/actions/find-packages
      - name: 📊 Show Setup Info
        run: |
          echo "Found ${{ steps.find-packages.outputs.package_count }} packages:"
          echo "${{ steps.find-packages.outputs.packages }}"
          echo "Paths to ignore: ${{ steps.gitignore.outputs.paths-ignore }}"
          echo "Resource paths: ${{ steps.gitignore.outputs.resource-paths }}"
  safety:
    name: 🛡️ Safety Check for ${{ matrix.package }}
    needs: setup
    if: ${{ needs.setup.outputs.package_count > 0 }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: ${{ fromJson(needs.setup.outputs.packages) }}
      fail-fast: false
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
        with:
          submodules: true
          token: ${{ secrets.GH_TOKEN }}
      - name: 📦 Get Package Poetry Info
        id: package-info
        uses: ./.github/actions/get-package-poetry-info
        with:
          package: ${{ matrix.package }}
      - name: 🐍 Set up Python ${{ steps.package-info.outputs.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ steps.package-info.outputs.python }}
      - name: 🛠 Install Poetry + Safety
        run: |
          python -m pip install --upgrade pip
          pip install poetry==${{ steps.package-info.outputs.poetry_version }} safety
      - name: 📦 Install Dependencies
        run: |
          cd packages/${{ matrix.package }}
          poetry install --with dev --no-interaction
          poetry export -f requirements.txt --without-hashes > requirements.txt || echo "pytest>=7.0.0" > requirements.txt
      - name: 🔒 Run Safety Check
        run: |
          cd packages/${{ matrix.package }}
          safety check -r requirements.txt --full-report
  codeql:
    name: 🕵️ CodeQL Analysis
    needs: setup
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
        with:
          submodules: true
          token: ${{ secrets.GH_TOKEN }}
          fetch-depth: 0
      - name: 📝 Create CodeQL Config
        run: |
          mkdir -p .github/codeql
          cat <<EOF > .github/codeql/codeql-config.yml
          name: CodeQL Configuration
          paths:
            - packages/*/src
            - packages/*/tests
          paths-ignore:
            - '**/resources/**'
            - '**/venv/**'
            - '**/.venv/**'
          EOF
      - name: 📦 Get Root Poetry Info
        id: poetry
        uses: ./.github/actions/get-root-poetry-info
      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ steps.poetry.outputs.python }}
      - name: 🛠 Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry==${{ steps.poetry.outputs.poetry_version }}
      - name: 🔍 Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: python
          config-file: .github/codeql/codeql-config.yml
      - name: 🏗️ Autobuild
        uses: github/codeql-action/autobuild@v3
      - name: 🔎 Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: /language:python
