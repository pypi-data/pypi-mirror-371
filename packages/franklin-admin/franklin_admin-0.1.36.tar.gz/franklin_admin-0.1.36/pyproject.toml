[build-system]
requires = ["setuptools >= 65.0"]
build-backend = "setuptools.build_meta"

[project]
name = "franklin-admin"
version = "0.1.36"
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Education",
  "Topic :: Software Development :: Build Tools",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
requires-python = ">= 3.9"
dependencies = [
    'franklin-educator>=0.3.140',  # Depends on educator which depends on core
    # Admin-specific dependencies only
]
authors = [
  {name = "Kasper Munch", email = "kaspermunch@birc.au.dk"},
]
maintainers = [
  {name = "Kasper Munch", email = "kaspermunch@birc.au.dk"},
]
description = "Administrator plugin for Franklin - adds user management commands"
keywords = ["teaching", "jupyter", "docker", "gitlab"]
readme = "README.md"
# license = "MIT"

[project.urls]
Homepage = "https://munch-group.org/franklin"
Documentation = "https://munch-group.org/franklin"
Repository = "https://github.com/munch-group/franklin-admin.git"
Issues = "https://github.com/munch-group/franklin-admin/issues"

[tool.setuptools.packages.find]
where = ["src"]

[project.entry-points."franklin_cli.plugins"]
user = "franklin_admin.users:user"
# password = "franklin_admin.users:password"
# token = "franklin_admin.users:token"
# finger = "franklin_admin.users:finger"
# grant = "franklin_admin.users:grant"

[tool.setuptools.package-data]
franklin_admin = [
  "data/*.yaml",
  "data/gitui/*",
  "data/admin/*.enc", 
  ]

[tool.pixi.workspace]
channels = ["conda-forge", "munch-group"]
platforms = ["osx-arm64", "win-64", "osx-64", "linux-64"]

# devel feature
[tool.pixi.feature.devel.target.osx-arm64.dependencies]
setuptools = ">=65.0"
pip = "*"
wheel = "*"
anthropic = "*"
gitpython = "*"
rpds-py = "*"

[tool.pixi.feature.devel.dependencies]
rpds-py = ">=0.27.0,<0.28"
jsonschema = ">=4.25.0,<5"


[tool.pixi.environments]
devel = ["devel"]

[tool.pixi.dependencies]
rpds-py = ">=0.27.0,<0.28"
  
[tool.pixi.tasks.install-dev]
#cmd = "pip install --no-build-isolation --no-deps --disable-pip-version-check -e ."
cmd = "pip install -e ."
description = "Install the package in development mode"


# setup-kernel = "python -m ipykernel install --user --name franklin --display-name 'Franklin Python'"
# quarto-render = { cmd = "quarto render", env = { QUARTO_PYTHON = ".pixi/envs/default/bin/python" } }

[tool.pixi.tasks.bump-version]
args = [
  { "arg" = "kind", "default" = "patch" },  # can be patch, minor, major
  { "arg" = "flag", "default" = "" },     # can be --pre, --release
]
cmd = "./.scripts/bump_version.py --{{ kind }} {{ flag }} &&  git add -u &&  git commit -m '{{ kind }} {{ flag }} version bump' && git push" 
description = "Bump version patch and build/release conda packages"

[tool.pixi.tasks.bump-changelog]
cmd = "./.scripts/bump_changelog.py --yes"
description = "Bump version patch and build/release conda packages"

[tool.pixi.tasks.acp]
args = [
  { "arg" = "message", "default" = "update" },  # can be --patch, --minor, --major
]
cmd = "git add -u ; git commit -m '{{ message }}' ; git push"
description = "git add commit push of tracked files with optional message"

[tool.pixi.tasks.github-release]
cmd = "./.scripts/release-tag.sh"
description = "Release latest version on Github"



#franklin = "0.25.8.*"


