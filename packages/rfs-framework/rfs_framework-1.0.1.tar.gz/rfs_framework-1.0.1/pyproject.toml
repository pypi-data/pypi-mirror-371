[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "rfs-framework"
version = "1.0.1"
description = "Reactive Functional Serverless Framework for Python"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "RFS Framework Team", email = "dev@rfs-framework.org"},
]
keywords = [
    "reactive", 
    "functional", 
    "serverless", 
    "framework", 
    "async", 
    "cloud-run", 
    "cloud-tasks",
    "spring-reactor",
    "state-machine",
    "event-driven",
    "saga",
    "cqrs"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10", 
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Distributed Computing",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Typing :: Typed",
]
requires-python = ">=3.9"
dependencies = [
    "typing-extensions>=4.0.0",
]

[project.optional-dependencies]
# Cloud dependencies
cloud = [
    "google-cloud-tasks>=2.13.0",
    "google-cloud-run>=0.9.0",
    "aioredis>=2.0.0",
    "psutil>=5.9.0",
]

# Event store dependencies
eventstore = [
    "aiofiles>=22.0.0",
    "aioredis>=2.0.0",
]

# All optional dependencies
all = [
    "google-cloud-tasks>=2.13.0",
    "google-cloud-run>=0.9.0", 
    "aioredis>=2.0.0",
    "psutil>=5.9.0",
    "aiofiles>=22.0.0",
]

# Development dependencies
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "mypy>=1.0.0",
    "flake8>=5.0.0",
    "pre-commit>=2.20.0",
]

# Documentation dependencies
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "sphinx-autodoc-typehints>=1.19.0",
]

[project.urls]
Homepage = "https://github.com/rfs-framework/rfs-python"
Documentation = "https://rfs-framework.readthedocs.io/"
Repository = "https://github.com/rfs-framework/rfs-python"
"Bug Reports" = "https://github.com/rfs-framework/rfs-python/issues"
Changelog = "https://github.com/rfs-framework/rfs-python/blob/main/CHANGELOG.md"

[tool.setuptools.packages.find]
where = ["src"]
include = ["rfs*"]
exclude = ["tests*"]

[tool.setuptools.package-data]
rfs = ["py.typed"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config", 
    "--cov=rfs",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-report=xml",
]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src/rfs"]
branch = true
omit = [
    "tests/*",
    "examples/*",
]

[tool.coverage.report]
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"