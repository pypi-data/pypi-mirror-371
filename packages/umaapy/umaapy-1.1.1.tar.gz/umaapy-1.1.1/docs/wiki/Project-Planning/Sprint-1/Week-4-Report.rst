Weekly Progress Report 4
========================

**Project Name:** UMAAPy

**Sprint #:** 1

**Reporting Period:** 06.02.25–06.08.25

**Date of Report:** 06.08.25

**Prepared By:** Devon Reed

1. High-Level Summary
---------------------

This week, extra work and collaboration with the professor on
understanding the project reporting requirements was taken. To improve
on the last report, this one will include API interface definitions in
the form of sequence diagrams as well as define test cases
specifications using issue child items per the professor’s responsive
feedback. Source code development this week included running the
rtiddsgen utility to autogenerate the UMAA types from the idls, further
setup of CI/CD in the form of python packaging, unit testing, linting,
and also defining the build environment with docker and authenticating
with docker hub all automatically within each GitLab pipeline. The
project structure and architecture is also continuing to be refined
based on the architectural requirements as well as reviewing python best
practices for module layout.

2. Sprint Planning (Review & Adjustments)
-----------------------------------------

2.1. Sprint Goal & Scope
~~~~~~~~~~~~~~~~~~~~~~~~

- **Original Sprint Goal:** Infrastructure and project setup
- **Scope for this Week:** Setup project infrastructure and focus on
  improving on project reporting and meeting expectations for the
  course.

2.2. Definition of Done (DoD) Refinement
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

N/A

2.3. New/Changed Sprint Backlog Items
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

No new GitLab issues have been created during Sprint 1 iteration 2
however test cases for both last week and this week have been created
based on instructor feedback. Even those these are technically tasks in
Gitlab they will be tracked in the testing section below instead of with
their parent issues.

3. Source Code Development
--------------------------

3.1. GitLab Repository Links
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- **Repo:** https://git.psu.edu/psu-sweng/sweng-894/umaapy
- **Branches of Interest:**
  https://git.psu.edu/psu-sweng/sweng-894/umaapy/-/commits/1-integrate-umaa-idl-type-generation-via-ritddsgen

3.2. Summary of Contributions
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

**Devon:**

- Worked with professor to refine software engineering process to be
  more inline with course expecations.
- Setup test cases for last iteration and this week’s iteration using
  Gitlab tasks.
- Discovered best way to generated UMAA types from the IDLs and package
  them with the SDK.
- Implementing CI/CD pipeline for pytest, linting, code coverage, docker
  build/push, and python package build/push.
- Prepared project weekly report 4.

3.3. Important Merge Requests
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

+-----------------+-----------------+-----------------+-----------------+
| Merge Request   | Description     | Issue Ref       | Notes           |
+=================+=================+=================+=================+
| !1              | Explore RTI dds | #1, #20, #18    | In progress     |
|                 | type generation |                 |                 |
|                 | and path find   |                 |                 |
|                 | CI/CD           |                 |                 |
|                 | integration and |                 |                 |
|                 | overall project |                 |                 |
|                 | layout          |                 |                 |
+-----------------+-----------------+-----------------+-----------------+

3.4. Burndown Chart
~~~~~~~~~~~~~~~~~~~

This week, three issues are being worked concurrently due to being
closely related in the early setup of the project structure. Good
progress is being made on the CI/CD integration which will pay dividends
in later sprints as well as determining the best way to generate,
package, and deploy the autogenerated python types all automatically.

.. figure:: ../../uploads/6092802adb34818443731924de61cc89/image.png
   :alt: image
   :width: 935px
   :height: 276px

   image

The sprint has moved from 33% complete to 55% complete with the addition
of the test cases tracked as tasks, which shows a more accurate
representation of work done against the initial project requirements.
Several test cases for the in progress issues are partially complete or
complete due to how closely related these issues are they are likely to
close very close to one another.

.. figure:: ../../uploads/8b9c58956fd2dd4a61a334d132ae0e80/image.png
   :alt: image
   :width: 1223px
   :height: 580px

   image

4. Software Testing
-------------------

4.1. Acceptance Criteria Defined
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

No issues in sprint backlog required updated acceptance criteria this
week.

4.2. Test Case Specification (Incremental)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Per instructor feedback. Several test cases have been made as GitLab
tasks. See link to list below of all completed and in progress test
cases for the user stories currently being worked.

https://git.psu.edu/psu-sweng/sweng-894/umaapy/-/issues/?sort=created_date&state=all&type%5B%5D=task&first_page_size=20

4.3. Traceability Matrix
~~~~~~~~~~~~~~~~~~~~~~~~

+-------+-------------------+-----------+----+------+----------+---------------+
| Use   | Functional        | Arch.     | MR | Test | Test     | Comments      |
| Case  | Requirement       | Element   |    | ID   | Status   |               |
+=======+===================+===========+====+======+==========+===============+
| #21   | SR-15             | AR-05     | !1 | #23  | PASS     | UAT           |
|       |                   |           |    |      |          | verificaiton  |
|       |                   |           |    |      |          | of            |
|       |                   |           |    |      |          | devcontainer  |
|       |                   |           |    |      |          | files         |
+-------+-------------------+-----------+----+------+----------+---------------+
| #21   | SR-15             | AR-05     | !1 | #24  | PASS     | UAT           |
|       |                   |           |    |      |          | verification  |
|       |                   |           |    |      |          | that VSCode   |
|       |                   |           |    |      |          | works with    |
|       |                   |           |    |      |          | building the  |
|       |                   |           |    |      |          | container     |
+-------+-------------------+-----------+----+------+----------+---------------+
| #21   | SR-15             | AR-05     | !1 | #25  | PASS     | UAT manual    |
|       |                   |           |    |      |          | verification  |
|       |                   |           |    |      |          | that all      |
|       |                   |           |    |      |          | extensions    |
|       |                   |           |    |      |          | and packages  |
|       |                   |           |    |      |          | are installed |
|       |                   |           |    |      |          | correctly in  |
|       |                   |           |    |      |          | the resulting |
|       |                   |           |    |      |          | development   |
|       |                   |           |    |      |          | container     |
+-------+-------------------+-----------+----+------+----------+---------------+
| #22   | SR-15             | N/A       | !1 | #26  | PASS     | UAT manual    |
|       |                   |           |    |      |          | verification  |
|       |                   |           |    |      |          | that gitlab   |
|       |                   |           |    |      |          | runner docker |
|       |                   |           |    |      |          | service is    |
|       |                   |           |    |      |          | running on    |
|       |                   |           |    |      |          | self-hosted   |
|       |                   |           |    |      |          | server        |
+-------+-------------------+-----------+----+------+----------+---------------+
| #22   | SR-15             | N/A       | !1 | #27  | PASS     | UAT manually  |
|       |                   |           |    |      |          | check         |
|       |                   |           |    |      |          | connection    |
|       |                   |           |    |      |          | between       |
|       |                   |           |    |      |          | server and    |
|       |                   |           |    |      |          | university    |
|       |                   |           |    |      |          | Gitlab        |
+-------+-------------------+-----------+----+------+----------+---------------+
| #22   | SR-15             | N/A       | !1 | #28  | PASS     | Successful    |
|       |                   |           |    |      |          | pipeline run  |
|       |                   |           |    |      |          | with dummy    |
|       |                   |           |    |      |          | pipeline      |
+-------+-------------------+-----------+----+------+----------+---------------+
| #20   | SR-13, SR-14,     | AR-05     | !2 | #29  | PARTIAL  | In progress   |
|       | SR-15             |           |    |      | PASS     |               |
+-------+-------------------+-----------+----+------+----------+---------------+
| #20   | SR-13, SR-14,     | AR-05     | !2 | #30  | PASS     | Gitlab        |
|       | SR-15             |           |    |      |          | secretes      |
|       |                   |           |    |      |          | masking       |
|       |                   |           |    |      |          | correctly for |
|       |                   |           |    |      |          | sensitive     |
|       |                   |           |    |      |          | information.  |
+-------+-------------------+-----------+----+------+----------+---------------+
| #20   | SR-13, SR-14,     | AR-05     | !2 | #31  | PARTIAL  | Docker image  |
|       | SR-15             |           |    |      | PASS     | verified in   |
|       |                   |           |    |      |          | docker hub    |
|       |                   |           |    |      |          | but python    |
|       |                   |           |    |      |          | package not   |
|       |                   |           |    |      |          | yet published |
+-------+-------------------+-----------+----+------+----------+---------------+
| #1    | SR-01             | AR-01     | !2 | #32  | PASS     | RTI/UMAA      |
|       |                   |           |    |      |          | types         |
|       |                   |           |    |      |          | generated     |
|       |                   |           |    |      |          | succesfully   |
|       |                   |           |    |      |          | from clean    |
|       |                   |           |    |      |          | installation. |
+-------+-------------------+-----------+----+------+----------+---------------+
| #1    | SR-01             | AR-01     | !2 | #33  | PARTIAL  | Full pipeline |
|       |                   |           |    |      | PASS     | from IDL –>   |
|       |                   |           |    |      |          | types –>      |
|       |                   |           |    |      |          | python        |
|       |                   |           |    |      |          | package yet   |
|       |                   |           |    |      |          | to pass       |
|       |                   |           |    |      |          | succesfully   |
+-------+-------------------+-----------+----+------+----------+---------------+
| #1    | SR-01             | AR-01     | !2 | #34  | NOT      | In progress   |
|       |                   |           |    |      | TESTED   |               |
+-------+-------------------+-----------+----+------+----------+---------------+

..

   **Legend for Test Status:** NOT TESTED / PASS / FAIL / PARTIAL PASS

5. Backlog Grooming
-------------------

5.1. Changes to Product/Sprint Backlog
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

No changes to the product backlog this iteration.

5.2. Rationale & Impact
~~~~~~~~~~~~~~~~~~~~~~~

No backlog grooming changes for this reporting period.

6. Issues, Risks & Mitigations
------------------------------

6.1. New Issues / Blockers
~~~~~~~~~~~~~~~~~~~~~~~~~~

No new issues created or blockers from active work in progress.

6.2. Potential Risks
~~~~~~~~~~~~~~~~~~~~

- Assignment ambiguity in reporting satisfactory progress

  - *Likelihood:* High
  - *Impact:* High time cost spent understanding assignment reporting
    requirements.
  - *Mitigation:* Working with professor to improve performance moving
    forward.

7. Metrics & Charts
-------------------

First GitLab pipeline progress:

1. Linting is completly setup.
2. Currently building single development and build image used by the
   test stage but the build stage will be expanded with more build jobs
   as the product becomes more refined
3. Test stage is up and running an automatically executes the tests in
   the ``tests`` directory while also generating a test report.
   https://git.psu.edu/psu-sweng/sweng-894/umaapy/-/pipelines/411920/test_report?job_name=test

https://git.psu.edu/psu-sweng/sweng-894/umaapy/-/pipelines/411920

8. Next Steps
-------------

1. Put final touches on product packaging and CI/CD, this is something
   that does have a big upfront cost but will make development so much
   easier for the remaining duration of the project.
2. Start work on util and core API services.

9. Attachments & Links
----------------------

API Sequence Diagrams (Substitution for UI wireframes). These are going
to be the first two APIs that will be implemented late next iteration/
early in Sprint 2. Understanding the expected API interface now will
help speed up development down the road.

- Report Consumer
- Report Provider

https://git.psu.edu/psu-sweng/sweng-894/umaapy/-/wikis/home/Design/Sequence-Diagrams

**Notes:**

N/A
