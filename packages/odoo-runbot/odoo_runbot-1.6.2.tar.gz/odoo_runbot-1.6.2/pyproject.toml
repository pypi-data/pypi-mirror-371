[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "odoo-runbot"
description = "Main CLI to run test in GitLab CI"
authors = [
    { name = "Alexis PASQUIER", email = "alexis.pasquier@mangono.fr" }
]
dependencies = [
    "typer",
    "addons-installer",
    "typing_extensions",
    "oenv2config",
    "python-gitlab>=4.13.0",
    "unittest-xml-reporting",
    "tomli; python_version < '3.11'",
    "coverage[toml]"
]
version = "1.6.2"
readme = "README.md"
requires-python = ">= 3.8"

[project.scripts]
odoo-runbot = 'odoo_runbot.cli:app'

[project.optional-dependencies]
psycopg = ["psycopg2>=2.8.3"]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["src/odoo_runbot"]

[tool.hatch.envs.hatch-static-analysis]
config-path = "none"

[tool.ruff]
line-length = 120
target-version = "py38"

[tool.ruff.lint]
select = ["ALL"]
ignore = ["D", "COM812","UP006"]

[tool.ruff.lint.per-file-ignores]
"src/odoo_runbot/_odoo_internal.py" = ["ANN001", "ANN202"]
"tests/**/*.py" = [
    "ANN201", # Disable expected return type on test function
    # at least this three should be fine in tests:
    "S101", # asserts allowed in tests...
    "ARG", # Unused function args -> fixtures nevertheless are functionally relevant...
    "FBT", # Don't care about booleans as positional arguments in tests, e.g. via @pytest.mark.parametrize()
    # The below are debateable
    "PLR2004", # Magic value used in comparison, ...
    "S311", # Standard pseudo-random generators are not suitable for cryptographic purposes
]
"src/odoo_runbot/cli.py" = [
    "RUF013"
]

[tool.pytest.ini_options]
addopts = [
    "--ignore=tests/odoo_project",
]
testpaths = [
    "tests",
    "integration",
]

[dependency-groups]
lint = [
    "ruff>=0.9.7",
]
dev = [
    "pytest>=8.3.4",
    "pytest",
    "pytest-cov",
    "pytest-mock",
    "setuptools", # Pycharm need it
]
doc = [
    "mkdocs",
    "mkdocstrings[python]",
    "mkdocs-material",
    "mkdocs-autoapi",
]
