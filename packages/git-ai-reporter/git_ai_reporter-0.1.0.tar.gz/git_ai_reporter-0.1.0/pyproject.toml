[project]
name = "git-ai-reporter"
version = "0.1.0"
description = "AI-Driven Git Repository Analysis and Narrative Generation."
readme = "README.md"
license = { text = "MIT" }  # SPDX-License-Identifier: MIT
authors = [
    { name = "Blackcat InformaticsÂ® Inc.", email = "paudley@blackcat.ca" }
]
maintainers = [
    { name = "Patrick Audley", email = "paudley@blackcat.ca" }
]
requires-python = ">=3.12"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Version Control :: Git",
    "Topic :: Software Development :: Documentation",
    "Topic :: Text Processing :: Linguistic",
    "Typing :: Typed",
]
keywords = ["git", "changelog", "release-notes", "ai", "gemini", "documentation"]

dependencies = [
    "aiofiles>=23.2.1",
    "gitpython>=3.1.45",
    "google-genai>=1.28.0",
    "httpx>=0.27.0",
    "json-repair>=0.14.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.10.1",
    "python-dotenv>=1.1.1",
    "rich>=14.1.0",
    "tenacity>=8.5.0",
    "tolerantjson>=1.0.0",
    "typer>=0.16.0",
    "types-setuptools>=80.9.0.20250801",
]

[project.urls]
Homepage = "https://github.com/paudley/git-ai-reporter"
Repository = "https://github.com/paudley/git-ai-reporter.git"
Issues = "https://github.com/paudley/git-ai-reporter/issues"
Documentation = "https://github.com/paudley/git-ai-reporter#readme"

[project.scripts]
git-ai-reporter = "git_ai_reporter.cli:APP"

[project.optional-dependencies]
test = [
    "autopep8>=2.3.2",
    "bandit>=1.8.6",
    "flake8>=7.3.0",
    "isort>=6.0.1",
    "markdown>=3.8.2",
    "mypy>=1.17.1",
    "mypy-extensions>=1.1.0",
    "pycodestyle>=2.14.0",
    "pyflakes>=3.4.0",
    "pylint>=3.3.7",
    "pylint-htmf>=0.1.1",
    "pylint-plugin-utils>=0.9.0",
    "pylint-pydantic>=0.3.5",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-bdd>=7.4.0",
    "pytest-check>=2.4.1",
    "pytest-cov>=5.0.0",
    "pytest-mypy>=0.10.4",
    "pytest-pylint>=0.21.0",
    "pytest-random-order>=1.1.2",
    "pytest-recording>=0.13.1",
    "pytest-snapshot>=0.9.0",
    "pytest-sugar>=1.0.0",
    "pytest-timeout>=2.3.2",
    "pytest-xdist>=3.7.0",
    "hypothesis>=6.132.1",
    "types-aiofiles>=23.10.0.20240106",
    "types-markdown>=3.8.0.20250708",
    "types-python-dateutil>=2.9.0.20250708",
    "types-pyyaml>=6.0.12.20250516",
    "types-regex>=2024.11.6.20250403",
    "typing-extensions>=4.14.1",
    "typing-inspection>=0.4.1",
    "uv>=0.8.4",
    "vulture>=2.14",
    "bs4>=0.0.2",
]

[build-system]
requires = ["hatchling>=1.21.0"]
build-backend = "hatchling.build"

[tool.hatch.version]
path = "src/git_ai_reporter/__init__.py"

[tool.hatch.build]
include = [
    "src/git_ai_reporter",
    "README.md",
    "LICENSE",
    "NOTICE",
    "pyproject.toml",
]
exclude = [
    "*.pyc",
    "__pycache__",
    ".git",
    ".pytest_cache",
    ".mypy_cache",
    ".ruff_cache",
]

[tool.hatch.build.targets.wheel]
packages = ["src/git_ai_reporter"]

[dependency-groups]
dev = [
    "autopep8>=2.3.2",
    "bandit>=1.8.6",
    "flake8>=7.3.0",
    "isort>=6.0.1",
    "markdown>=3.8.2",
    "mypy>=1.17.1",
    "mypy-extensions>=1.1.0",
    "pycodestyle>=2.14.0",
    "pyflakes>=3.4.0",
    "pylint>=3.3.7",
    "pylint-htmf>=0.1.1",
    "pylint-plugin-utils>=0.9.0",
    "pylint-pydantic>=0.3.5",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-bdd>=7.4.0",
    "pytest-check>=2.4.1",
    "pytest-cov>=5.0.0",
    "pytest-mypy>=0.10.4",
    "pytest-pylint>=0.21.0",
    "pytest-random-order>=1.1.2",
    "pytest-recording>=0.13.1",
    "pytest-snapshot>=0.9.0",
    "pytest-sugar>=1.0.0",
    "pytest-timeout>=2.3.2",
    "pytest-xdist>=3.7.0",
    "hypothesis>=6.132.1",
    "types-aiofiles>=23.10.0.20240106",
    "types-markdown>=3.8.0.20250708",
    "types-python-dateutil>=2.9.0.20250708",
    "types-pyyaml>=6.0.12.20250516",
    "types-regex>=2024.11.6.20250403",
    "typing-extensions>=4.14.1",
    "typing-inspection>=0.4.1",
    "uv>=0.8.4",
    "vulture>=2.14",
    "bs4>=0.0.2",
    "twine>=6.1.0",
]

[tool.mypy]
python_version = "3.12"
mypy_path = "src:stubs"
# Enable strict type checking
strict = true
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_ignores = true
# Show error codes for easier debugging
show_error_codes = true
# Additional strict options
disallow_untyped_calls = true
disallow_untyped_decorators = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "google.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pytest_snapshot.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pytest_check"
ignore_missing_imports = true

[tool.pytest.ini_options]
# Add common pytest command-line options to be used by default
addopts = """
    --cov=src/git_ai_reporter
    --cov-report=term-missing
    --cov-report=html
    --cov-fail-under=30
    -v
    --tb=short
    --strict-markers
    --mypy
    --pylint
    --random-order
    --timeout=15
"""
# Set the default timeout for all tests to 15 seconds
timeout = 15
# Configure test discovery to look only in the 'tests' directory
testpaths = ["tests"]
# Filter out common warnings
filterwarnings = ["ignore::DeprecationWarning"]
# Register custom markers to avoid warnings and enable selective runs
markers = [
    "vcr: marks tests that use pytest-recording for network mocking",
    "slow: marks tests as slow running",
    "integration: marks tests as integration tests",
    "bdd: marks tests that use pytest-bdd for behavior-driven development",
    "hypothesis: marks tests that use hypothesis for property-based testing",
    "asyncio: marks tests as async tests",
]
