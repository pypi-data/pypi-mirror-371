[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "flexistore"
version = "0.2.0"
description = "Cloud-agnostic storage interface with enhanced features and async support"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Prakhar Agarwal", email = "prakhara56@gmail.com"}
]
maintainers = [
    {name = "Prakhar Agarwal", email = "prakhara56@gmail.com"}
]
keywords = ["storage", "cloud", "azure", "aws", "s3", "blob", "async"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Archiving :: Backup",
    "Topic :: System :: Filesystems",
]
requires-python = ">=3.8"
dependencies = [
    "azure-storage-blob>=12.0.0",
    "boto3>=1.17.0",
    "python-dotenv>=1.0.0",
    "aiofiles>=23.0.0",
    "aioboto3>=11.0.0",
    "cryptography>=40.0.0",
    "rich>=13.0.0",
    "click>=8.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-xdist>=3.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "coverage>=7.0.0",
    "tox>=4.0.0",
]
docs = [
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "sphinx-autodoc-typehints>=1.23.0",
]
async = [
    "aioboto3>=11.0.0",
    "aiofiles>=23.0.0",
]
encryption = [
    "cryptography>=40.0.0",
]

[project.urls]
Homepage = "https://github.com/prakhara56/FlexiStore"
Documentation = "https://flexistore.readthedocs.io/"
Repository = "https://github.com/prakhara56/FlexiStore"
"Bug Tracker" = "https://github.com/prakhara56/FlexiStore/issues"
Changelog = "https://github.com/prakhara56/FlexiStore/blob/main/CHANGELOG.md"

[project.scripts]
flexistore = "flexistore.cli:main"
flexistore-cli = "flexistore.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["flexistore*"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["flexistore"]
known_third_party = ["azure", "boto3", "click", "rich"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

[tool.mypy]
python_version = "3.9"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "azure.*",
    "boto3.*",
    "botocore.*",
    "click.*",
    "rich.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=flexistore",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "azure: marks tests as Azure-specific",
    "aws: marks tests as AWS-specific",
]

[tool.coverage.run]
source = ["flexistore"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
