name: Build wheels

on:
  push:
    branches: [ main ]
    tags:
      - "v*"  
  pull_request:
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  build_wheels:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, macos-14, windows-latest]

    env:
      #py versions
      CIBW_BUILD: "cp310-* cp311-* cp312-*"
      CIBW_SKIP: "pp* *musllinux*"

      # architectures
      CIBW_ARCHS_LINUX: "x86_64 aarch64"
      CIBW_ARCHS_MACOS: "x86_64 arm64" 
      CIBW_ARCHS_WINDOWS: "AMD64"

      # manylinux policy
      CIBW_MANYLINUX_X86_64: "manylinux_2_28"
      CIBW_MANYLINUX_AARCH64: "manylinux_2_28"

      # CIBW_TEST_REQUIRES: "pytest"
      # CIBW_TEST_COMMAND: "pytest -q {project}/tests"

      # Parallel CMake
      CMAKE_BUILD_PARALLEL_LEVEL: "2"

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install build tooling
        run: |
          python -m pip install --upgrade pip
          pip install cibuildwheel build

      #sdist linux
      - name: Build sdist
        if: matrix.os == 'ubuntu-24.04'
        run: python -m build --sdist
      
      - name: Set up QEMU (Linux)
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64
      
      - name: Build wheels with cibuildwheel
        run: python -m cibuildwheel --output-dir wheelhouse

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.os }}
          path: |
            wheelhouse/*.whl
            dist/*.tar.gz
          if-no-files-found: ignore
          retention-days: 14
  publish:
    name: Publish to PyPI
    needs: [build_wheels]
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
      - name: Gather files
        shell: bash
        run: |
          mkdir -p upload
          find dist -type f \( -name '*.whl' -o -name '*.tar.gz' \) -exec cp -v {} upload/ \;
          ls -l upload
      - name: Upload to PyPI (Trusted Publisher)
        if: startsWith(github.ref, 'refs/tags/v')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages_dir: upload
          # test
          # repository-url: https://test.pypi.org/legacy/