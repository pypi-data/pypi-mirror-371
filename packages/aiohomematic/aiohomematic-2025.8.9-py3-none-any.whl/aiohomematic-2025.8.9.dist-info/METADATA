Metadata-Version: 2.4
Name: aiohomematic
Version: 2025.8.9
Summary: Homematic interface for Home Assistant running on Python 3.
Home-page: https://github.com/sukramj/aiohomematic
Author-email: SukramJ <sukramj@icloud.com>, Daniel Perna <danielperna84@gmail.com>
License: MIT License
Project-URL: Source Code, https://github.com/sukramj/aiohomematic
Project-URL: Bug Reports, https://github.com/sukramj/aiohomematic/issues
Project-URL: Docs: Dev, https://github.com/sukramj/aiohomematic
Project-URL: Forum, https://github.com/sukramj/aiohomematic/discussions
Keywords: home,automation,homematic
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: End Users/Desktop
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3.13
Classifier: Topic :: Home Automation
Requires-Python: >=3.13.0
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: aiohttp>=3.10.0
Requires-Dist: orjson>=3.10.0
Requires-Dist: python-slugify>=8.0.0
Requires-Dist: voluptuous>=0.14.0
Dynamic: license-file

# AIO Homematic (hahomematic)

A lightweight Python 3 library that powers Home Assistant integrations for controlling and monitoring [HomeMatic](https://www.eq-3.com/products/homematic.html) and [HomematicIP](https://www.homematic-ip.com/en/start.html) devices. Some third‑party devices/gateways (e.g., Bosch, Intertechno) may be supported as well.

This project is the modern successor to [pyhomematic](https://github.com/danielperna84/pyhomematic), focusing on automatic entity creation, fewer manual device definitions, and faster startups.

## How it works

Unlike pyhomematic, which required manual device mappings, aiohomematic automatically creates entities for each relevant parameter on every device channel (unless blacklisted). To achieve this it:

- Fetches and caches device paramsets (VALUES) for fast successive startups.
- Provides hooks for custom entity classes where complex behavior is needed (e.g., thermostats, lights, covers, climate, locks, sirens).
- Includes helpers for robust operation, such as automatic reconnection after CCU restarts.

## Key features

- Automatic entity discovery from device/channel parameters.
- Extensible via custom entity classes for complex devices.
- Caching of paramsets to speed up restarts.
- Designed to integrate with Home Assistant.

## Installation (with Home Assistant)

Install via the custom component: [Homematic(IP) Local](https://github.com/sukramj/homematicip_local).

Follow the installation guide: https://github.com/sukramj/homematicip_local/wiki/Installation

## Requirements

Due to a bug in earlier CCU2/CCU3 firmware, aiohomematic requires at least the following versions when used with HomematicIP devices:

- CCU2: 2.53.27
- CCU3: 3.53.26

See details here: https://github.com/jens-maus/RaspberryMatic/issues/843. Other CCU‑like platforms using the buggy HmIPServer version are not supported.

## Useful links

- Examples: see example.py in this repository.
- Changelog: see changelog.md.
- Source code and documentation: this repository (docs/ directory may contain additional information).
