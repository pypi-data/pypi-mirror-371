"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .gitopstype import GitOpsType
from cribl_control_plane.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GitSettingsTypedDict(TypedDict):
    auth_type: NotRequired[str]
    auto_action: NotRequired[str]
    auto_action_message: NotRequired[str]
    auto_action_schedule: NotRequired[str]
    branch: NotRequired[str]
    commit_deploy_single_action: NotRequired[bool]
    copilot_auto_git_commit_messages: NotRequired[bool]
    default_commit_message: NotRequired[str]
    git_ops: NotRequired[GitOpsType]
    password: NotRequired[str]
    remote: NotRequired[str]
    ssh_key: NotRequired[str]
    strict_host_key_checking: NotRequired[bool]
    timeout: NotRequired[float]
    user: NotRequired[str]


class GitSettings(BaseModel):
    auth_type: Annotated[Optional[str], pydantic.Field(alias="authType")] = None

    auto_action: Annotated[Optional[str], pydantic.Field(alias="autoAction")] = None

    auto_action_message: Annotated[
        Optional[str], pydantic.Field(alias="autoActionMessage")
    ] = None

    auto_action_schedule: Annotated[
        Optional[str], pydantic.Field(alias="autoActionSchedule")
    ] = None

    branch: Optional[str] = None

    commit_deploy_single_action: Annotated[
        Optional[bool], pydantic.Field(alias="commitDeploySingleAction")
    ] = None

    copilot_auto_git_commit_messages: Annotated[
        Optional[bool], pydantic.Field(alias="copilotAutoGitCommitMessages")
    ] = None

    default_commit_message: Annotated[
        Optional[str], pydantic.Field(alias="defaultCommitMessage")
    ] = None

    git_ops: Annotated[Optional[GitOpsType], pydantic.Field(alias="gitOps")] = None

    password: Optional[str] = None

    remote: Optional[str] = None

    ssh_key: Annotated[Optional[str], pydantic.Field(alias="sshKey")] = None

    strict_host_key_checking: Annotated[
        Optional[bool], pydantic.Field(alias="strictHostKeyChecking")
    ] = None

    timeout: Optional[float] = None

    user: Optional[str] = None
