"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from cribl_control_plane.types import BaseModel
from enum import Enum
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class AuthConfigType(str, Enum):
    LDAP = "ldap"
    SPLUNK = "splunk"
    LOCAL = "local"
    SAML = "saml"
    OPENID = "openid"
    SAAS = "saas"


class AuthConfigTypedDict(TypedDict):
    fallback: bool
    fallback_bad_login: bool
    host: str
    port: float
    ssl: bool
    type: AuthConfigType
    filter_type: NotRequired[str]


class AuthConfig(BaseModel):
    fallback: bool

    fallback_bad_login: Annotated[bool, pydantic.Field(alias="fallbackBadLogin")]

    host: str

    port: float

    ssl: bool

    type: AuthConfigType

    filter_type: Optional[str] = None
