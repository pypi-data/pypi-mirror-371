"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .packinfo import PackInfo, PackInfoTypedDict
from cribl_control_plane.types import BaseModel
from cribl_control_plane.utils import (
    FieldMetadata,
    PathParamMetadata,
    QueryParamMetadata,
)
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class UpdatePacksByIDRequestTypedDict(TypedDict):
    id: str
    r"""The <code>id</code> of the Pack to upgrade."""
    source: NotRequired[str]
    r"""body string required Pack source"""
    minor: NotRequired[str]
    r"""body boolean optional Only upgrade to minor/patch versions"""
    spec: NotRequired[str]
    r"""body string optional Specify a branch, tag or a semver spec"""


class UpdatePacksByIDRequest(BaseModel):
    id: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""The <code>id</code> of the Pack to upgrade."""

    source: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""body string required Pack source"""

    minor: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""body boolean optional Only upgrade to minor/patch versions"""

    spec: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""body string optional Specify a branch, tag or a semver spec"""


class UpdatePacksByIDResponseTypedDict(TypedDict):
    r"""a list of PackInfo objects"""

    count: NotRequired[int]
    r"""number of items present in the items array"""
    items: NotRequired[List[PackInfoTypedDict]]


class UpdatePacksByIDResponse(BaseModel):
    r"""a list of PackInfo objects"""

    count: Optional[int] = None
    r"""number of items present in the items array"""

    items: Optional[List[PackInfo]] = None
