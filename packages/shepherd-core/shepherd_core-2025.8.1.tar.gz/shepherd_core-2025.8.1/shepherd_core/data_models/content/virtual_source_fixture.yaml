# info:
# - compendium of all parameters & description
# - base for neutral fallback values if provided yaml is sparse
# - -> it is encouraged to omit redundant parameters
---
- datatype: VirtualSourceConfig
  parameters:
    id: 1000
    name: neutral
    description: Direct feed-through of energy environment with no converter (allows on-off-patters)
    # General Config
    enable_boost: false # if false -> v_intermediate = v_input, output-switch-hysteresis is still usable
    enable_buck: false # if false -> v_output = v_intermediate
    enable_feedback_to_hrv: false  # src can control a cv-harvester for ivcurve

    interval_startup_delay_drain_ms: 0

    harvester:
      name: mppt_opt # harvester only active if input is "ivcurve"

    V_input_max_mV: 10000
    I_input_max_mA: 4200
    V_input_drop_mV: 0.0  # simulate input-diode
    R_input_mOhm: 0.0  # resistance only active with disabled boost, range [1 mOhm; 1MOhm]

    C_intermediate_uF: 0.0  # primary storage-Cap
    V_intermediate_init_mV: 3000 # allow a proper / fast startup
    I_intermediate_leak_nA: 0.0

    # Output-Switch with comparator and hysteresis
    V_intermediate_enable_threshold_mV: 1 # -> target gets connected (hysteresis-combo with next value)
    V_intermediate_disable_threshold_mV: 0 # -> target gets disconnected
    interval_check_thresholds_ms: 0.0  # some BQs check every 64 ms if output should be disconnected

    # Power-Good signal from comparator and hysteresis
    V_pwr_good_enable_threshold_mV: 2800 # target is informed by pwr-good on output-pin (hysteresis) -> for intermediate voltage
    V_pwr_good_disable_threshold_mV: 2200
    immediate_pwr_good_signal: true  # 1: activate instant schmitt-trigger, 0: stay in interval for checking thresholds

    C_output_uF: 1.0   # final (always last) stage to compensate transient current spikes when enabling power for target

    # Extra
    V_output_log_gpio_threshold_mV: 1400  # min voltage needed to enable recording changes in gpio-bank
    # TODO: actually disable gpio below that

    # Boost Converter
    V_input_boost_threshold_mV: 0.0 # min input-voltage for the boost converter to work
    V_intermediate_max_mV: 10000 # -> boost converter shuts off

    LUT_input_efficiency: [
      [ 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00 ], # rows are current -> here a[V=0][:]
      [ 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00 ],
      [ 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00 ],
      [ 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00 ],
      [ 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00 ],
      [ 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00 ],
      [ 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00 ],
      [ 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00 ],
      [ 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00 ],
      [ 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00 ],
      [ 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00 ],
      [ 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00 ],
    ]
    # input-array[12][12] depending on array[inp_voltage][log(inp_current)],
    # influence of cap-voltage is not implemented
    LUT_input_V_min_log2_uV: 0 # 2^7 = 128 uV -> array[0] is for inputs < 128 uV
    LUT_input_I_min_log2_nA: 1 # 2^8 = 256 nA -> array[0] is for inputs < 256 nA

    # Buck-converter
    V_output_mV: 2400
    V_buck_drop_mV: 0.0  # simulate LDO min voltage differential or output-diode

    LUT_output_efficiency: [ 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00 ] # array[12] depending on output_current
    LUT_output_I_min_log2_nA: 1  # 2^8 = 256 nA -> array[0] is for inputs < 256 nA, see notes on LUT_input for explanation

    owner: Ingmar
    group: NES Lab
    visible2group: true
    visible2all: true
    created: 2022-12-12 12:12:12
    updated_last: 2022-12-12 12:12:12

- datatype: VirtualSourceConfig
  parameters:
    id: 1010
    name: direct
    inherit_from: neutral
    harvester:
      name: direct  # even disables harvesting of ivcurve
    # Note: current input has no influence

- datatype: VirtualSourceConfig
  parameters:
    id: 1011
    name: diode+capacitor
    description: Simple Converter based on diode and storage capacitor
    inherit_from: neutral
    V_input_drop_mV: 300  # simulate input-diode
    C_intermediate_uF: 47  # primary storage-Cap
    harvester:
      name: cv20
    enable_feedback_to_hrv: true  # src can control a cv-harvester for ivcurve
    V_intermediate_enable_threshold_mV: 2000
    V_intermediate_disable_threshold_mV: 1800  # nRF draw ~0.5 mA below that point
    # TODO: put switch-output into special nRF Version

- datatype: VirtualSourceConfig
  parameters:
    id: 1012
    name: dio_cap # simpler naming
    inherit_from: diode+capacitor

- datatype: VirtualSourceConfig
  parameters:
    id: 1013
    name: diode+resistor+capacitor
    description: Simple Converter based on diode, current limiting resistor and storage capacitor
    inherit_from: diode+capacitor
    R_input_mOhm: 10000

- datatype: VirtualSourceConfig
  parameters:
    id: 1014
    name: dio_res_cap # simpler naming
    inherit_from: diode+resistor+capacitor

- datatype: VirtualSourceConfig
  parameters:
    id: 1020
    name: BQ25504
    description: TI BQ25504 with integrated boost-converter. Values are taken from the DK-Board.
    inherit_from: neutral # to complete undefined vars
    enable_boost: true # if false -> v_intermediate = v_input, output-switch-hysteresis is still usable

    harvester:
      name: mppt_bq_solar # harvester only active if input is ivsurface / curves

    V_input_max_mV: 3000
    I_input_max_mA: 100

    C_intermediate_uF: 100.0  # primary storage-Cap
    V_intermediate_init_mV: 3000 # allow a proper / fast startup
    I_intermediate_leak_nA: 330

    V_intermediate_enable_threshold_mV: 1000 # -> target gets connected (hysteresis-combo with next value)
    V_intermediate_disable_threshold_mV: 0 # -> target gets disconnected
    interval_check_thresholds_ms: 64.0  # some BQs check every 64 ms if output should be disconnected

    V_pwr_good_enable_threshold_mV: 2800 # target is informed by pwr-good on output-pin (hysteresis) -> for intermediate voltage
    V_pwr_good_disable_threshold_mV: 2340
    immediate_pwr_good_signal: false  # 1: activate instant schmitt-trigger, 0: stay in interval for checking thresholds

    # Boost Converter
    V_input_boost_threshold_mV: 130 # min input-voltage for the boost converter to work
    V_intermediate_max_mV: 3600 # -> boost converter shuts off

    LUT_input_efficiency: [
      # <8uA  8uA   16uA  32uA  64uA  128uA 256uA 512uA 1mA   2mA   4mA   >8mA
      [ 0.01, 0.01, 0.02, 0.05, 0.10, 0.15, 0.15, 0.20, 0.25, 0.30, 0.30, 0.35 ], # < 128 mV
      [ 0.10, 0.20, 0.30, 0.40, 0.50, 0.55, 0.56, 0.57, 0.58, 0.59, 0.60, 0.61 ], # > 128 mV, ~200
      [ 0.20, 0.40, 0.50, 0.60, 0.65, 0.66, 0.67, 0.68, 0.69, 0.70, 0.71, 0.72 ], # > 256 mV, ~320
      [ 0.35, 0.55, 0.65, 0.71, 0.73, 0.74, 0.75, 0.75, 0.76, 0.77, 0.77, 0.78 ], # > 384 mV, ~450
      [ 0.45, 0.65, 0.70, 0.73, 0.75, 0.77, 0.78, 0.79, 0.80, 0.81, 0.81, 0.82 ], # > 512 mV, ~570
      [ 0.50, 0.70, 0.74, 0.76, 0.78, 0.79, 0.80, 0.81, 0.82, 0.83, 0.83, 0.84 ], # > 640 mV
      [ 0.52, 0.73, 0.76, 0.78, 0.80, 0.81, 0.82, 0.83, 0.84, 0.85, 0.85, 0.86 ], # > 768 mV
      [ 0.53, 0.75, 0.77, 0.79, 0.81, 0.82, 0.83, 0.84, 0.85, 0.86, 0.86, 0.87 ], # > 896 mV
      [ 0.55, 0.77, 0.78, 0.80, 0.82, 0.83, 0.85, 0.86, 0.87, 0.87, 0.87, 0.88 ], # > 1024 mV
      [ 0.56, 0.78, 0.79, 0.81, 0.83, 0.85, 0.87, 0.88, 0.88, 0.88, 0.88, 0.89 ], # > 1152 mV
      [ 0.58, 0.79, 0.80, 0.82, 0.84, 0.86, 0.88, 0.89, 0.89, 0.89, 0.89, 0.90 ], # > 1280 mV
      [ 0.60, 0.80, 0.81, 0.83, 0.85, 0.87, 0.89, 0.90, 0.90, 0.90, 0.90, 0.90 ], # > 1408 mV
    ] # input-array[12][12] depending on array[inp_voltage][log(inp_current)], influence of cap-voltage is not implemented
    LUT_input_V_min_log2_uV: 17 # example: 2^7 = 128 uV -> array[0] is for inputs < 128 uV
    LUT_input_I_min_log2_nA: 13 # example: 2^8 = 256 nA -> array[0] is for inputs < 256 nA

- datatype: VirtualSourceConfig
  parameters:
    id: 1021
    name: BQ25504s # Version with Schmitt-Trigger
    description: TI BQ25504 with Schmitt-Trigger for a faster power-good-signal
    inherit_from: BQ25504
    immediate_pwr_good_signal: true

- datatype: VirtualSourceConfig
  parameters:
    id: 1022
    name: BQ25504-Schmitt
    inherit_from: BQ25504s

- datatype: VirtualSourceConfig
  parameters:
    id: 1030
    name: BQ25570
    description: TI BQ25570 with integrated boost- & buck-converter
    inherit_from: BQ25504 # inherit Input-LUT that is similar enough
    enable_boost: true # if false -> v_intermediate = v_input, output-switch-hysteresis is still usable
    enable_buck: true # if false -> v_output = v_intermediate

    V_input_max_mV: 5100
    I_input_max_mA: 100

    C_intermediate_uF: 33.0  # primary storage-Cap
    V_intermediate_init_mV: 3400 # allow a proper / fast startup
    I_intermediate_leak_nA: 0.0

    V_intermediate_enable_threshold_mV: 3000 # -> target gets connected (hysteresis-combo with next value)
    V_intermediate_disable_threshold_mV: 2400 # -> target gets disconnected
    interval_check_thresholds_ms: 64.0  # some BQs check every 64 ms if output should be disconnected

    V_pwr_good_enable_threshold_mV: 3000 # target is informed by pwr-good on output-pin (hysteresis) -> for intermediate voltage
    V_pwr_good_disable_threshold_mV: 2500
    immediate_pwr_good_signal: false  # 1: activate instant schmitt-trigger, 0: stay in interval for checking thresholds

    C_output_uF: 1.0   # final (always last) stage to compensate undetectable current spikes when enabling power for target

    # Boost Converter
    V_input_boost_threshold_mV: 100.0 # min input-voltage for the boost converter to work
    V_intermediate_max_mV: 5500 # -> boost converter shuts off

    # Buck Converter
    V_output_mV: 2200
    V_buck_drop_mV: 200.0  # simulate LDO min voltage differential or output-diode

    #                        <1u   1u    2u    4u    8u    16u   32u   64u   128u  256u  512u  >1m
    LUT_output_efficiency: [ 0.40, 0.50, 0.60, 0.73, 0.82, 0.86, 0.88, 0.90, 0.91, 0.92, 0.93, 0.92] # array[12] depending on output_current
    LUT_output_I_min_log2_nA: 10  # example: 2^8 = 256 nA -> array[0] is for inputs < 256 nA, see notes on LUT_input for explanation

- datatype: VirtualSourceConfig
  parameters:
    id: 1031
    name: BQ25570s
    description: TI BQ25570 with Schmitt-Trigger for a faster power-good-signal
    inherit_from: BQ25570
    immediate_pwr_good_signal: true

- datatype: VirtualSourceConfig
  parameters:
    id: 1032
    name: BQ25570-Schmitt
    inherit_from: BQ25570s
- datatype: VirtualSourceConfig
  parameters:
    id: 1033
    name: default
    inherit_from: BQ25570s

# TODO: add some generic boost-converters with mppt_po, _voc and more
