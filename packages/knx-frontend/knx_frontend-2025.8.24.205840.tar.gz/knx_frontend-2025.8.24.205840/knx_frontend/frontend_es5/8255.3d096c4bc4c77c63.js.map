{"version":3,"file":"8255.3d096c4bc4c77c63.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/components/ha-alert.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-button.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-icon-button-arrow-prev.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-icon-button.ts","webpack://knx-frontend/./homeassistant-frontend/src/data/persistent_notification.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-menu-button.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-svg-icon.ts","webpack://knx-frontend/./homeassistant-frontend/src/layouts/hass-error-screen.ts","webpack://knx-frontend/./homeassistant-frontend/src/resources/polyfills/stateset.ts","webpack://knx-frontend/./node_modules/core-js/internals/array-sort.js","webpack://knx-frontend/./node_modules/core-js/internals/environment-ff-version.js","webpack://knx-frontend/./node_modules/core-js/internals/environment-is-ie-or-edge.js","webpack://knx-frontend/./node_modules/core-js/internals/environment-webkit-version.js","webpack://knx-frontend/./node_modules/core-js/internals/get-built-in-node-module.js"],"sourcesContent":["import {\n  mdiAlertCircleOutline,\n  mdiAlertOutline,\n  mdiCheckboxMarkedCircleOutline,\n  mdiClose,\n  mdiInformationOutline,\n} from \"@mdi/js\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport \"./ha-icon-button\";\nimport \"./ha-svg-icon\";\n\nconst ALERT_ICONS = {\n  info: mdiInformationOutline,\n  warning: mdiAlertOutline,\n  error: mdiAlertCircleOutline,\n  success: mdiCheckboxMarkedCircleOutline,\n};\n\ndeclare global {\n  interface HASSDomEvents {\n    \"alert-dismissed-clicked\": undefined;\n  }\n}\n\n@customElement(\"ha-alert\")\nclass HaAlert extends LitElement {\n  // eslint-disable-next-line lit/no-native-attributes\n  @property() public title = \"\";\n\n  @property({ attribute: \"alert-type\" }) public alertType:\n    | \"info\"\n    | \"warning\"\n    | \"error\"\n    | \"success\" = \"info\";\n\n  @property({ type: Boolean }) public dismissable = false;\n\n  @property({ type: Boolean }) public narrow = false;\n\n  public render() {\n    return html`\n      <div\n        class=\"issue-type ${classMap({\n          [this.alertType]: true,\n        })}\"\n        role=\"alert\"\n      >\n        <div class=\"icon ${this.title ? \"\" : \"no-title\"}\">\n          <slot name=\"icon\">\n            <ha-svg-icon .path=${ALERT_ICONS[this.alertType]}></ha-svg-icon>\n          </slot>\n        </div>\n        <div class=${classMap({ content: true, narrow: this.narrow })}>\n          <div class=\"main-content\">\n            ${this.title\n              ? html`<div class=\"title\">${this.title}</div>`\n              : nothing}\n            <slot></slot>\n          </div>\n          <div class=\"action\">\n            <slot name=\"action\">\n              ${this.dismissable\n                ? html`<ha-icon-button\n                    @click=${this._dismissClicked}\n                    label=\"Dismiss alert\"\n                    .path=${mdiClose}\n                  ></ha-icon-button>`\n                : nothing}\n            </slot>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  private _dismissClicked() {\n    fireEvent(this, \"alert-dismissed-clicked\");\n  }\n\n  static styles = css`\n    .issue-type {\n      position: relative;\n      padding: 8px;\n      display: flex;\n    }\n    .issue-type::after {\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      opacity: 0.12;\n      pointer-events: none;\n      content: \"\";\n      border-radius: 4px;\n    }\n    .icon {\n      z-index: 1;\n    }\n    .icon.no-title {\n      align-self: center;\n    }\n    .content {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      width: 100%;\n      text-align: var(--float-start);\n    }\n    .content.narrow {\n      flex-direction: column;\n      align-items: flex-end;\n    }\n    .action {\n      z-index: 1;\n      width: min-content;\n      --mdc-theme-primary: var(--primary-text-color);\n    }\n    .main-content {\n      overflow-wrap: anywhere;\n      word-break: break-word;\n      margin-left: 8px;\n      margin-right: 0;\n      margin-inline-start: 8px;\n      margin-inline-end: 0;\n    }\n    .title {\n      margin-top: 2px;\n      font-weight: var(--ha-font-weight-bold);\n    }\n    .action ha-icon-button {\n      --mdc-theme-primary: var(--primary-text-color);\n      --mdc-icon-button-size: 36px;\n    }\n    .issue-type.info > .icon {\n      color: var(--info-color);\n    }\n    .issue-type.info::after {\n      background-color: var(--info-color);\n    }\n\n    .issue-type.warning > .icon {\n      color: var(--warning-color);\n    }\n    .issue-type.warning::after {\n      background-color: var(--warning-color);\n    }\n\n    .issue-type.error > .icon {\n      color: var(--error-color);\n    }\n    .issue-type.error::after {\n      background-color: var(--error-color);\n    }\n\n    .issue-type.success > .icon {\n      color: var(--success-color);\n    }\n    .issue-type.success::after {\n      background-color: var(--success-color);\n    }\n    :host ::slotted(ul) {\n      margin: 0;\n      padding-inline-start: 20px;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-alert\": HaAlert;\n  }\n}\n","import Button from \"@awesome.me/webawesome/dist/components/button/button\";\nimport { css, type CSSResultGroup } from \"lit\";\nimport { customElement } from \"lit/decorators\";\n\nimport { StateSet } from \"../resources/polyfills/stateset\";\n\nexport type Appearance = \"accent\" | \"filled\" | \"outlined\" | \"plain\";\n\n/**\n * Home Assistant button component\n *\n * @element ha-button\n * @extends {Button}\n *\n * @summary\n * A stylable button component supporting Home Assistant theming, variants, and appearances based on webawesome button.\n *\n * @slot - Label of the button\n * @slot start - The prefix container (usually for icons).\n * @slot end - The suffix container (usually for icons).\n *\n * @csspart base - The component's base wrapper.\n * @csspart start - The container that wraps the prefix.\n * @csspart label - The button's label.\n * @csspart end - The container that wraps the suffix.\n * @csspart caret - The button's caret icon, an `<sl-icon>` element.\n * @csspart spinner - The spinner that shows when the button is in the loading state.\n *\n * @cssprop --ha-button-height - The height of the button.\n * @cssprop --ha-button-radius - The border radius of the button. defaults to `var(--wa-border-radius-pill)`.\n *\n * @attr {(\"small\"|\"medium\")} size - Sets the button size.\n * @attr {(\"brand\"|\"neutral\"|\"danger\"|\"warning\"|\"success\")} variant - Sets the button color variant. \"primary\" is default.\n * @attr {(\"accent\"|\"filled\"|\"plain\")} appearance - Sets the button appearance.\n * @attr {boolean} loading - shows a loading indicator instead of the buttons label and disable buttons click.\n * @attr {boolean} disabled - Disables the button and prevents user interaction.\n */\n@customElement(\"ha-button\")\nexport class HaButton extends Button {\n  variant: \"brand\" | \"neutral\" | \"success\" | \"warning\" | \"danger\" = \"brand\";\n\n  attachInternals() {\n    const internals = super.attachInternals();\n    Object.defineProperty(internals, \"states\", {\n      value: new StateSet(this, internals.states),\n    });\n    return internals;\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      Button.styles,\n      css`\n        .button {\n          /* set theme vars */\n          --wa-form-control-padding-inline: 16px;\n          --wa-font-weight-action: var(--ha-font-weight-medium);\n          --wa-border-radius-pill: 9999px;\n          --wa-form-control-border-radius: var(\n            --ha-button-radius,\n            var(--wa-border-radius-pill)\n          );\n\n          --wa-form-control-height: var(\n            --ha-button-height,\n            var(--button-height, 40px)\n          );\n\n          font-size: var(--ha-font-size-m);\n          line-height: 1;\n        }\n\n        :host([size=\"small\"]) .button {\n          --wa-form-control-height: var(\n            --ha-button-height,\n            var(--button-height, 32px)\n          );\n          font-size: var(--wa-font-size-s, var(--ha-font-size-m));\n        }\n\n        :host([variant=\"brand\"]) {\n          --color-fill-normal-active: var(--color-fill-primary-normal-active);\n          --color-fill-normal-hover: var(--color-fill-primary-normal-hover);\n          --color-fill-loud-active: var(--color-fill-primary-loud-active);\n          --color-fill-loud-hover: var(--color-fill-primary-loud-hover);\n        }\n\n        :host([variant=\"neutral\"]) {\n          --color-fill-normal-active: var(--color-fill-neutral-normal-active);\n          --color-fill-normal-hover: var(--color-fill-neutral-normal-hover);\n          --color-fill-loud-active: var(--color-fill-neutral-loud-active);\n          --color-fill-loud-hover: var(--color-fill-neutral-loud-hover);\n        }\n\n        :host([variant=\"success\"]) {\n          --color-fill-normal-active: var(--color-fill-success-normal-active);\n          --color-fill-normal-hover: var(--color-fill-success-normal-hover);\n          --color-fill-loud-active: var(--color-fill-success-loud-active);\n          --color-fill-loud-hover: var(--color-fill-success-loud-hover);\n        }\n\n        :host([variant=\"warning\"]) {\n          --color-fill-normal-active: var(--color-fill-warning-normal-active);\n          --color-fill-normal-hover: var(--color-fill-warning-normal-hover);\n          --color-fill-loud-active: var(--color-fill-warning-loud-active);\n          --color-fill-loud-hover: var(--color-fill-warning-loud-hover);\n        }\n\n        :host([variant=\"danger\"]) {\n          --color-fill-normal-active: var(--color-fill-danger-normal-active);\n          --color-fill-normal-hover: var(--color-fill-danger-normal-hover);\n          --color-fill-loud-active: var(--color-fill-danger-loud-active);\n          --color-fill-loud-hover: var(--color-fill-danger-loud-hover);\n        }\n\n        :host([appearance~=\"plain\"]) .button {\n          color: var(--wa-color-on-normal);\n        }\n        :host([appearance~=\"plain\"]) .button.disabled {\n          background-color: var(--transparent-none);\n          color: var(--color-on-disabled-quiet);\n        }\n\n        :host([appearance~=\"outlined\"]) .button.disabled {\n          background-color: var(--transparent-none);\n          color: var(--color-on-disabled-quiet);\n        }\n\n        @media (hover: hover) {\n          :host([appearance~=\"filled\"])\n            .button:not(.disabled):not(.loading):hover {\n            background-color: var(--color-fill-normal-hover);\n          }\n          :host([appearance~=\"accent\"])\n            .button:not(.disabled):not(.loading):hover {\n            background-color: var(--color-fill-loud-hover);\n          }\n          :host([appearance~=\"plain\"])\n            .button:not(.disabled):not(.loading):hover {\n            color: var(--wa-color-on-normal);\n          }\n        }\n        :host([appearance~=\"filled\"])\n          .button:not(.disabled):not(.loading):active {\n          background-color: var(--color-fill-normal-active);\n        }\n        :host([appearance~=\"filled\"]) .button.disabled {\n          background-color: var(--color-fill-disabled-normal-resting);\n          color: var(--color-on-disabled-normal);\n        }\n\n        :host([appearance~=\"accent\"]) .button {\n          background-color: var(\n            --wa-color-fill-loud,\n            var(--wa-color-neutral-fill-loud)\n          );\n        }\n        :host([appearance~=\"accent\"])\n          .button:not(.disabled):not(.loading):active {\n          background-color: var(--color-fill-loud-active);\n        }\n        :host([appearance~=\"accent\"]) .button.disabled {\n          background-color: var(--color-fill-disabled-loud-resting);\n          color: var(--color-on-disabled-loud);\n        }\n\n        :host([loading]) {\n          pointer-events: none;\n        }\n\n        .button.disabled {\n          opacity: 1;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-button\": HaButton;\n  }\n}\n","import { mdiArrowLeft, mdiArrowRight } from \"@mdi/js\";\nimport type { TemplateResult } from \"lit\";\nimport { html, LitElement } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { mainWindow } from \"../common/dom/get_main_window\";\nimport type { HomeAssistant } from \"../types\";\nimport \"./ha-icon-button\";\n\n@customElement(\"ha-icon-button-arrow-prev\")\nexport class HaIconButtonArrowPrev extends LitElement {\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property() public label?: string;\n\n  @state() private _icon =\n    mainWindow.document.dir === \"rtl\" ? mdiArrowRight : mdiArrowLeft;\n\n  protected render(): TemplateResult {\n    return html`\n      <ha-icon-button\n        .disabled=${this.disabled}\n        .label=${this.label || this.hass?.localize(\"ui.common.back\") || \"Back\"}\n        .path=${this._icon}\n      ></ha-icon-button>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon-button-arrow-prev\": HaIconButtonArrowPrev;\n  }\n}\n","import \"@material/mwc-icon-button\";\nimport type { IconButton } from \"@material/mwc-icon-button\";\nimport type { TemplateResult } from \"lit\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property, query } from \"lit/decorators\";\nimport { ifDefined } from \"lit/directives/if-defined\";\nimport \"./ha-svg-icon\";\n\n@customElement(\"ha-icon-button\")\nexport class HaIconButton extends LitElement {\n  @property({ type: Boolean, reflect: true }) disabled = false;\n\n  // SVG icon path (if you need a non SVG icon instead, use the provided slot to pass an <ha-icon> in)\n  @property({ type: String }) path?: string;\n\n  // Label that is used for ARIA support and as tooltip\n  @property({ type: String }) label?: string;\n\n  // These should always be set as properties, not attributes,\n  // so that only the <button> element gets the attribute\n  @property({ type: String, attribute: \"aria-haspopup\" })\n  override ariaHasPopup!: IconButton[\"ariaHasPopup\"];\n\n  @property({ attribute: \"hide-title\", type: Boolean }) hideTitle = false;\n\n  @query(\"mwc-icon-button\", true) private _button?: IconButton;\n\n  public override focus() {\n    this._button?.focus();\n  }\n\n  static shadowRootOptions: ShadowRootInit = {\n    mode: \"open\",\n    delegatesFocus: true,\n  };\n\n  protected render(): TemplateResult {\n    return html`\n      <mwc-icon-button\n        aria-label=${ifDefined(this.label)}\n        title=${ifDefined(this.hideTitle ? undefined : this.label)}\n        aria-haspopup=${ifDefined(this.ariaHasPopup)}\n        .disabled=${this.disabled}\n      >\n        ${this.path\n          ? html`<ha-svg-icon .path=${this.path}></ha-svg-icon>`\n          : html`<slot></slot>`}\n      </mwc-icon-button>\n    `;\n  }\n\n  static styles = css`\n    :host {\n      display: inline-block;\n      outline: none;\n    }\n    :host([disabled]) {\n      pointer-events: none;\n    }\n    mwc-icon-button {\n      --mdc-theme-on-primary: currentColor;\n      --mdc-theme-text-disabled-on-light: var(--disabled-text-color);\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon-button\": HaIconButton;\n  }\n}\n","import type {\n  Connection,\n  HassEntity,\n  UnsubscribeFunc,\n} from \"home-assistant-js-websocket\";\n\nexport interface PersitentNotificationEntity extends HassEntity {\n  notification_id?: string;\n  created_at?: string;\n  title?: string;\n  message?: string;\n}\n\nexport interface PersistentNotification {\n  created_at: string;\n  message: string;\n  notification_id: string;\n  title: string;\n  status: \"read\" | \"unread\";\n}\n\nexport type PersistentNotifications = Record<string, PersistentNotification>;\n\nexport interface PersistentNotificationMessage {\n  type: \"added\" | \"removed\" | \"current\" | \"updated\";\n  notifications: PersistentNotifications;\n}\n\nexport const subscribeNotifications = (\n  conn: Connection,\n  onChange: (notifications: PersistentNotification[]) => void\n): UnsubscribeFunc => {\n  const params = {\n    type: \"persistent_notification/subscribe\",\n  };\n  const stream = new NotificationStream();\n  const subscription = conn.subscribeMessage<PersistentNotificationMessage>(\n    (message) => onChange(stream.processMessage(message)),\n    params\n  );\n  return () => {\n    subscription.then((unsub) => unsub?.());\n  };\n};\n\nclass NotificationStream {\n  notifications: PersistentNotifications;\n\n  constructor() {\n    this.notifications = {};\n  }\n\n  processMessage(\n    streamMessage: PersistentNotificationMessage\n  ): PersistentNotification[] {\n    if (streamMessage.type === \"removed\") {\n      for (const notificationId of Object.keys(streamMessage.notifications)) {\n        delete this.notifications[notificationId];\n      }\n    } else {\n      this.notifications = {\n        ...this.notifications,\n        ...streamMessage.notifications,\n      };\n    }\n    return Object.values(this.notifications);\n  }\n}\n","import { mdiMenu } from \"@mdi/js\";\nimport type { UnsubscribeFunc } from \"home-assistant-js-websocket\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { subscribeNotifications } from \"../data/persistent_notification\";\nimport type { HomeAssistant } from \"../types\";\nimport \"./ha-icon-button\";\n\n@customElement(\"ha-menu-button\")\nclass HaMenuButton extends LitElement {\n  @property({ type: Boolean }) public hassio = false;\n\n  @property({ type: Boolean }) public narrow = false;\n\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @state() private _hasNotifications = false;\n\n  @state() private _show = false;\n\n  private _alwaysVisible = false;\n\n  private _attachNotifOnConnect = false;\n\n  private _unsubNotifications?: UnsubscribeFunc;\n\n  public connectedCallback() {\n    super.connectedCallback();\n    if (this._attachNotifOnConnect) {\n      this._attachNotifOnConnect = false;\n      this._subscribeNotifications();\n    }\n  }\n\n  public disconnectedCallback() {\n    super.disconnectedCallback();\n    if (this._unsubNotifications) {\n      this._attachNotifOnConnect = true;\n      this._unsubNotifications();\n      this._unsubNotifications = undefined;\n    }\n  }\n\n  protected render() {\n    if (!this._show) {\n      return nothing;\n    }\n    const hasNotifications =\n      this._hasNotifications &&\n      (this.narrow || this.hass.dockedSidebar === \"always_hidden\");\n    return html`\n      <ha-icon-button\n        .label=${this.hass.localize(\"ui.sidebar.sidebar_toggle\")}\n        .path=${mdiMenu}\n        @click=${this._toggleMenu}\n      ></ha-icon-button>\n      ${hasNotifications ? html`<div class=\"dot\"></div>` : \"\"}\n    `;\n  }\n\n  protected firstUpdated(changedProps) {\n    super.firstUpdated(changedProps);\n    if (!this.hassio) {\n      return;\n    }\n    // This component is used on Hass.io too, but Hass.io might run the UI\n    // on older frontends too, that don't have an always visible menu button\n    // in the sidebar.\n    this._alwaysVisible =\n      (Number((window.parent as any).frontendVersion) || 0) < 20190710;\n  }\n\n  protected willUpdate(changedProps) {\n    super.willUpdate(changedProps);\n\n    if (!changedProps.has(\"narrow\") && !changedProps.has(\"hass\")) {\n      return;\n    }\n\n    const oldHass = changedProps.has(\"hass\")\n      ? (changedProps.get(\"hass\") as HomeAssistant | undefined)\n      : this.hass;\n    const oldNarrow = changedProps.has(\"narrow\")\n      ? (changedProps.get(\"narrow\") as boolean | undefined)\n      : this.narrow;\n\n    const oldShowButton =\n      oldNarrow || oldHass?.dockedSidebar === \"always_hidden\";\n    const showButton =\n      this.narrow || this.hass.dockedSidebar === \"always_hidden\";\n\n    if (this.hasUpdated && oldShowButton === showButton) {\n      return;\n    }\n\n    this._show = showButton || this._alwaysVisible;\n\n    if (!showButton) {\n      if (this._unsubNotifications) {\n        this._unsubNotifications();\n        this._unsubNotifications = undefined;\n      }\n      return;\n    }\n\n    this._subscribeNotifications();\n  }\n\n  private _subscribeNotifications() {\n    if (this._unsubNotifications) {\n      throw new Error(\"Already subscribed\");\n    }\n    this._unsubNotifications = subscribeNotifications(\n      this.hass.connection,\n      (notifications) => {\n        this._hasNotifications = notifications.length > 0;\n      }\n    );\n  }\n\n  private _toggleMenu(): void {\n    fireEvent(this, \"hass-toggle-menu\");\n  }\n\n  static styles = css`\n    :host {\n      position: relative;\n    }\n    .dot {\n      pointer-events: none;\n      position: absolute;\n      background-color: var(--accent-color);\n      width: 12px;\n      height: 12px;\n      top: 9px;\n      right: 7px;\n      inset-inline-end: 7px;\n      inset-inline-start: initial;\n      border-radius: 50%;\n      border: 2px solid var(--app-header-background-color);\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-menu-button\": HaMenuButton;\n  }\n}\n","import type { SVGTemplateResult } from \"lit\";\nimport { css, LitElement, nothing, svg } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\n\n@customElement(\"ha-svg-icon\")\nexport class HaSvgIcon extends LitElement {\n  @property() public path?: string;\n\n  @property({ attribute: false }) public secondaryPath?: string;\n\n  @property({ attribute: false }) public viewBox?: string;\n\n  protected render(): SVGTemplateResult {\n    return svg`\n    <svg\n      viewBox=${this.viewBox || \"0 0 24 24\"}\n      preserveAspectRatio=\"xMidYMid meet\"\n      focusable=\"false\"\n      role=\"img\"\n      aria-hidden=\"true\"\n    >\n      <g>\n        ${\n          this.path\n            ? svg`<path class=\"primary-path\" d=${this.path}></path>`\n            : nothing\n        }\n        ${\n          this.secondaryPath\n            ? svg`<path class=\"secondary-path\" d=${this.secondaryPath}></path>`\n            : nothing\n        }\n      </g>\n    </svg>`;\n  }\n\n  static styles = css`\n    :host {\n      display: var(--ha-icon-display, inline-flex);\n      align-items: center;\n      justify-content: center;\n      position: relative;\n      vertical-align: middle;\n      fill: var(--icon-primary-color, currentcolor);\n      width: var(--mdc-icon-size, 24px);\n      height: var(--mdc-icon-size, 24px);\n    }\n    svg {\n      width: 100%;\n      height: 100%;\n      pointer-events: none;\n      display: block;\n    }\n    path.primary-path {\n      opacity: var(--icon-primary-opactity, 1);\n    }\n    path.secondary-path {\n      fill: var(--icon-secondary-color, currentcolor);\n      opacity: var(--icon-secondary-opactity, 0.5);\n    }\n  `;\n}\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-svg-icon\": HaSvgIcon;\n  }\n}\n","import type { CSSResultGroup, TemplateResult } from \"lit\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport \"../components/ha-icon-button-arrow-prev\";\nimport \"../components/ha-button\";\nimport \"../components/ha-menu-button\";\nimport type { HomeAssistant } from \"../types\";\nimport \"../components/ha-alert\";\n\n@customElement(\"hass-error-screen\")\nclass HassErrorScreen extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean }) public toolbar = true;\n\n  @property({ type: Boolean }) public rootnav = false;\n\n  @property({ type: Boolean }) public narrow = false;\n\n  @property() public error?: string;\n\n  protected render(): TemplateResult {\n    return html`\n      ${this.toolbar\n        ? html`<div class=\"toolbar\">\n            ${this.rootnav || history.state?.root\n              ? html`\n                  <ha-menu-button\n                    .hass=${this.hass}\n                    .narrow=${this.narrow}\n                  ></ha-menu-button>\n                `\n              : html`\n                  <ha-icon-button-arrow-prev\n                    .hass=${this.hass}\n                    @click=${this._handleBack}\n                  ></ha-icon-button-arrow-prev>\n                `}\n          </div>`\n        : \"\"}\n      <div class=\"content\">\n        <ha-alert alert-type=\"error\">${this.error}</ha-alert>\n        <slot>\n          <ha-button appearance=\"plain\" size=\"small\" @click=${this._handleBack}>\n            ${this.hass?.localize(\"ui.common.back\")}\n          </ha-button>\n        </slot>\n      </div>\n    `;\n  }\n\n  private _handleBack(): void {\n    history.back();\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      css`\n        :host {\n          display: block;\n          height: 100%;\n          background-color: var(--primary-background-color);\n        }\n        .toolbar {\n          display: flex;\n          align-items: center;\n          font-size: var(--ha-font-size-xl);\n          height: var(--header-height);\n          padding: 8px 12px;\n          pointer-events: none;\n          background-color: var(--app-header-background-color);\n          font-weight: var(--ha-font-weight-normal);\n          color: var(--app-header-text-color, white);\n          border-bottom: var(--app-header-border-bottom, none);\n          box-sizing: border-box;\n        }\n        @media (max-width: 599px) {\n          .toolbar {\n            padding: 4px;\n          }\n        }\n        ha-icon-button-arrow-prev {\n          pointer-events: auto;\n        }\n        .content {\n          color: var(--primary-text-color);\n          height: calc(100% - var(--header-height));\n          display: flex;\n          padding: 16px;\n          align-items: center;\n          justify-content: center;\n          flex-direction: column;\n          box-sizing: border-box;\n        }\n        a {\n          color: var(--primary-color);\n        }\n        ha-alert {\n          margin-bottom: 16px;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hass-error-screen\": HassErrorScreen;\n  }\n}\n","// A small polyfill for CSSStateSet\nexport class StateSet extends Set<string> {\n  private _el: Element;\n\n  private _existing: null | Set<string> = null;\n\n  constructor(el: Element, existing: Set<string> | null = null) {\n    super();\n    this._el = el;\n    this._existing = existing;\n  }\n\n  add(state: string) {\n    super.add(state);\n    const existing = this._existing;\n    if (existing) {\n      try {\n        existing.add(state);\n      } catch {\n        existing.add(`--${state}`);\n      }\n    } else {\n      this._el.setAttribute(`state-${state}`, \"\");\n    }\n    return this;\n  }\n\n  delete(state: string) {\n    super.delete(state);\n    const existing = this._existing;\n    if (existing) {\n      existing.delete(state);\n      existing.delete(`--${state}`);\n    } else {\n      this._el.removeAttribute(`state-${state}`);\n    }\n    return true;\n  }\n\n  has(state: string) {\n    return super.has(state);\n  }\n\n  clear() {\n    for (const state of this) this.delete(state);\n  }\n}\nconst replaceSync = CSSStyleSheet.prototype.replaceSync;\nObject.defineProperty(CSSStyleSheet.prototype, \"replaceSync\", {\n  value: function (text) {\n    text = text.replace(\n      /:state\\(([^)]+)\\)/g,\n      \":where(:state($1), :--$1, [state-$1])\"\n    );\n    replaceSync.call(this, text);\n  },\n});\n","'use strict';\nvar arraySlice = require('../internals/array-slice');\n\nvar floor = Math.floor;\n\nvar sort = function (array, comparefn) {\n  var length = array.length;\n\n  if (length < 8) {\n    // insertion sort\n    var i = 1;\n    var element, j;\n\n    while (i < length) {\n      j = i;\n      element = array[i];\n      while (j && comparefn(array[j - 1], element) > 0) {\n        array[j] = array[--j];\n      }\n      if (j !== i++) array[j] = element;\n    }\n  } else {\n    // merge sort\n    var middle = floor(length / 2);\n    var left = sort(arraySlice(array, 0, middle), comparefn);\n    var right = sort(arraySlice(array, middle), comparefn);\n    var llength = left.length;\n    var rlength = right.length;\n    var lindex = 0;\n    var rindex = 0;\n\n    while (lindex < llength || rindex < rlength) {\n      array[lindex + rindex] = (lindex < llength && rindex < rlength)\n        ? comparefn(left[lindex], right[rindex]) <= 0 ? left[lindex++] : right[rindex++]\n        : lindex < llength ? left[lindex++] : right[rindex++];\n    }\n  }\n\n  return array;\n};\n\nmodule.exports = sort;\n","'use strict';\nvar userAgent = require('../internals/environment-user-agent');\n\nvar firefox = userAgent.match(/firefox\\/(\\d+)/i);\n\nmodule.exports = !!firefox && +firefox[1];\n","'use strict';\nvar UA = require('../internals/environment-user-agent');\n\nmodule.exports = /MSIE|Trident/.test(UA);\n","'use strict';\nvar userAgent = require('../internals/environment-user-agent');\n\nvar webkit = userAgent.match(/AppleWebKit\\/(\\d+)\\./);\n\nmodule.exports = !!webkit && +webkit[1];\n","'use strict';\nvar globalThis = require('../internals/global-this');\nvar IS_NODE = require('../internals/environment-is-node');\n\nmodule.exports = function (name) {\n  if (IS_NODE) {\n    try {\n      return globalThis.process.getBuiltinModule(name);\n    } catch (error) { /* empty */ }\n    try {\n      // eslint-disable-next-line no-new-func -- safe\n      return Function('return require(\"' + name + '\")')();\n    } catch (error) { /* empty */ }\n  }\n};\n"],"names":["ALERT_ICONS","info","warning","error","success","HaAlert","LitElement","render","html","_t","_","classMap","this","alertType","title","content","narrow","_t2","nothing","dismissable","_t3","_dismissClicked","fireEvent","args","styles","css","_t4","attribute","type","Boolean","HaButton","Button","attachInternals","internals","Object","defineProperty","value","StateSet","states","variant","HaIconButtonArrowPrev","_this$hass","disabled","label","hass","localize","_icon","mainWindow","HaIconButton","focus","_this$_button","_button","ifDefined","hideTitle","undefined","ariaHasPopup","path","shadowRootOptions","mode","delegatesFocus","reflect","String","NotificationStream","processMessage","streamMessage","notificationId","keys","notifications","assign","values","constructor","HaMenuButton","connectedCallback","super","_attachNotifOnConnect","_subscribeNotifications","disconnectedCallback","_unsubNotifications","_show","hasNotifications","_hasNotifications","dockedSidebar","_toggleMenu","firstUpdated","changedProps","hassio","_alwaysVisible","Number","window","parent","frontendVersion","willUpdate","has","oldHass","get","oldShowButton","showButton","hasUpdated","Error","subscribeNotifications","conn","onChange","stream","subscription","subscribeMessage","message","then","unsub","connection","length","HaSvgIcon","svg","viewBox","secondaryPath","HassErrorScreen","_history$state","toolbar","rootnav","history","state","root","_handleBack","back","_t5","Set","add","existing","_existing","_unused","_el","setAttribute","delete","removeAttribute","clear","el","replaceSync","CSSStyleSheet","prototype","text","replace","call","arraySlice","floor","Math","sort","array","comparefn","element","j","i","middle","left","right","llength","rlength","lindex","rindex","module","exports","firefox","match","UA","test","webkit","globalThis","IS_NODE","name","process","getBuiltinModule","Function"],"mappings":"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"}