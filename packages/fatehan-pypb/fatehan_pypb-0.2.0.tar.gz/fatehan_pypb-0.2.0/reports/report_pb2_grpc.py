# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from reports import report_pb2 as reports_dot_report__pb2

GRPC_GENERATED_VERSION = '1.74.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in reports/report_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class ReportServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.TraffixReport = channel.unary_unary(
                '/com.fatehan.reports.ReportService/TraffixReport',
                request_serializer=reports_dot_report__pb2.TraffixRequest.SerializeToString,
                response_deserializer=reports_dot_report__pb2.TraffixResponse.FromString,
                _registered_method=True)
        self.AreaSummaryReviewReport = channel.unary_unary(
                '/com.fatehan.reports.ReportService/AreaSummaryReviewReport',
                request_serializer=reports_dot_report__pb2.AreaSummaryReviewRequest.SerializeToString,
                response_deserializer=reports_dot_report__pb2.AreaSummaryReviewResponse.FromString,
                _registered_method=True)
        self.AreaSplitterReport = channel.unary_unary(
                '/com.fatehan.reports.ReportService/AreaSplitterReport',
                request_serializer=reports_dot_report__pb2.AreaSplitterRequest.SerializeToString,
                response_deserializer=reports_dot_report__pb2.AreaSplitterResponse.FromString,
                _registered_method=True)
        self.LogReport = channel.unary_unary(
                '/com.fatehan.reports.ReportService/LogReport',
                request_serializer=reports_dot_report__pb2.LogRequest.SerializeToString,
                response_deserializer=reports_dot_report__pb2.LogResponse.FromString,
                _registered_method=True)
        self.ShiftReport = channel.unary_unary(
                '/com.fatehan.reports.ReportService/ShiftReport',
                request_serializer=reports_dot_report__pb2.ShiftRequest.SerializeToString,
                response_deserializer=reports_dot_report__pb2.ShiftResponse.FromString,
                _registered_method=True)
        self.TripsReport = channel.unary_unary(
                '/com.fatehan.reports.ReportService/TripsReport',
                request_serializer=reports_dot_report__pb2.TripsRequest.SerializeToString,
                response_deserializer=reports_dot_report__pb2.TripsResponse.FromString,
                _registered_method=True)
        self.TrafficReport = channel.unary_unary(
                '/com.fatehan.reports.ReportService/TrafficReport',
                request_serializer=reports_dot_report__pb2.TrafficRequest.SerializeToString,
                response_deserializer=reports_dot_report__pb2.TrafficResponse.FromString,
                _registered_method=True)
        self.AttendanceReport = channel.unary_unary(
                '/com.fatehan.reports.ReportService/AttendanceReport',
                request_serializer=reports_dot_report__pb2.AttendanceRequest.SerializeToString,
                response_deserializer=reports_dot_report__pb2.AttendanceResponse.FromString,
                _registered_method=True)
        self.AttendanceXReport = channel.unary_unary(
                '/com.fatehan.reports.ReportService/AttendanceXReport',
                request_serializer=reports_dot_report__pb2.AttendanceXRequest.SerializeToString,
                response_deserializer=reports_dot_report__pb2.AttendanceResponse.FromString,
                _registered_method=True)
        self.DailyTrafficReport = channel.unary_unary(
                '/com.fatehan.reports.ReportService/DailyTrafficReport',
                request_serializer=reports_dot_report__pb2.DailyTrafficRequest.SerializeToString,
                response_deserializer=reports_dot_report__pb2.DailyTrafficResponse.FromString,
                _registered_method=True)
        self.TripsSummaryReport = channel.unary_unary(
                '/com.fatehan.reports.ReportService/TripsSummaryReport',
                request_serializer=reports_dot_report__pb2.TripsSummaryRequest.SerializeToString,
                response_deserializer=reports_dot_report__pb2.TripsSummaryResponse.FromString,
                _registered_method=True)
        self.ShiftSummaryReport = channel.unary_unary(
                '/com.fatehan.reports.ReportService/ShiftSummaryReport',
                request_serializer=reports_dot_report__pb2.ShiftSummaryRequest.SerializeToString,
                response_deserializer=reports_dot_report__pb2.ShiftSummaryResponse.FromString,
                _registered_method=True)
        self.WorkCycleReport = channel.unary_unary(
                '/com.fatehan.reports.ReportService/WorkCycleReport',
                request_serializer=reports_dot_report__pb2.WorkCycleRequest.SerializeToString,
                response_deserializer=reports_dot_report__pb2.WorkCycleResponse.FromString,
                _registered_method=True)
        self.TripReport = channel.unary_unary(
                '/com.fatehan.reports.ReportService/TripReport',
                request_serializer=reports_dot_report__pb2.TripReportRequest.SerializeToString,
                response_deserializer=reports_dot_report__pb2.TripReportResponse.FromString,
                _registered_method=True)
        self.DeviceDataReport = channel.unary_stream(
                '/com.fatehan.reports.ReportService/DeviceDataReport',
                request_serializer=reports_dot_report__pb2.DeviceDataRequest.SerializeToString,
                response_deserializer=reports_dot_report__pb2.DeviceDataResponse.FromString,
                _registered_method=True)
        self.RouteReviewReport = channel.unary_unary(
                '/com.fatehan.reports.ReportService/RouteReviewReport',
                request_serializer=reports_dot_report__pb2.RouteReviewRequest.SerializeToString,
                response_deserializer=reports_dot_report__pb2.RouteReviewResponse.FromString,
                _registered_method=True)
        self.TripPerformanceReport = channel.unary_unary(
                '/com.fatehan.reports.ReportService/TripPerformanceReport',
                request_serializer=reports_dot_report__pb2.TripPerformanceRequest.SerializeToString,
                response_deserializer=reports_dot_report__pb2.TripPerformanceResponse.FromString,
                _registered_method=True)
        self.DashboardIndividual = channel.unary_unary(
                '/com.fatehan.reports.ReportService/DashboardIndividual',
                request_serializer=reports_dot_report__pb2.DashboardIndividualRequest.SerializeToString,
                response_deserializer=reports_dot_report__pb2.DashboardIndividualResponse.FromString,
                _registered_method=True)
        self.RouteStopReport = channel.unary_unary(
                '/com.fatehan.reports.ReportService/RouteStopReport',
                request_serializer=reports_dot_report__pb2.RouteStopRequest.SerializeToString,
                response_deserializer=reports_dot_report__pb2.RouteStopResponse.FromString,
                _registered_method=True)
        self.CommandHistoryReport = channel.unary_unary(
                '/com.fatehan.reports.ReportService/CommandHistoryReport',
                request_serializer=reports_dot_report__pb2.CommandHistoryRequest.SerializeToString,
                response_deserializer=reports_dot_report__pb2.CommandHistoryResponse.FromString,
                _registered_method=True)
        self.ChartReport = channel.unary_stream(
                '/com.fatehan.reports.ReportService/ChartReport',
                request_serializer=reports_dot_report__pb2.ChartRequest.SerializeToString,
                response_deserializer=reports_dot_report__pb2.ChartResponse.FromString,
                _registered_method=True)
        self.SystemIoReport = channel.unary_unary(
                '/com.fatehan.reports.ReportService/SystemIoReport',
                request_serializer=reports_dot_report__pb2.SystemIoRequest.SerializeToString,
                response_deserializer=reports_dot_report__pb2.SystemIoResponse.FromString,
                _registered_method=True)


class ReportServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def TraffixReport(self, request, context):
        """global (maybe)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AreaSummaryReviewReport(self, request, context):
        """grpc-web:✅
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AreaSplitterReport(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LogReport(self, request, context):
        """grpc-web:✅
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ShiftReport(self, request, context):
        """fusion
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TripsReport(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TrafficReport(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AttendanceReport(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AttendanceXReport(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DailyTrafficReport(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TripsSummaryReport(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ShiftSummaryReport(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WorkCycleReport(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TripReport(self, request, context):
        """odyssey
        grpc-web:✅
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeviceDataReport(self, request, context):
        """grpc-web:✅
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RouteReviewReport(self, request, context):
        """grpc-web:✅
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TripPerformanceReport(self, request, context):
        """grpc-web:✅
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DashboardIndividual(self, request, context):
        """grpc-web:✅
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RouteStopReport(self, request, context):
        """grpc-web:✅
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CommandHistoryReport(self, request, context):
        """grpc-web:✅
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChartReport(self, request, context):
        """grpc-web:✅
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SystemIoReport(self, request, context):
        """grpc-web:✅
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ReportServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'TraffixReport': grpc.unary_unary_rpc_method_handler(
                    servicer.TraffixReport,
                    request_deserializer=reports_dot_report__pb2.TraffixRequest.FromString,
                    response_serializer=reports_dot_report__pb2.TraffixResponse.SerializeToString,
            ),
            'AreaSummaryReviewReport': grpc.unary_unary_rpc_method_handler(
                    servicer.AreaSummaryReviewReport,
                    request_deserializer=reports_dot_report__pb2.AreaSummaryReviewRequest.FromString,
                    response_serializer=reports_dot_report__pb2.AreaSummaryReviewResponse.SerializeToString,
            ),
            'AreaSplitterReport': grpc.unary_unary_rpc_method_handler(
                    servicer.AreaSplitterReport,
                    request_deserializer=reports_dot_report__pb2.AreaSplitterRequest.FromString,
                    response_serializer=reports_dot_report__pb2.AreaSplitterResponse.SerializeToString,
            ),
            'LogReport': grpc.unary_unary_rpc_method_handler(
                    servicer.LogReport,
                    request_deserializer=reports_dot_report__pb2.LogRequest.FromString,
                    response_serializer=reports_dot_report__pb2.LogResponse.SerializeToString,
            ),
            'ShiftReport': grpc.unary_unary_rpc_method_handler(
                    servicer.ShiftReport,
                    request_deserializer=reports_dot_report__pb2.ShiftRequest.FromString,
                    response_serializer=reports_dot_report__pb2.ShiftResponse.SerializeToString,
            ),
            'TripsReport': grpc.unary_unary_rpc_method_handler(
                    servicer.TripsReport,
                    request_deserializer=reports_dot_report__pb2.TripsRequest.FromString,
                    response_serializer=reports_dot_report__pb2.TripsResponse.SerializeToString,
            ),
            'TrafficReport': grpc.unary_unary_rpc_method_handler(
                    servicer.TrafficReport,
                    request_deserializer=reports_dot_report__pb2.TrafficRequest.FromString,
                    response_serializer=reports_dot_report__pb2.TrafficResponse.SerializeToString,
            ),
            'AttendanceReport': grpc.unary_unary_rpc_method_handler(
                    servicer.AttendanceReport,
                    request_deserializer=reports_dot_report__pb2.AttendanceRequest.FromString,
                    response_serializer=reports_dot_report__pb2.AttendanceResponse.SerializeToString,
            ),
            'AttendanceXReport': grpc.unary_unary_rpc_method_handler(
                    servicer.AttendanceXReport,
                    request_deserializer=reports_dot_report__pb2.AttendanceXRequest.FromString,
                    response_serializer=reports_dot_report__pb2.AttendanceResponse.SerializeToString,
            ),
            'DailyTrafficReport': grpc.unary_unary_rpc_method_handler(
                    servicer.DailyTrafficReport,
                    request_deserializer=reports_dot_report__pb2.DailyTrafficRequest.FromString,
                    response_serializer=reports_dot_report__pb2.DailyTrafficResponse.SerializeToString,
            ),
            'TripsSummaryReport': grpc.unary_unary_rpc_method_handler(
                    servicer.TripsSummaryReport,
                    request_deserializer=reports_dot_report__pb2.TripsSummaryRequest.FromString,
                    response_serializer=reports_dot_report__pb2.TripsSummaryResponse.SerializeToString,
            ),
            'ShiftSummaryReport': grpc.unary_unary_rpc_method_handler(
                    servicer.ShiftSummaryReport,
                    request_deserializer=reports_dot_report__pb2.ShiftSummaryRequest.FromString,
                    response_serializer=reports_dot_report__pb2.ShiftSummaryResponse.SerializeToString,
            ),
            'WorkCycleReport': grpc.unary_unary_rpc_method_handler(
                    servicer.WorkCycleReport,
                    request_deserializer=reports_dot_report__pb2.WorkCycleRequest.FromString,
                    response_serializer=reports_dot_report__pb2.WorkCycleResponse.SerializeToString,
            ),
            'TripReport': grpc.unary_unary_rpc_method_handler(
                    servicer.TripReport,
                    request_deserializer=reports_dot_report__pb2.TripReportRequest.FromString,
                    response_serializer=reports_dot_report__pb2.TripReportResponse.SerializeToString,
            ),
            'DeviceDataReport': grpc.unary_stream_rpc_method_handler(
                    servicer.DeviceDataReport,
                    request_deserializer=reports_dot_report__pb2.DeviceDataRequest.FromString,
                    response_serializer=reports_dot_report__pb2.DeviceDataResponse.SerializeToString,
            ),
            'RouteReviewReport': grpc.unary_unary_rpc_method_handler(
                    servicer.RouteReviewReport,
                    request_deserializer=reports_dot_report__pb2.RouteReviewRequest.FromString,
                    response_serializer=reports_dot_report__pb2.RouteReviewResponse.SerializeToString,
            ),
            'TripPerformanceReport': grpc.unary_unary_rpc_method_handler(
                    servicer.TripPerformanceReport,
                    request_deserializer=reports_dot_report__pb2.TripPerformanceRequest.FromString,
                    response_serializer=reports_dot_report__pb2.TripPerformanceResponse.SerializeToString,
            ),
            'DashboardIndividual': grpc.unary_unary_rpc_method_handler(
                    servicer.DashboardIndividual,
                    request_deserializer=reports_dot_report__pb2.DashboardIndividualRequest.FromString,
                    response_serializer=reports_dot_report__pb2.DashboardIndividualResponse.SerializeToString,
            ),
            'RouteStopReport': grpc.unary_unary_rpc_method_handler(
                    servicer.RouteStopReport,
                    request_deserializer=reports_dot_report__pb2.RouteStopRequest.FromString,
                    response_serializer=reports_dot_report__pb2.RouteStopResponse.SerializeToString,
            ),
            'CommandHistoryReport': grpc.unary_unary_rpc_method_handler(
                    servicer.CommandHistoryReport,
                    request_deserializer=reports_dot_report__pb2.CommandHistoryRequest.FromString,
                    response_serializer=reports_dot_report__pb2.CommandHistoryResponse.SerializeToString,
            ),
            'ChartReport': grpc.unary_stream_rpc_method_handler(
                    servicer.ChartReport,
                    request_deserializer=reports_dot_report__pb2.ChartRequest.FromString,
                    response_serializer=reports_dot_report__pb2.ChartResponse.SerializeToString,
            ),
            'SystemIoReport': grpc.unary_unary_rpc_method_handler(
                    servicer.SystemIoReport,
                    request_deserializer=reports_dot_report__pb2.SystemIoRequest.FromString,
                    response_serializer=reports_dot_report__pb2.SystemIoResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'com.fatehan.reports.ReportService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('com.fatehan.reports.ReportService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ReportService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def TraffixReport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/com.fatehan.reports.ReportService/TraffixReport',
            reports_dot_report__pb2.TraffixRequest.SerializeToString,
            reports_dot_report__pb2.TraffixResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AreaSummaryReviewReport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/com.fatehan.reports.ReportService/AreaSummaryReviewReport',
            reports_dot_report__pb2.AreaSummaryReviewRequest.SerializeToString,
            reports_dot_report__pb2.AreaSummaryReviewResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AreaSplitterReport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/com.fatehan.reports.ReportService/AreaSplitterReport',
            reports_dot_report__pb2.AreaSplitterRequest.SerializeToString,
            reports_dot_report__pb2.AreaSplitterResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def LogReport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/com.fatehan.reports.ReportService/LogReport',
            reports_dot_report__pb2.LogRequest.SerializeToString,
            reports_dot_report__pb2.LogResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ShiftReport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/com.fatehan.reports.ReportService/ShiftReport',
            reports_dot_report__pb2.ShiftRequest.SerializeToString,
            reports_dot_report__pb2.ShiftResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def TripsReport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/com.fatehan.reports.ReportService/TripsReport',
            reports_dot_report__pb2.TripsRequest.SerializeToString,
            reports_dot_report__pb2.TripsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def TrafficReport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/com.fatehan.reports.ReportService/TrafficReport',
            reports_dot_report__pb2.TrafficRequest.SerializeToString,
            reports_dot_report__pb2.TrafficResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AttendanceReport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/com.fatehan.reports.ReportService/AttendanceReport',
            reports_dot_report__pb2.AttendanceRequest.SerializeToString,
            reports_dot_report__pb2.AttendanceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AttendanceXReport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/com.fatehan.reports.ReportService/AttendanceXReport',
            reports_dot_report__pb2.AttendanceXRequest.SerializeToString,
            reports_dot_report__pb2.AttendanceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DailyTrafficReport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/com.fatehan.reports.ReportService/DailyTrafficReport',
            reports_dot_report__pb2.DailyTrafficRequest.SerializeToString,
            reports_dot_report__pb2.DailyTrafficResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def TripsSummaryReport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/com.fatehan.reports.ReportService/TripsSummaryReport',
            reports_dot_report__pb2.TripsSummaryRequest.SerializeToString,
            reports_dot_report__pb2.TripsSummaryResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ShiftSummaryReport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/com.fatehan.reports.ReportService/ShiftSummaryReport',
            reports_dot_report__pb2.ShiftSummaryRequest.SerializeToString,
            reports_dot_report__pb2.ShiftSummaryResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def WorkCycleReport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/com.fatehan.reports.ReportService/WorkCycleReport',
            reports_dot_report__pb2.WorkCycleRequest.SerializeToString,
            reports_dot_report__pb2.WorkCycleResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def TripReport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/com.fatehan.reports.ReportService/TripReport',
            reports_dot_report__pb2.TripReportRequest.SerializeToString,
            reports_dot_report__pb2.TripReportResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeviceDataReport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/com.fatehan.reports.ReportService/DeviceDataReport',
            reports_dot_report__pb2.DeviceDataRequest.SerializeToString,
            reports_dot_report__pb2.DeviceDataResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RouteReviewReport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/com.fatehan.reports.ReportService/RouteReviewReport',
            reports_dot_report__pb2.RouteReviewRequest.SerializeToString,
            reports_dot_report__pb2.RouteReviewResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def TripPerformanceReport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/com.fatehan.reports.ReportService/TripPerformanceReport',
            reports_dot_report__pb2.TripPerformanceRequest.SerializeToString,
            reports_dot_report__pb2.TripPerformanceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DashboardIndividual(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/com.fatehan.reports.ReportService/DashboardIndividual',
            reports_dot_report__pb2.DashboardIndividualRequest.SerializeToString,
            reports_dot_report__pb2.DashboardIndividualResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RouteStopReport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/com.fatehan.reports.ReportService/RouteStopReport',
            reports_dot_report__pb2.RouteStopRequest.SerializeToString,
            reports_dot_report__pb2.RouteStopResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CommandHistoryReport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/com.fatehan.reports.ReportService/CommandHistoryReport',
            reports_dot_report__pb2.CommandHistoryRequest.SerializeToString,
            reports_dot_report__pb2.CommandHistoryResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ChartReport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/com.fatehan.reports.ReportService/ChartReport',
            reports_dot_report__pb2.ChartRequest.SerializeToString,
            reports_dot_report__pb2.ChartResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SystemIoReport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/com.fatehan.reports.ReportService/SystemIoReport',
            reports_dot_report__pb2.SystemIoRequest.SerializeToString,
            reports_dot_report__pb2.SystemIoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
